const {Command} = require('cocoscore')
const {businesses} = require('../business.js')


module.exports = [
new Command({
	trigger: /^–±–∏–∑–Ω–µ—Å—ã\s?([0-9]+)?/i,
	//type: "raznoe",
	//name: "–ë–∏–∑–Ω–µ—Å—ã",
	//description: "—Å–ø–∏—Å–æ–∫ –±–∏–∑–Ω–µ—Å–æ–≤",
	async handler(ctx, bot) {
    	if(!ctx.body[1])
	{
		var text = `–±–∏–∑–Ω–µ—Å—ã:\n`;
		for(var i = 0; i < businesses.length; i++)
		{
			text += `${(ctx.user.business.length == 1 && ctx.user.business[0].id == i + 1) || (ctx.user.business.length == 2 && ctx.user.business[1].id == i + 1) ? 'üî∏' : 'üîπ'} ${i + 1}. ${businesses[i][0].name} - ${businesses[i][0].cost.toLocaleString()}$\n–ü—Ä–∏–±—ã–ª—å: ${businesses[i][0].earn.toLocaleString()}$/—á–∞—Å\n`;
		}
		return ctx.send(text);
	}
	if(ctx.user.business.length == 2) return ctx.send(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å 2 –±–∏–∑–Ω–µ—Å–∞`);

	ctx.body[1] = Number(ctx.body[1]) - 1;
	const sell = businesses[ctx.body[1]][0];
	if(sell == null) return;
	if(ctx.user.balance < sell.cost) return ctx.send(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	ctx.user.balance -= sell.cost;
	ctx.user.business.push({
		"id": ctx.body[1] + 1,
		"upgrade": 1,
		"workers": 1,
		"moneys": 0
	});

	return ctx.send(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${sell.cost.toLocaleString()}$`);
	}
}),
new Command({
	trigger: /^–±–∏–∑–Ω–µ—Å\s(\d)$/i,
	//type: "raznoe",
	//name: "–ë–∏–∑–Ω–µ—Å [1|2]",
	//description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∏–∑–Ω–µ—Å–∞",
	async handler(ctx, bot) {
   ctx.body[1] = Math.floor(Number(ctx.body[1]));
	if(ctx.body[1] < 1 || ctx.body[1] > 2) return ctx.send(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å [1 –∏–ª–∏ 2]`);
	if(ctx.user.business.length < ctx.body[1]) return ctx.send(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	ctx.body[1]--;
	const biz = businesses[ctx.user.business[ctx.body[1]].id - 1][ctx.user.business[ctx.body[1]].upgrade - 1];

	return ctx.send(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "${biz.name}":
	üí∏ –ü—Ä–∏–±—ã–ª—å: ${Math.floor(biz.earn / biz.workers * ctx.user.business[ctx.body[1]].workers).toLocaleString()}$/—á–∞—Å
	üíº –†–∞–±–æ—á–∏—Ö: ${ctx.user.business[ctx.body[1]].workers}/${biz.workers}
	üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${ctx.user.business[ctx.body[1]].moneys.toLocaleString()}$

	${ (businesses[ctx.user.business[ctx.body[1]].id - 1][ctx.user.business[ctx.body[1]].upgrade] != null ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ! (" + businesses[ctx.user.business[ctx.body[1]].id - 1][ctx.user.business[ctx.body[1]].upgrade].cost.toLocaleString() + "$)" : "") }`);
	}
}),
new Command({
	trigger: /^–±–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å\s(.*)/i,
	//type: "raznoe",
	//name: "",
	//description: "",
	async handler(ctx, bot) {
		ctx.body[1] = Math.floor(Number(ctx.body[1]));

		if(ctx.body[1] < 1 || ctx.body[1] > 2) return ctx.send(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å [1|2]`);
		if(ctx.user.business.length < ctx.body[1]) return ctx.send(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	i = ctx.body[1]--;
		if(businesses[ctx.user.business[ctx.body[1]].id - 1][ctx.user.business[ctx.body[1]].upgrade] == null) return ctx.send(`–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	
	const cost = businesses[ctx.user.business[i].id - 1][ctx.user.business[i].upgrade].cost;
	if(cost > ctx.user.balance) return ctx.send(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è`);
	ctx.user.balance -= cost;
	ctx.user.business[i].upgrade++;

	return ctx.send(`–≤—ã —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å #${i + 1} –∑–∞ ${cost.toLocaleString()}$`);
	}
}),
new Command({
	trigger: /^–±–∏–∑–Ω–µ—Å\s—Å–Ω—è—Ç—å\s(.*)\s(.*)/i,
	type: "raznoe",
	name: "",
	description: "",
	async handler(ctx, bot) {
	ctx.body[1] = Math.floor(Number(ctx.body[1]));
	if(ctx.body[1] < 1 || ctx.body[1] > 2) return ctx.send(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å [1|2] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(ctx.user.business.length < ctx.body[1]) return ctx.send(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	ctx.body[1]--;
	ctx.body[2] = ctx.body[2].replace(/(\.|\,)/ig, '');
	ctx.body[2] = ctx.body[2].replace(/(–∫|k)/ig, '000');
	ctx.body[2] = ctx.body[2].replace(/(–º|m)/ig, '000000');
	ctx.body[2] = ctx.body[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, ctx.user.business[ctx.body[1]].moneys);
	if(!Number(ctx.body[2])) return;
	ctx.body[2] = Math.floor(Number(ctx.body[2]));
	if(ctx.body[2] <= 0) return ctx.send(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å—Ç–æ–ª—å–∫–æ —Å–æ —Å—á—ë—Ç–∞ –±–∏–∑–Ω–µ—Å–∞`);
	if(ctx.body[2] > ctx.user.business[ctx.body[1]].moneys) return ctx.send(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç–µ —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);

	ctx.user.balance += ctx.body[2];
	ctx.user.business[ctx.body[1]].moneys -= ctx.body[2];

	return ctx.send(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(ctx.body[2])}$`);
	}
})/*
new Command({
	trigger: /^/i,
	type: "raznoe",
	name: "",
	description: "",
	async handler(ctx, bot) {

	}
})*/
]