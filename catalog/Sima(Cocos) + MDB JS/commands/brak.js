const {Command} = require('cocoscore')

module.exports = [
new Command({
	trigger: /^–±—Ä–∞–∫\s(.*)/i,
	type: "raznoe",
	name: "–ë—Ä–∞–∫ [—Å—Å—ã–ª–∫–∞]",
	description: "—Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.",
	emoji: "üíç",
	async handler(ctx, bot) {
		 let user = await bot.vk.snippets.resolveResource(ctx.body[1])
     		if(!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
        		let userFound = await bot.db.getModel('user').findOne({vkId: userId});	

	if(ctx.user.partner) return ctx.send(`–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä!`);
	//if(Number(ctx.body[1]) === ctx.user.vkId) return ctx.send(`—Ç—ã —á—ë, –∫—Ç–æ –Ω–∞ —Å–µ–±–µ —Ç–æ –∂–µ–Ω–∏—Ç—Å—è?`);

	if(userFound.partner) return ctx.send(`—ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ`);
	if(userFound.requests.find(x=> x == userId)) return ctx.send(`–≤—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É`);
	if(ctx.user.requests.find(x=> x == userId))
	{
		ctx.user.requests = [];
		ctx.user.partner = userFound.vkId;

		userFound.requests = [];
		userFound.partner = ctx.user.vkId;
		userFound.save();

		return ctx.send(`–≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º "${userFound.nickname}"`);
	}

	userFound.requests.push(ctx.user.vkId);
	userFound.save()

	bot.vk.api.call('messages.send', {user_id: userFound.vkId, message: `üíç –ö—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.\n‚Ñπ –ù–∞–ø–∏—à–∏—Ç–µ "–ë—Ä–∞–∫–∏", —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.`, random_id: 0})
	return ctx.send(`–≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É "${userFound.nickname}"`);
}
}),
new Command({
	trigger: /^–±—Ä–∞–∫–∏/i,
		type: "raznoe",
	name: "–ë—Ä–∞–∫–∏",
	description: "–°–ø–∏—Å–æ–∫ –±—Ä–∞–∫–æ–≤",
	emoji: "‚†Ä‚†ÄüìÉ",
	async handler(ctx, bot) {
		if(ctx.user.requests.length < 1) return ctx.send(`–≤–∞–º –µ—â—ë –Ω–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`)
		let a = ctx.user.requests.map((x) => `- @id${x}`).join('\n')
		if(ctx.user.partner) return ctx.send(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);
		return ctx.send(`–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:\n ${a}\n\n‚Ñπ –ß—Ç–æ –±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫ —Å –æ–¥–Ω–∏–º –∏–∑ —ç—Ç–∏—Ö, –Ω–∞–ø–∏—à–∏—Ç–µ "–ë—Ä–∞–∫ [ID]`);
	}
}),
new Command({
	trigger: /^—Ä–∞–∑–≤–æ–¥/i,
		type: "raznoe",
	name: "–†–∞–∑–≤–æ–¥",
	description: "—Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å",
	emoji: "‚†Ä‚†Äüíî",
	async handler(ctx, bot) {
	let userFound = await bot.db.getModel('user').findOne({vkId: ctx.user.partner});
	if(!ctx.user.partner) return ctx.send(`–≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);

	userFound.partner = 0;
	ctx.user.partner = 0;

	userFound.save()
	return ctx.send(`–≤—ã —Ç–µ–ø–µ—Ä—å —Å–≤–æ–±–æ–¥–Ω—ã–π —á–µ–ª–æ–≤–µ–∫`);
}
})
]