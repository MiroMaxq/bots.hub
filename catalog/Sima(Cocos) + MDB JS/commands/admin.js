const {
    Command,
    Utils
} = require('cocoscore')

const {
	getUnix
} = require('../functions.js')

module.exports = [
    new Command({
        trigger: /^admin/i,
        permission: 1,
        handler(ctx, bot) {
            let admin = bot.commander.commands
                .filter((command) => command.type == "admin")
                .map((command) => `${command.emoji} ${command.name} -- ${command.description}`)
                .join('\n');

            ctx.send(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n` + admin)
        }
    }),
    new Command({
        trigger: /^(?:ban)\s(.*)?$/i,
        type: "admin",
        name: "Ban [—Å—Å—ã–ª–∫–∞]",
        description: "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banned = true
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id${userId} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`)
        }
    }),
    new Command({
        trigger: /^(?:unban)\s(.*)?$/i,
        type: "admin",
        name: "Unban [—Å—Å—ã–ª–∫–∞]",
        description: "—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banned = false
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id${userId} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`)
        }
    }),
    new Command({
        trigger: /^(?:banrep)\s(.*)?$/i,
        type: "admin",
        name: "Banrep [—Å—Å—ã–ª–∫–∞]",
        description: "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banreport = true
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç!!`)
        }
    }),
    new Command({
        trigger: /^(?:unbanrep)\s(.*)?$/i,
        type: "admin",
        name: "Unbanrep [—Å—Å—ã–ª–∫–∞]",
        description: "—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banreport = false
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç.`)
        }
    }),
    new Command({
        trigger: /^(?:banpay)\s(.*)?$/i,
        type: "admin",
        name: "Banpay [—Å—Å—ã–ª–∫–∞]",
        description: "–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–µ—Ä–µ–¥–∞—á",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banpay = true
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} –∑–∞–ø—Ä–µ—â–µ–Ω—ã –ø–µ—Ä–µ–¥–∞—á–∏ –¥–µ–Ω–µ–≥`)
        }
    }),
    new Command({
        trigger: /^(?:unbanpay)\s(.*)?$/i,
        type: "admin",
        name: "unbanpay [—Å—Å—ã–ª–∫–∞]",
        description: "—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–µ—Ä–µ–¥–∞—á",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.banpay = false
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –ø–µ—Ä–µ–¥–∞—á–∏ –¥–µ–Ω–µ–≥`)
        }
    }),
    new Command({
        trigger: /^(?:bantop)\s(.*)?$/i,
        type: "admin",
        name: "Bantop [—Å—Å—ã–ª–∫–∞]",
        description: "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ–ø–∞",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.bantop = true
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} –æ—Ç–∫–ª—é—á—ë–Ω —Ç–æ–ø.`)
        }
    }),
    new Command({
        trigger: /^(?:unbantop)\s(.*)?$/i,
        type: "admin",
        name: "Unbantop [—Å—Å—ã–ª–∫–∞]",
        description: "—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ç–æ–ø–∞",
        emoji: "üÖ∞",
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let usr = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!usr) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            usr.bantop = false
            usr.save()
            ctx.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${userId} –≤–∫–ª—é—á—ë–Ω —Ç–æ–ø.`)
        }
    }),
    new Command({
        trigger: /^(?:get)\s?(.*)$/i,
        type: "admin",
        name: 'get [—Å—Å—ã–ª–∫–∞]',
        description: '–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        emoji: 'üÖ∞',
        permission: 1,
        async handler(ctx, bot) {
            if (ctx.body[1]) {
            let text = '';
                let user = await bot.vk.snippets.resolveResource(ctx.body[1])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
                let userFound = await bot.db.getModel('user').findOne({
                    vkId: userId
                })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

        if(userFound.home || userFound.apartment || userFound.phone || userFound.airplane || userFound.car || userFound.yacht || userFound.pit) text += "\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n";
        if(userFound.pit) text += `‚†Äüêº –ü–∏—Ç–æ–º–µ—Ü: ${userFound.pit}\n`
        if(userFound.car) text += `‚†Äüöò –ú–∞—à–∏–Ω–∞: ${userFound.car}\n`
        if(userFound.airplane) text += `‚†Ä‚úà –°–∞–º–æ–ª—ë—Ç: ${userFound.airplane}\n`
        if(userFound.home) text += `‚†Äüè† –î–æ–º: ${userFound.home}\n`
        if(userFound.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${userFound.apartment}\n`
        if(userFound.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${userFound.phone}\n`
        if(userFound.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${userFound.yacht}`

                ctx.send(`–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
üîé ID: ${userFound.vkId}
üñä –ù–∏–∫: ${userFound.nickname}
üí¨ –ü—Ä–µ—Ñ–∏–∫—Å: ${userFound.prefix ? `${userFound.prefix }` : `‚ùå`}
üí∞ –î–µ–Ω–µ–≥: ${userFound.balance.toLocaleString()}$
üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${userFound.bitcoin.toLocaleString()}
üëë –†–µ–π—Ç–∏–Ω–≥: ${userFound.rating.toLocaleString()}

${text}

üí† –ë–æ–Ω—É—Å: ${(getUnix() - userFound.bonus) < 86400000 ? "‚úÖ –ü–æ–ª—É—á–µ–Ω" : "‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω"}
üÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: ${userFound.banreport ? "‚úÖ" : "‚ùå"}
üîÅ –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á: ${userFound.banpay ? "‚úÖ" : "‚ùå"}
üîù –ë–∞–Ω —Ç–æ–ø–∞: ${userFound.bantop ? "‚úÖ" : "‚ùå"}
üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${userFound.banned ? "‚úÖ" : "‚ùå"}
üÖ∞ –ê–¥–º–∏–Ω –ø—Ä–∞–≤–∞: ${userFound.permission ? "‚úÖ" : "‚ùå"}
‚úâ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–ø–∏—Å–∞–ª: ${userFound.lastMessage}

üìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${userFound.regDate}
`)
            }
            if (ctx.forwards[0]) {
                let text = '';
                let user = ctx.forwards[0].senderId
                let userFound = await bot.db.getModel('user').findOne({
                    vkId: user
                })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

                            if(userFound.home || userFound.apartment || userFound.phone || userFound.airplane || userFound.car || userFound.yacht || userFound.pit) text += "\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n";
        if(userFound.pit) text += `‚†Äüêº –ü–∏—Ç–æ–º–µ—Ü: ${userFound.pit}\n`
        if(userFound.car) text += `‚†Äüöò –ú–∞—à–∏–Ω–∞: ${userFound.car}\n`
        if(userFound.airplane) text += `‚†Ä‚úà –°–∞–º–æ–ª—ë—Ç: ${userFound.airplane}\n`
        if(userFound.home) text += `‚†Äüè† –î–æ–º: ${userFound.home}\n`
        if(userFound.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${userFound.apartment}\n`
        if(userFound.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${userFound.phone}\n`
        if(userFound.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${userFound.yacht}`

                ctx.send(`–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
üîé ID: ${userFound.vkId}
üñä –ù–∏–∫: ${userFound.nickname}
üí¨ –ü—Ä–µ—Ñ–∏–∫—Å: ${userFound.prefix ? `${userFound.prefix }` : `‚ùå`}
üí∞ –î–µ–Ω–µ–≥: ${userFound.balance.toLocaleString()}$
üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${userFound.bitcoin.toLocaleString()}
üëë –†–µ–π—Ç–∏–Ω–≥: ${userFound.rating.toLocaleString()}

${text}

üí† –ë–æ–Ω—É—Å: ${(getUnix() - userFound.bonus) < 86400000 ? "‚úÖ –ü–æ–ª—É—á–µ–Ω" : "‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω"}
üÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: ${userFound.banreport ? "‚úÖ" : "‚ùå"}
üîÅ –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á: ${userFound.banpay ? "‚úÖ" : "‚ùå"}
üîù –ë–∞–Ω —Ç–æ–ø–∞: ${userFound.bantop ? "‚úÖ" : "‚ùå"}
üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${userFound.banned ? "‚úÖ" : "‚ùå"}
üÖ∞ –ê–¥–º–∏–Ω –ø—Ä–∞–≤–∞: ${userFound.permission ? "‚úÖ" : "‚ùå"}
‚úâ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–ø–∏—Å–∞–ª: ${userFound.lastMessage}

üìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${userFound.regDate}
`)
            }
            if (ctx.replyMessage) {
                let text = '';
                let user = ctx.replyMessage.senderId
                let userFound = await bot.db.getModel('user').findOne({
                    vkId: user
                })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        if(userFound.home || userFound.apartment || userFound.phone || userFound.airplane || userFound.car || userFound.yacht || userFound.pit) text += "\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n";
        if(userFound.pit) text += `‚†Äüêº –ü–∏—Ç–æ–º–µ—Ü: ${userFound.pit}\n`
        if(userFound.car) text += `‚†Äüöò –ú–∞—à–∏–Ω–∞: ${userFound.car}\n`
        if(userFound.airplane) text += `‚†Ä‚úà –°–∞–º–æ–ª—ë—Ç: ${userFound.airplane}\n`
        if(userFound.home) text += `‚†Äüè† –î–æ–º: ${userFound.home}\n`
        if(userFound.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${userFound.apartment}\n`
        if(userFound.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${userFound.phone}\n`
        if(userFound.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${userFound.yacht}`

                ctx.send(`–ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
üîé ID: ${userFound.vkId}
üñä –ù–∏–∫: ${userFound.nickname}
üí¨ –ü—Ä–µ—Ñ–∏–∫—Å: ${userFound.prefix ? `${userFound.prefix }` : `‚ùå`}
üí∞ –î–µ–Ω–µ–≥: ${userFound.balance.toLocaleString()}$
üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${userFound.bitcoin.toLocaleString()}
üëë –†–µ–π—Ç–∏–Ω–≥: ${userFound.rating.toLocaleString()}

${text}

üí† –ë–æ–Ω—É—Å: ${(getUnix() - userFound.bonus) < 86400000 ? "‚úÖ –ü–æ–ª—É—á–µ–Ω" : "‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω"}
üÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: ${userFound.banreport ? "‚úÖ" : "‚ùå"}
üîÅ –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á: ${userFound.banpay ? "‚úÖ" : "‚ùå"}
üîù –ë–∞–Ω —Ç–æ–ø–∞: ${userFound.bantop ? "‚úÖ" : "‚ùå"}
üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${userFound.banned ? "‚úÖ" : "‚ùå"}
üÖ∞ –ê–¥–º–∏–Ω –ø—Ä–∞–≤–∞: ${userFound.permission ? "‚úÖ" : "‚ùå"}
‚úâ –°–æ–æ–±—â–µ–Ω–∏–π –Ω–∞–ø–∏—Å–∞–ª: ${userFound.lastMessage}

üìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${userFound.regDate}
			`)
            }
        }
    }),
    new Command({
        trigger: /^(?:–≤—ã–¥–∞—Ç—å|give)\s([0-9]+)\s?(.+)?/is,
        type: "admin",
        name: 'give [—Å—É–º–º–∞] [—Å—Å—ã–ª–∫–∞]',
        description: '–≤–∞—ã–¥–∞—á–∞ –¥–µ–Ω–µ–≥',
        emoji: 'üÖ∞',
        permission: 1,
        async handler(ctx, bot) {
            var userId
            var amount = Number(ctx.body[1])
            if (ctx.body[2]) {
                let user = await bot.vk.snippets.resolveResource(ctx.body[2])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
            } else userId = ctx.senderId
            let userFound = await bot.db.getModel('user').findOne({
                vkId: userId
            }).exec()
            if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            userFound.balance += amount
            userFound.save()
            bot.logger.info(`–í—ã–¥–∞—á–∞ —Å—Ä–µ–¥—Å—Ç–≤: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: vk.com/id${ctx.senderId} ${userId != ctx.senderId ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: vk.com/id${userId}`: '–≤—ã–¥–∞—á–∞ —Å–∞–º–æ–º—É —Å–µ–±–µ'} –°—É–º–º–∞: ${amount.toLocaleString()}$ `)
            return ctx.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ ${userId != ctx.senderId ? `–∏–≥—Ä–æ–∫—É [id${userFound.vkId}|${userFound.nickname}]`: '—Å–µ–±–µ'} ${amount.toLocaleString()}$`)
        }
    }),
    new Command({
        trigger: /^(?:addkey)\s(.*)\s(.+)/is,
        permission: 1,
        async handler(ctx, bot) {
            if (ctx.senderId !== 347241116) return;
            const Key = bot.db.getModel('key');

            var result = '';
            let charset = 'QWERTYUIOPASDFGHJKLZXCVBNM0123456789';
            for (let i = 0; i < 5; i++) {
                result += charset[Math.floor(Math.random() * (charset.length - 1))];
            }
            result += "-"
            for (let i = 0; i < 5; i++) {
                result += charset[Math.floor(Math.random() * (charset.length - 1))];
            }
            result += "-"
            for (let i = 0; i < 5; i++) {
                result += charset[Math.floor(Math.random() * (charset.length - 1))];
            }

            let newPromo = new Key({
                key: result,
                balance: Number(ctx.body[1]),
                users: [],
                activation: Number(ctx.body[2])
            });

            await newPromo.save();
            return ctx.send(`–ö–ª—é—á –Ω–∞ ${ctx.body[1].toLocaleString()} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω \n- ${result}\n–ê–∫–∏–≤–∞—Ü–∏–π: ${ctx.body[2]}`);
        }
    }),
    new Command({
        trigger: /^(?:–û—Ç–≤–µ—Ç)\s([0-9]+)\s(.*)?$/i,
        permission: 1,
        handler(ctx, bot) {
            bot.vk.api.call('messages.send', {
                user_id: ctx.body[1],
                message: `[REPLY ON REPORT]\n\n- ${ctx.body[2]}`,
                random_id: 0
            })
            ctx.send(`–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`);
        }
    }),
    new Command({
        trigger: /^rl|—Ä–ª?$/i,
        permission: 1,
        handler(ctx, bot) {
            ctx.send(`Rebooting...\nPlease wait`, {
                emoji: 'üòÄ'
            });
            process.exit(-1)
        }
    }),
    new Command({
        trigger: /^(?:\!|\/)(.*)/i,
        permission: 1,
        async handler(ctx, bot) {
            if (ctx.user.vkId === 347241116) {
                try {
                    const result = eval(ctx.body[1]);

                    if (typeof(result) === 'string') {
                        return ctx.send(`Type: string\nResult: ${result}`);
                    } else if (typeof(result) === 'number') {
                        return ctx.send(`Type: number\nResult: ${result}`);
                    } else if (typeof(result) === 'boolean') {
                        return ctx.send(`Type: boolean\nResult: ${result}`);
                    } else {
                        return ctx.send(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
                    }
                } catch (e) {
                    console.error(e);
                    return ctx.send(`Error:
        ${e.toString()}`);
                }
            }
        }
    }),
    new Command({
        trigger: /^all\s(.*)/i,
        permission: 1,
        async handler(ctx, bot) {
            if (ctx.senderId !== 347241116) return;
            let users = await bot.db.getModel('user').find({
                banned: false
            })
            let a = users.map((user) => user.vkId)
            let chats = await bot.db.getModel('chat').find({})
            let b = chats.map((chat) => chat.id)
            let text = ctx.text.slice(4)

            bot.vk.api.call('messages.send', {
                user_ids: a,
                message: `[NEWS]\n- ${text}`,
                random_id: 0
            })

            bot.vk.api.call('messages.send', {
                chat_id: b,
                message: `[NEWS]\n- ${ctx.body[1]}`,
                random_id: 0
            })
        }
    }),
    new Command({
        trigger: /^allchat\s(.*)/i,
        permission: 1,
        async handler(ctx, bot) {
            let chats = await bot.db.getModel('chat').find({})
            let b = chats.map((chat) => chat.id)
            let text = ctx.text.slice(4)

            bot.vk.api.call('messages.send', {
                peer_id: 2000000000 + b,
                message: `[NEWS]\n- ${text}`,
                random_id: 0
            })
        }
    }),
    new Command({
        trigger: /^(?:setnick)\s(.*)\s(.*)/is,
        type: "admin",
        name: "Setnick [—Å—Å—ã–ª–∫–∞] [–Ω–∏–∫]",
        description: "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
        emoji: 'üÖ∞',
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            userId = user.id
            let userFound = await bot.db.getModel('user').findOne({
                vkId: userId
            })
            if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("nickname", ctx.body[2])
            userFound.save()

            ctx.send(`–ù–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω.`)
        }
    }),
    new Command({
        trigger: /^ssh\s(.*)/i,
        permission: 1,
        async handler(ctx, bot) {
            if (ctx.senderId != 347241116) return;
            try {
                var gone = child.execSync(ctx.body[1])
            } catch (err) {
                var gone = err.toString()
            }
            return ctx.send(`${gone}`)
        }
    }),
    new Command({
    	trigger: /^setcar\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("car", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è –º–∞—à–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
    	trigger: /^sethome\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("home", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è –¥–æ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
    	trigger: /^setapart\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("apartment", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è –∫–≤–∞—Ä—Ç–∏—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
    	trigger: /^setphone\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("phone", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
    	trigger: /^setair\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("airplane", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è —Å–∞–º–æ–ª—ë—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
    	trigger: /^setyacht\n(.*)\n(.*)/i,
    	name: '',
    	description: '',
        permission: 1,
    	async handler(ctx, bot) {
    		let user = await bot.vk.snippets.resolveResource(ctx.body[1])
            	if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
            	userId = user.id
            		let userFound = await bot.db.getModel('user').findOne({
                		vkId: userId
            		})
            	if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("yacht", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è —è—Ö—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
    	}
    }),
    new Command({
        trigger: /^setpit\n(.*)\n(.*)/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
                    let userFound = await bot.db.getModel('user').findOne({
                        vkId: userId
                    })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("pit", ctx.body[2])
            userFound.save()

            ctx.send(`–ò–º—è –ø–∏—Ç–æ–º—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${ctx.body[2]}"`)
        }
    }),
    new Command({
        trigger: /^banlist/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
           let users = await bot.db.getModel('user').find({ banned: true })
           let text = ``
           text += `–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n`
           let a = users.map((x) => `üö´ @id${x.vkId}`).join('\n')

           ctx.send(`${text} ${a}`)
        }
    }),
    new Command({
        trigger: /^bantoplist/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
           let users = await bot.db.getModel('user').find({ bantop: true })
           let text = ``
           text += `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –±–∞–Ω—Ç–æ–ø–æ–º:\n\n`
           let a = users.map((x) => `- @id${x.vkId} (${x.nickname}) [${x.vkId}]`).join('\n')

           ctx.send(`${text} ${a}`)
        }
    }),
    new Command({
        trigger: /^banreplist/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
           let users = await bot.db.getModel('user').find({ banreport: true })
           let text = ``
           text += `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –±–∞–Ω—Ä–µ–ø–æ—Ä—Ç–æ–º:\n\n`
           let a = users.map((x) => `- @id${x.vkId} (${x.nickname}) [${x.vkId}]`).join('\n')

           ctx.send(`${text} ${a}`)
        }
    }),
    new Command({
        trigger: /^banpaylist/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
           let users = await bot.db.getModel('user').find({ banpay: true })
           let text = ``
           text += `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –±–∞–Ω–æ–º –ø–µ—Ä–µ–¥–∞—á:\n\n`
           let a = users.map((x) => `- @id${x.vkId} (${x.nickname}) [${x.vkId}]`).join('\n')

           ctx.send(`${text} ${a}`)
        }
    }),
new Command({
        trigger: /^setbtc\n(.*)\n(.*)/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
                    let userFound = await bot.db.getModel('user').findOne({
                        vkId: userId
                    })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("bitcoin", ctx.body[2])
            userFound.save()

            ctx.send(`–ë–∏—Ç–∫–æ–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ "${ctx.body[2]}"`)
        }
    }),
    new Command({
        trigger: /^setblc\n(.*)\n(.*)/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
                    let userFound = await bot.db.getModel('user').findOne({
                        vkId: userId
                    })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("balance", ctx.body[2])
            userFound.save()

            ctx.send(`–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${ctx.body[2]}"`)
        }
    }),
    new Command({
        trigger: /^setrat\n(.*)\n(.*)/i,
        name: '',
        description: '',
        permission: 1,
        async handler(ctx, bot) {
            let user = await bot.vk.snippets.resolveResource(ctx.body[1])
                if (!user || user.type != "user") return ctx.error('—É–∫–∞–∂–∏—Ç–µ –≤–µ—Ä–Ω—É—é —Å—Å—ã–ª–∫—É!')
                userId = user.id
                    let userFound = await bot.db.getModel('user').findOne({
                        vkId: userId
                    })
                if (!userFound) return ctx.error('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')

            await userFound.set("rating", ctx.body[2])
            userFound.save()

            ctx.send(`–†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *id${userId} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${ctx.body[2]}"`)
        }
    }),
    new Command({
        trigger: /^check\s?(.*)/i,
        async handler(ctx, bot) {
        	const {VK} = require('vk-io')
            const tok = new VK();
            var count = 0;
            var text = ``;
                if (!ctx.body[1]) return ctx.send(`–û—à–∏–±–∫–∞, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`);
            tok.api.call('groups.getTokenPermissions', {access_token: `${ctx.body[1]}`}).then(function(response) {
            var c = response;
            c.permissions.map(function(c) {
                text += `${c.name}, `;
                count += 1;
            })
        }).catch((error) => {
    return ctx.send(`–û—à–∏–±–∫–∞, —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.`);
})
tok.api.call('groups.getById', {access_token: `${ctx.body[1]}`, fields: "members_count,age_limits,wall,verified,trending,status,site,is_closed,type"})
.then(function(response) {
    var gr = response[0];
    return ctx.send(`
–¢–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã:  @club${gr.id} (${gr.name})
ID: ${gr.id}
–¢–∏–ø: ${gr.type.toString().replace(/group/gi, "GROUP").replace(/page/gi, "PUBLIC PABE").replace(/event/gi, "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ")}
–°—Ç–µ–Ω–∞: ${gr.wall.toString().replace(/0/gi, "–í—ã–∫–ª—é—á–µ–Ω–∞").replace(/1/gi, "OPEN").replace(/2/gi, "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∞—è").replace(/3/gi, "CLOSED")}
–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: ${gr.members_count}

–ü—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞(${count}):
[${text}]
`)
})
        }
    })
]