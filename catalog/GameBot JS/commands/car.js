let users = require('../bot/base/users.json');
let command = {
	pattern: /^(?:–º–∞—à–∏–Ω–∞|–º–∞—à–∏–Ω—ã|–∞–≤—Ç–æ) ?([0-9]+)?$/i,
	f: async (message, bot) => {
		if(!message.args[1])
		{
		return bot.reply(`–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—à–∏–Ω –¥–ª—è –≤–∞—Å:
			${bot.car.filter(x=> x.cost <= bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$`).join('\n')}
			
			–°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—à–∏–Ω –¥–ª—è –≤–∞—Å:
			${bot.car.filter(x=> x.cost > bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$`).join('\n')}`);
		}

		let car = bot.car.filter(x=> x.id === Number(message.args[1]));
		if(!car[0]) { return bot.reply(`‚ùå –ú–∞—à–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`) }

		if(car[0].cost > bot.user.balance.dollars) return bot.reply(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.`);

		users[message.senderId].balance.dollars -= car[0].cost;
		users[message.senderId].misc.car = car[0].id;

		return bot.reply(`‚úî –í—ã –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É <<${car[0].name}>>.`);
	}
}

module.exports = command;