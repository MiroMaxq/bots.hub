let users = require('../bot/base/users.json');
let command = {
	pattern: /^(?:—Ä–∞–±–æ—Ç–∞|—É—Å—Ç—Ä–æ–∏—Ç—å—Å—è) ?([0-9]+)?$/i,
	f: async (message, bot) => {
		if(!message.args[1])
		{
		return bot.reply(`–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç –¥–ª—è –≤–∞—Å:
			${bot.work.filter(x=> x.cost <= bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$ [${x.earn}$]`).join('\n')}
			
			–°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–±–æ—Ç –¥–ª—è –≤–∞—Å:
			${bot.work.filter(x=> x.cost > bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$ [${x.earn}$]`).join('\n')}`);
		}

		if(bot.user.misc.work !== 0) return bot.reply(`–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞: ${bot.user.balance.work}\n\n–ß—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–ø–∏—à–∏ <<—Ä–∞–±–æ—Ç–∞ –≤—ã–≤–µ—Å—Ç–∏>>`);
		if(message.args[1] === "–≤—ã–≤–µ—Å—Ç–∏") {bot.user.balance.dollars += bot.user.balance.work
		return bot.reply('–°—Ä–µ–¥—Å—Ç–≤–∞ –≤—ã–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ—à–µ–ª—ë–∫.')}
		let work = bot.work.filter(x=> x.id === Number(message.args[1]));
		if(!work[0]) { return bot.reply(`‚ùå –†–∞–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`) }

		if(work[0].cost > bot.user.balance.dollars) return bot.reply(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.`);

		users[message.senderId].balance.dollars -= work[0].cost;
		users[message.senderId].misc.work = work[0].id;

		return bot.reply(`‚úî –í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É <<${work[0].name}>>. –í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –Ω–∞ –≤–∞—à —Ä–∞–±–æ—á–∏–π —Å—á—ë—Ç`);
	}
}

module.exports = command;