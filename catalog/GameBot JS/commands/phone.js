let users = require('../bot/base/users.json');
let command = {
	pattern: /^(?:—Ç–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω—ã) ?([0-9]+)?$/i,
	f: async (message, bot) => {
		if(!message.args[1])
		{
		return bot.reply(`–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è –≤–∞—Å:
			${bot.phone.filter(x=> x.cost <= bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$`).join('\n')}
			
			–°–ø–∏—Å–æ–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è –≤–∞—Å:
			${bot.phone.filter(x=> x.cost > bot.user.balance.dollars).map(x=> `üìï ${x.id}. ${x.name} ‚Äî ${x.cost}$`).join('\n')}`);
		}

		let phone = bot.phone.filter(x=> x.id === Number(message.args[1]));
		if(!phone[0]) { return bot.reply(`‚ùå –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!`) }

		if(phone[0].cost > bot.user.balance.dollars) return bot.reply(`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.`);

		users[message.senderId].balance.dollars -= phone[0].cost;
		users[message.senderId].misc.phone = phone[0].id;

		return bot.reply(`‚úî –í—ã –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω <<${phone[0].name}>>.`);
	}
}

module.exports = command;