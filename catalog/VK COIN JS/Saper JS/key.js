const { VK, Keyboard } = require('vk-io');
const VKCOINAPI = require('node-vkcoinapi');
const fs = require("fs");
const acc = require("./base/acc.json");
const uid = require("./base/uid.json");

const vkcoin = new VKCOINAPI({ 
    key: '1',            // key coin 
    userId: 1,    // user id
    token: '1'    // user token
});

const vk = new VK({
	token: "1"    // group token
});

/*------------------------------------ [ –ë–æ—Ç ] ------------------------------------------*/

vk.updates.on('message', (context, next) => {
	if(!uid[context.senderId]) {
		vk.api.call('users.get', {
			user_ids: context.senderId,
			fields: 'name,lastname,sex,photo_100'
		}).then(res => {
			let user = res[0];
			acc.number += 1;
			uid[context.senderId] = { id: acc.number };
			acc.users[acc.number] = {
				uid: context.senderId,
				name: user.first_name,
				coins: 0,
				games: {
					bet: {
						win: 0,
						bets: 0
					},
					keys: [],

					win: 0,
					lose: 0,
					winmoney: 0,
					losemoney: 0,
				},
				bonus: {
					group: 0,
					
					time:0,
					games:0
				},
				menu: 'none'
			};
			return context.send({
				message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!`,
				keyboard: Keyboard.keyboard([
					Keyboard.textButton({ label: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', payload: { command: '–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' }
					})
				])
			});
		}).catch((error) => {console.log('err[prefix]'); }); 
		return;
	}

	const { messagePayload } = context;
	context.state.command = messagePayload && messagePayload.command ? messagePayload.command : null;

	return next();
});

/*------------------------------------ [ –ö–æ–º–∞–Ω–¥—ã ] ------------------------------------------*/

vk.updates.hear(/^(–Ω–∞—á–∞—Ç—å|–ø–æ–º–æ—â—å|–Ω–∞–∑–∞–¥)$/i, async (context) => { StartMenu(context); });

async function StartMenu(context) {
	let UserID = user_id(context.senderId);
	if(acc.users[UserID].menu == "StartGame_in") { 
		acc.users[UserID].coins += acc.users[UserID].games.bet.win;

		acc.users[UserID].games.win += 1;
		acc.users[UserID].games.winmoney += parseInt(acc.users[UserID].games.bet.bets);

		acc.users[UserID].menu = "none";

		await context.send({
			message: `
				–¢—ã –∑–∞–±—Ä–∞–ª –ø—Ä–∏–∑: ${acc.users[UserID].games.bet.win} (+${parseInt(acc.users[UserID].games.bet.win) - parseInt(acc.users[UserID].games.bet.bets)})
				–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ${acc.users[UserID].coins} –∫–æ–∏–Ω–æ–≤
			`,
			keyboard: Keyboard.keyboard([
				Keyboard.textButton({ label: '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' }),
				[
					Keyboard.textButton({ label: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' }),
					Keyboard.textButton({ label: '–í—ã–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã' })
				],
				[
					Keyboard.textButton({ label: '–ë–∞–ª–∞–Ω—Å' }),
					Keyboard.textButton({ label: '–ë–æ–Ω—É—Å—ã' })
				],
				Keyboard.textButton({ label: '–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤' }),
			])
		});
	}
	else if(acc.users[UserID].coins == 0) {
		await context.send({
			message: ` –¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0 –∫–æ–∏–Ω–æ–≤, –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å `,
			keyboard: Keyboard.keyboard([
				Keyboard.textButton({ label: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' })
			])
		});
	} else {
		await context.send({
			message: `
				–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
			`,
			keyboard: Keyboard.keyboard([
				Keyboard.textButton({ label: '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' }),
				[
					Keyboard.textButton({ label: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' }),
					Keyboard.textButton({ label: '–í—ã–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã' })
				],
				[
					Keyboard.textButton({ label: '–ë–∞–ª–∞–Ω—Å' }),
					Keyboard.textButton({ label: '–ë–æ–Ω—É—Å—ã' })
				],
				Keyboard.textButton({ label: '–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤' }),
			])
		});
	}
}

vk.updates.hear(/^–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É$/i, async (context) => {
	let UserID = user_id(context.senderId);
	acc.users[UserID].menu = "StartGame_new";
	await context.send({
		message: `
			–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç–æ–º —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏
			(–ù–∞–ø—Ä–∏–º–µ—Ä: 100)
		`,
		keyboard: Keyboard.keyboard([
			[
				Keyboard.textButton({ label: '50000' }),
				Keyboard.textButton({ label: '500000' }),
				Keyboard.textButton({ label: '1000000' }),
				Keyboard.textButton({ label: '10000000' })
			],
			[
				Keyboard.textButton({ label: '1000000' }),
				Keyboard.textButton({ label: `${Math.floor( acc.users[UserID].coins )}` }),
				Keyboard.textButton({ label: '–ù–∞–∑–∞–¥' })
			],
		])
	});
});

vk.updates.hear(/^(\d+)$/i, async (context) => {
	let UserID = user_id(context.senderId);
	if(context.$match[1] < 1) return;
	if(acc.users[UserID].menu == "StartGame_new") {
		if(acc.users[UserID].coins < context.$match[1]){
			await context.send({
			message: `–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–π–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`});
			return;
		}
		acc.users[UserID].games.bet = {
			win: context.$match[1],
			bets: context.$match[1]
		}
		acc.users[UserID].menu = "StartGame_in";
		acc.users[UserID].games.keys = [];
		acc.users[UserID].coins -= context.$match[1];
		acc.users[UserID].bonus.games += 1;

		await context.send({
			message: `–ù–æ–≤–∞—è –∏–≥—Ä–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–¥–µ –Ω–µ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–æ`,
			keyboard: Keyboard.keyboard([
				[
					Keyboard.textButton({ label: `1` }),
					Keyboard.textButton({ label: `2` }),
					Keyboard.textButton({ label: `3` })
				],
				[
					Keyboard.textButton({ label: `4` }),
					Keyboard.textButton({ label: `5` }),
					Keyboard.textButton({ label: `6` })
				],
				[
					Keyboard.textButton({ label: `7` }),
					Keyboard.textButton({ label: `8` }),
					Keyboard.textButton({ label: `9` })
				]
			])
		});
	} else if(acc.users[UserID].menu == "StartGame_in") {
		console.log(`–ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞`);
		console.log(acc.users[UserID].games.keys);

		if(random(1, 100) <= 40) { 
			acc.users[UserID].games.keys = [];
			acc.users[UserID].games.lose += 1;
			acc.users[UserID].games.losemoney += parseInt(acc.users[UserID].games.bet.bets);
			acc.users[UserID].games.bet = {
				win: 0,
				bets: 0
			};
			acc.users[UserID].menu = "none";
			StartMenu(context);
			context.send(`
				 üí£–¢—ã –ø–æ–¥–æ—Ä–≤–∞–ª—Å—è –Ω–∞ –º–∏–Ω–µ.
				 –±–∞–ª–∞–Ω—Å ${acc.users[UserID].coins} –∫–æ–π–Ω–æ–≤ !
			`);
			return;
		}
		acc.users[UserID].games.bet.win = parseInt(acc.users[UserID].games.bet.win) + (parseInt(acc.users[UserID].games.bet.win) * 20 / 100);
		console.log(acc.users[UserID].games.bet.win);
		acc.users[UserID].games.keys.push(context.$match[1]);
		var array = [[], [], []];
		for(var i = 1; i <= 9; i++) {
			console.log(acc.users[UserID].games.keys.indexOf(`${i}`));
			array[(i <= 3 && i > 0 ? 0 : (i <= 6 && i > 3 ? 1 : (i <= 9 && i > 6 ? 2 : 0)))].push(Keyboard.textButton({ label: ( acc.users[UserID].games.keys.indexOf(`${i}`) != -1 ? `–í—ã–±—Ä–∞–Ω–æ` : `${i}`) }))
		}
		
		await context.send({
			message: `
				‚úÖ –£—Å–ø–µ—Ö! –ú–∏–Ω—ã —Ç—É—Ç –Ω–µ—Ç.
				 +${parseInt(acc.users[UserID].games.bet.win) * 20 / 100} –∫–æ–∏–Ω–æ–≤ 
				 –ü—Ä–∏–∑: ${acc.users[UserID].games.bet.win}
			`,
			keyboard: Keyboard.keyboard([
				[
					array[0][0],
					array[0][1],
					array[0][2]
				],
				[
					array[1][0],
					array[1][1],
					array[1][2]
				],
				[
					array[2][0],
					array[2][1],
					array[2][2]
				],
				Keyboard.textButton({ label: `–ù–∞–∑–∞–¥` })
			])
		});
	}
});

vk.updates.hear(/^—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤$/i, async (context) => {
	var tops = [], text = '', yo = [];
	for(var i = 1; i <= acc.number; i++) {
		tops.push({ 
			id: i, 
			name: acc.users[i].name, 
			uid: acc.users[i].uid, 
			winmoney: acc.users[i].games.winmoney, 
			win: acc.users[i].games.win 
		});
	}
	tops.sort(function(a, b) {
		if (b.winmoney > a.winmoney) return 1
		if (b.winmoney < a.winmoney) return -1
		return 0
	})
	for (var g = 0; g < (tops.length >= 10 ? 10:tops.length); g++) {
		let ups = g;
		ups += 1;
		if(g <= 8) ups = `${ups}&#8419;`
		if(g == 9) ups = `&#128287;`
		yo.push({
			id: i, 
			name: tops[g].name,
			uid: tops[g].uid, 
			winmoney: tops[g].winmoney, 
			win: tops[g].win,
			smile: `${ups}`
		})
	}
	var people = "üëë –¢–û–ü –ò–ì–†–û–ö–û–í üëë \n" + yo.map(a => a.smile + ". [id" + a.uid + "|" + a.name + "] - " + a.winmoney + " (–ò–≥—Ä: " + a.win + ") üëë").join("\n")
	text += `${people}\n\n`; 
	await context.send(text);
});

vk.updates.hear(/^–ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å$/i, async (context) => {
	const link = vkcoin.api.getLink(20000000, false);
	await context.send(`
		–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: ${link}
		–ü–û–°–õ–ï –¢–û–ö–û –ö–ê–ö –í–´ –ü–û–ü–û–õ–ù–ò–õ–ò –ù–ê–ü–ò–®–ò "–ù–ê–ß–ê–¢–¨"!
	`);
});

vk.updates.hear(/^–≤—ã–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã$/i, async (context) => {
	let UserID = user_id(context.senderId);
	const paymentResult = await vkcoin.api.sendPayment(context.senderId, acc.users[UserID].coins * 1000);
	acc.users[UserID].coins = 0;
	await context.send(`–ú—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ç–µ–±–µ: ${paymentResult.response.amount / 1000} –∫–æ–∏–Ω–æ–≤`);
	//await context.send(`–ú—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ç–µ–±–µ: ${acc.users[UserID].coins} –∫–æ–∏–Ω–æ–≤`);
});

vk.updates.hear(/^–±–∞–ª–∞–Ω—Å$/i, async (context) => {
	let UserID = user_id(context.senderId);
	const myBalance = await vkcoin.api.getMyBalance();
	await context.send(`

		–í–∞—à –±–∞–ª–∞–Ω—Å: ${acc.users[UserID].coins} –∫–æ–∏–Ω–æ–≤
	`);
});

vk.updates.hear(/^–±–æ–Ω—É—Å—ã$/i, async (context) => {
	await context.send({
		message: `
			–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –µ—Å—Ç—å 2 —Ç–∏–ø–∞ –±–æ–Ω—É—Å–æ–≤:

			1. –ë–æ–Ω—É—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É ‚Äì 25 000 –∫–æ–∏–Ω–æ–≤. –ü–æ–ª—É—á–µ–Ω ‚úÖ
			–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –±–æ—Ç–∞ –ë–æ—Ç –°–∞–ø—ë—Ä –∏ –Ω–µ –æ—Ç–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.
			–ï—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –±—É–¥—É—Ç —Å–æ–±–ª—é–¥–µ–Ω—ã, —Ç–æ –í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è 25 000 –∫–æ–∏–Ω–æ–≤.

			2. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å ‚Äì –¥–æ 100 000 –∫–æ–∏–Ω–æ–≤.
			–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç 1 000 –¥–æ 100 000 –∫–æ–∏–Ω–æ–≤ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å" –≤ –±–æ—Ç–µ.
		`,
		keyboard: Keyboard.keyboard([
			[
				Keyboard.textButton({ label: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å' }),
				Keyboard.textButton({ label: '–ù–∞–∑–∞–¥' })
			]
		])
	});
});

vk.updates.hear(/^–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å$/i, async (context) => {
	let UserID = user_id(context.senderId);
	var now = new Date();
	console.log(now.getTime());
	if(acc.users[UserID].bonus.time > now.getTime()) return context.send(`–ï—â–µ –Ω–µ –ø—Ä–æ—à–ª–æ 24 —á–∞—Å–∞`);
	else if(acc.users[UserID].bonus.games < 10) { return context.send(`–¢–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å—ã–≥—Ä–∞—Ç—å –∏–≥—Ä, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –±–æ–Ω—É—Å: ${10 - acc.users[UserID].bonus.games}`); }

	var money = random(1000, 100000);
	acc.users[UserID].coins = parseInt(acc.users[UserID].coins) + parseInt(money);
	acc.users[UserID].bonus.time = now.getTime() + 86400000;
	acc.users[UserID].bonus.games = 0;
	await context.send(`–ë–µ—Ä–∏ —Å–≤–æ–π –±–æ–Ω—É—Å - ${money} :)`);
});

/*------------------------------------ [ –û—Å—Ç–∞–ª—å–Ω–∞—è –¥–∏—á—å ] ------------------------------------------*/

function user_id(id) {
	let ids = 0
	if(uid[id]){
		ids = uid[id].id
	}    
	return ids; 
}

function random(x, y) {
	return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
}

setInterval(function(){
	fs.writeFileSync("./base/acc.json", JSON.stringify(acc, null, "\t"));
	fs.writeFileSync("./base/uid.json", JSON.stringify(uid, null, "\t"));
	console.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!`);
}, 15000);

/*------------------------------------ [ –ü—É–ª—ã ] ------------------------------------------*/

async function run() {
	await vk.updates.start().catch(console.error);
    await vkcoin.updates.startPolling(async(event) => {
	    vkcoin.updates.onTransfer((event) => {
		    const { amount, fromId, id } = event;
		    const score = vkcoin.api.formatCoins(amount);
		    console.log( `–ü–æ—Å—Ç—É–ø–∏–ª –ø–ª–∞—Ç—ë–∂ (${id}) –æ—Ç https://vk.com/id${fromId} –≤ —Ä–∞–∑–º–µ—Ä–µ ${score} –∫–æ–∏–Ω–æ–≤` );

		    let UserID = user_id(fromId);
		    acc.users[UserID].coins += (amount / 1000);
		    vk.api.messages.send({ // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è vk-io –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞
		        user_id: 524929279, // –¢—É—Ç –≤–∞—à ID
		        message: `
					–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${amount / 1000} –∫–æ–∏–Ω–æ–≤
					–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${acc.users[UserID].coins}
					TX ID: ${id}
				`,
				keyboard: Keyboard.keyboard([
					Keyboard.textButton({ label: '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É' }),
					[
						Keyboard.textButton({ label: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' }),
						Keyboard.textButton({ label: '–í—ã–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã' })
					],
					[
						Keyboard.textButton({ label: '–ë–∞–ª–∞–Ω—Å' }),
						Keyboard.textButton({ label: '–ë–æ–Ω—É—Å—ã' })
					],
					Keyboard.textButton({ label: '–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤' }),
				])
		    });

		    /* –¢—É—Ç –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è */
		});

	    console.log(event);
	});
}

run().catch(console.error);


// fixed by @12kot3k