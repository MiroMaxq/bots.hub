module.exports = {
  tag: ["nocommand   xrmax –ø—Ä–æ—Å—Ç–æ   —è   –≥–µ–π   –ø–∞–Ω–∏–º–∞–µ—à  "], // noob no command
  button: ["deposit_"],
  func: async(context, { vk, _user, game, cmd, db, util }) => {
    let _cmd = cmd.cmd.split('_');
    let _name = { 'blue': `‚ù§`, 'black': `üíô`, 'even': `—á—ë—Ç–Ω–æ–µ`, 'noteven': `–Ω–µ—á—ë—Ç–Ω–æ–µ`, 'number': `—á–∏—Å–ª–æ` };
    let _num = 0; let _coin = 0;

    if(_cmd[1] == `number`) {
      _num = await context.question(`[id${context.senderId}|${_user.name}], —á–∏—Å–ª–æ?`);
      if(_num < 0 || _num > 36 || isNaN(_num)) { return context.send(`[id${context.senderId}|${_user.name}], –û—à–∏–±–∫–∞! –ú–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —á–∏—Å–ª–æ - –æ—Ç 0 –¥–æ 36.`); }
    }

    _coin = await context.question(`[id${context.senderId}|${_user.name}], —Å—Ç–∞–≤–∫—É –Ω–∞ ${_name[_cmd[1]]} ${(_cmd[1] == `number` ? _num:``)}:`);
    if(_coin < 1 || !_coin || isNaN(_coin) || _coin > _user.balance) { return; }

    db.get().collection('users').updateOne({ uid: context.senderId }, { $inc: { balance: -_coin, deposit: +_coin }, $push: { inGame: { $each: [ { peer_id: Number(context.peerId), coins: Number(_coin), type: _cmd[1], number: Number(_num) } ] } } });
    await context.send(`[id${context.senderId}|${_user.name}], –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Å—Ç–∞–≤–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ ${util.number_format(_coin)} –∫–æ–∏–Ω–æ–≤ –Ω–∞ ${_name[_cmd[1]]} ${(_cmd[1] == `number` ? _num:``)}`);
  }
};
