const rq = require("prequest");
const fs = require("fs");  
const { VK, MarketAttachment, Keyboard } = require('vk-io');
const vk = new VK();  
const str = new VK();  
const { updates } = vk;   
const bot = vk.updates;
let user = new VK();

user.setOptions({ 
token: 'b3923ba09b0a67b274615340fedc4e64a6ed9113a32d5672feb63baf1d26548200d541d52f28d7908856e' 
});
const acc = require("./base/acc.json");  
const f = require("./plugins/functions.js") //Functions

setInterval(async () => {
	fs.writeFileSync("./base/acc.json", JSON.stringify(acc, null, "\t"))   
}, 1500);

vk.setOptions({ 
	token: '0a9c511e28b3a1ae15add385ba7d89c435d660431fa3e0e70bfd14edb966dd6f2100f0249e45f9b418294', // 
	apiMode: 'parallel',  
	pollingGroupId: 75372115 // 
});  



var limits = {}

vk.updates.use(async (message, next) => {     

	if (message.is("message") && message.isOutbox) { return; } 
	message.user = message.senderId; 
	message.text = message.payload.text; 
 	const info = await vk.api.users.get({ user_id: message.user });
    if(!acc.users.find(a => a.vk === message.user)){ 
    	acc.number++; 
    	acc.users.push(
    		{
				id: acc.number, 
				vk: message.user,
				balance: 0,
				admin: 	0, 
				referal: 0,
				rass: 1,
				promo: false,
				statu: 0,
				donate: 0,
				ban: 	false,
				kazlock: 0,
				clan: 0,
				tag: "–ò–≥—Ä–æ–∫",
				country: "–Ω–µ –≤—ã–±—Ä–∞–Ω–æ",
				warn: 0,
				warn_p: [],
				bloks: {
				     dbonuce: false
			    },
				prefix: info[0].first_name,
				modules:    	
				{
					"1": 		{
						price: 	50,
						count:  0,
						profit: 1
					},
					"2": 		{
						price: 	1400,
						count:  0,
						profit: 2
					},
					"3": 		{
						price: 	2500,
						count:  0,
						profit: 3
					},
					"4": 		{
						price: 	5000,
						count:  0,
						profit: 4
					},
					"5": 		{
						price: 	10250,
						count:  0,
						profit: 6
					},
					"6": 		{
						price: 	15000,
						count:  0,
						profit: 8
					},
					"7": 		{
						price: 	40000,
						count:  0,
						profit: 10
					},
					"8": 		{
						price: 	80000,
						count:  0,
						profit: 20
					}
				}
			}
    	)
    	return message.send(`[@id${message.user}(${info[0].first_name})] => –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ [club75372115|Bot Panda | –ö–ª–∏–∫–µ—Ä]`)
    } 

	if (/\[club75372115\|(.*)\]/i.test(message.text)) { message.text = message.text.replace(/\[club75372115\|(.*)\]/ig, '').trim(); } 

   	if (!limits[message.user]) {
		limits[message.user] = {   
			block_bonus: 	0
		}
	} 
	
	const user = acc.users.find(a => a.vk === message.user);


	if (message.text) {   
		user.balance += 1;
		if(user.balance % 100 == 0){
			message.send(`@id${message.user}([${user.prefix})] => –í–∞—à –±–∞–ª–∞–Ω—Å: ${user.balance} COIN`);
		}
	}
	
	if(user.ban != false) return message.send(`‚úñ–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞!‚úñ\n–ü—Ä–∏—á–∏–Ω–∞: ${user.ban}`); 
	try { await next(); } catch (err) { console.error(err) }
	
	if(message.text){ 
		acc.msg += 1;
	}
	
	
		
});
bot.hear(/^(?:–ø—Ä–æ–º–æ –±–∞–±–∫–∏)\s?([^]+)?/i,  async message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let podpiska = await vk.api.groups.isMember({ group_id: 75372115, user_id: message.senderId});
	if(podpiska == 0) return message.send(`‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≥—Ä—É–ø–ø—É`);
	if(user.promo == true) return message.send(`‚ùå –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ü—Ä–æ–º–æ –±–∞–±–∫–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑`);
	if(acc.babki == 0) return message.send(`‚ùå –£–ø—Å, –∞–∫—Ü–∏—è —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –∏–ª–∏ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å`);
	let args = message.$match 
	user.balance += 500000
	user.promo = true
	acc.babki -= 1
	return message.send(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –ü—Ä–æ–º–æ –±–∞–±–∫–∏
	–û—Å—Ç–∞–ª–æ—Å—å ${acc.babki} –∞–∫—Ç–∏–≤–∞—Ü–∏–π`);
});
bot.hear(/^(?:—Ç–µ—Å—Ç)$/i, async (message, bot) => {		
		let user = acc.users.find(a => a.vk === message.user);
		let bravos = await vk.api.wall.getReposts({ owner_id: -75372115, post_id: 23476, count: 1000});
		if(bravos == 0) return message.send('‚úñ –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω, —Å–¥–µ–ª–∞–π —Ä–µ–ø–æ—Å—Ç!');
		return message.send(`‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω`);
	}); 
bot.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return;
	for(i in acc.users){
		if(acc.users[i]){
		vk.api.call('messages.send', {
			user_id: acc.users[i].vk,
			message: `${message.$match[1]}`,
			keyboard:JSON.stringify(
		{
			"one_time": true,
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": `–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏`
		},
			"color": "negative"
		}],				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
		]
			})
		});
	}
		}
	for(var i = 1; i < 900; i++) {
		vk.api.call('messages.send', {
			peer_id: 2000000000 + i,
			message: `${message.$match[1]}`
		});
	}
	return message.send(`–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
});
bot.hear(/^(?:–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	return message.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏!
	–í–≤–µ–¥–∏—Ç–µ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã–º –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É!`);
	user.rass = 0;
});
bot.hear(/^(?:–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	return message.send(`–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É, —Ç–µ–ø–µ—Ä—å –í—ã —Å–Ω–æ–≤–∞ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É!`);
	user.rass = 1;
});
bot.hear(/^(?:rstl)\s([^]+)$/i, (message) => {  
	        let text = message.$match[1]
		message.send(`${text.split("").map(x=>x.toUpperCase()).join(" ")}`);
		
	});
bot.hear(/^(?:–≤—ã–¥–∞—Ç—å –±–∞–±–∫–∏)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match
	let razdacha = acc.kazna/acc.number
	if(user.admin < 1) return;
	for(i in acc.users){
    let args = message.$match
			acc.users[i].promo = false;
			acc.babki = 50
		}
	for(i in acc.users){
		vk.api.call('messages.send', {
			user_id: acc.users[i].vk,
			message: `–ü–û–î–ì–û–ù –æ—Ç –ü–ê–ù–î–´! üì° –ü–µ—Ä–≤—ã–µ 50 –∏–≥—Ä–æ–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤—è—Ç –±–æ—Ç—É ¬´–ø—Ä–æ–º–æ –±–∞–±–∫–∏¬ª, –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∞—Ç –ø–æ 500.000 –∫–æ–π–Ω–æ–≤`,
			keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ü—Ä–æ–º–æ –±–∞–±–∫–∏"
				},
					"color": "negative"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–í –º–µ–Ω—é"
				},
					"color": "primary"
				}]
				]
					})
		});
	}
	return message.send(
				`
				–ü–û–î–ì–û–ù –æ—Ç –ü–ê–ù–î–´! üì° –ü–µ—Ä–≤—ã–µ 50 –∏–≥—Ä–æ–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤—è—Ç –±–æ—Ç—É ¬´–ø—Ä–æ–º–æ –±–∞–±–∫–∏¬ª, –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∞—Ç –ø–æ 500.000 –∫–æ–π–Ω–æ–≤
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ü—Ä–æ–º–æ –±–∞–±–∫–∏"
				},
					"color": "negative"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–í –º–µ–Ω—é"
				},
					"color": "primary"
				}]
				]
					})
				});
});
bot.hear(/^(?:–¥–∞—Ç—å)\s?([^]+)?/i,  message => { 
	if(user.admin < 1) return;
		user.api.wall.post({
		owner_id: -75372115,
		message: `–ü–û–î–ì–û–ù –æ—Ç –ü–ê–ù–î–´! üì° –ü–µ—Ä–≤—ã–µ 50 –∏–≥—Ä–æ–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤—è—Ç –±–æ—Ç—É ¬´–ø—Ä–æ–º–æ –±–∞–±–∫–∏¬ª, –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∞—Ç –ø–æ 500.000 –∫–æ–π–Ω–æ–≤`});

	return message.send(`–ü—Ä–æ–º–æ –±–∞–±–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã!`);
});
bot.hear(/^(?:—Ä–∞–∑–¥–∞—á–∞)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match
	let razdacha = acc.kazna/acc.number
	if(user.admin < 1) return;
	for(i in acc.users){
let args = message.$match
			acc.users[i].balance += razdacha;
			acc.kazna = 0 
		}
	for(i in acc.users){
		vk.api.call('messages.send', {
			user_id: acc.users[i].vk,
			message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${f.spaces(Math.round(razdacha))} –∫–æ–π–Ω–æ–≤, –∏–∑ –∫–∞–∑–Ω—ã!
			–°–ª–µ–¥—É—é—â–∞—è —Ä–∞–∑–¥–∞—á–∞ –≤ ${poltime()} `
		});
	}
	return message.send(`–†–∞–∑–¥–∞—á–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞, –≤—ã–¥–∞–Ω–æ –ø–æ ${f.spaces(Math.round(razdacha))} –∫–æ–π–Ω–æ–≤, ${acc.number} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º`);
});
bot.hear(/^(?:–≤–æ–π—Ç–∏ king|–≤–æ–π—Ç–∏ –∫–∏–Ω–≥)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match
	user.clan = 1
    user.tag = "King"
	acc.king += 1
	return message.send(`–í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∫–ª–∞–Ω King
	–ë–µ—Å–µ–¥–∞ –∫–ª–∞–Ω–∞:https://vk.me/join/AJQ1d5WfTBA/PXKcK0s91PMH `);
});
bot.hear(/^(?:–≤ king|–≤ –∫–∏–Ω–≥)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match
	return message.send(`–í –∫–ª–∞–Ω–µ ${acc.king} —á–µ–ª–æ–≤–µ–∫ `);
});
bot.hear(/^(?:–æ–±–Ω—É–ª–µ–Ω–∏–µ26052002)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match
	if(user.vk !== 217885070) return message.send(`‚úñ –°–æ—Å–∏!`);
	for(i in acc.users){
let args = message.$match
			acc.users[i].balance = 0;
			acc.kazna = 0
			acc.users[i].modules =    	
				{
					"1": 		{
						price: 	50,
						count:  0,
						profit: 1
					},
					"2": 		{
						price: 	1400,
						count:  0,
						profit: 2
					},
					"3": 		{
						price: 	2500,
						count:  0,
						profit: 3
					},
					"4": 		{
						price: 	5000,
						count:  0,
						profit: 4
					},
					"5": 		{
						price: 	10250,
						count:  0,
						profit: 6
					},
					"6": 		{
						price: 	15000,
						count:  0,
						profit: 8
					},
					"7": 		{
						price: 	40000,
						count:  0,
						profit: 10
					},
					"8": 		{
						price: 	80000,
						count:  0,
						profit: 20
					}
				}
		}
	for(i in acc.users){
		vk.api.call('messages.send', {
			user_id: acc.users[i].vk,
			message: `–í–∞–º –æ–±–Ω—É–ª–∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å`
		});
	}
	return message.send(`–û–±–Ω—É–ª–∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å ${acc.number} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º`);
});



////////////////////////////////////////////////////////////////////////
///////////////////////////–î–û–ù–ê–¢///////////////////////////////
//////////////////////////////////////////////////////////////////////// 

bot.hear(/^(?:–î–æ–Ω–∞—Ç)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	message.sendPhoto("./photo/1.PNG");
	return message.send(
		`üí¥–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${f.spaces(user.donate)}‚ÇΩ
		‚öúV.I.P üÜï - 50‚ÇΩ ${user.statu.toString().replace(/0/gi, "‚ùå").replace(/1/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/2/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/3/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/4/gi, "–ò–º–µ–µ—Ç—Å—è‚úî")}
		üî±PREMIUM üÜï - 115‚ÇΩ ${user.statu.toString().replace(/1/gi, "‚ùå").replace(/0/gi, "‚ùå").replace(/2/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/3/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/4/gi, "–ò–º–µ–µ—Ç—Å—è‚úî")}
		üí¥10000 coin's üÜï - 1‚ÇΩ
		
		 ‚öú–í–∏–ø - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ V.I.P
		 üî±–ü—Ä–µ–º–∏—É–º - –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ PREMIUM
		
		‚ö†–í—Å–µ –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏ –ø–æ–∫—É–ø–∞—é—Ç—Å—è –ù–ê–í–°–ï–ì–î–ê!‚ö†
		‚ñ∂–ó–∞ –ø–æ–∫—É–ø–∫–æ–π –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ @id217885070 (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞) –∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π –ü–æ–ø–æ–ª–Ω–∏—Ç—å 1-15000‚óÄ
		
		–ö—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —á–µ—Ä–µ–∑ VK –ö–æ–π–Ω—ã, –ø–∏—à–∏—Ç–µ @id217885070 (–ú–Ω–µ)`	
	);
});


bot.hear(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)/i, async (message) => { 
		let filter = (text) => {
			text = text.replace('&quot;', '"');
			text = text.replace('!&quot;', '"');
			text = text.replace('?&quot;', '"');
			text = text.replace(/(&quot;)/ig, '"');
			return text;
		}

    let anek = await getAnek();
    return message.send(`–¥–µ—Ä–∂–∏:\n\n ${filter(anek)}\n\nü§§ >> –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ê–Ω–µ–∫–¥–æ—Ç" –µ—â—ë —Ä–∞–∑!`);

function getAnek() {
    return rq('https://www.anekdot.ru/random/anekdot/').then(body => {
        		let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
        		res = res[0].split('</div>');
        		return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
        	});

	}
});

bot.hear(/^(?:warn)\s?([0-9]+)?\s([^]+)?/i, (message) => { 
		let user = acc.users.find(a => a.vk === message.user); 
		let args = message.$match;
		if(!args[1] || !args[2]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: warn [ID] [–ü–†–ò–ß–ò–ù–ê]`);
		if(user.admin < 1) return message.send(`‚úñ –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		if(!acc.users[args[1]]) return message.send(`‚úñ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);

		acc.users[args[1]].warn += 1;
		acc.users[args[1]].warn_p.push(args[2]);

		let text = `‚úÖ  ${user.prefix} –≤—ã–¥–∞–ª –≤–∞–º warn(–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ)`
		if(acc.users[args[1]].warn == 3){
			acc.users[args[1]].warn = 0;
			acc.users[args[1]].ban = true;
			acc.users[args[1]].warn_p = []
			text += `\nüî∏ –£ –≤–∞—Å 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.\n‚úñ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.`
		}
		vk.api.call('messages.send', {
			peer_id: acc.users[args[1]].id,
			message: text
		});
		return message.send(`‚úÖ –í—ã –≤—ã–¥–∞–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É [${acc.users[args[1]].prefix}].`);
	}); 
bot.hear(/^(?:–ø–æ–ø–æ–ª–Ω–∏—Ç—å)\s?([^]+)?/i,  message => {
	       let user = acc.users.find(a => a.vk === message.user); 
		   let cc = message.$match[1].toLowerCase();
		   let args = message.$match[1];
		   let nomer = 79114065616; // –Ω–æ–º–µ—Ä –±–µ–∑ +
		   let ssilka = `https://qiwi.com/payment/form/99?amountFraction=0&extra%5B%27comment%27%5D=%D0%9E%D0%BF%D0%BB%D0%B0%D1%82%D0%B0+%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7%D0%B0+%E2%84%96${user.vk}+%5B%23${user.id}%5D&extra%5B%27account%27%5D=%2B${nomer}&amountInteger=${message.$match[1]}&currency=643&blocked[0]=sum&blocked[1]=account&blocked[2]=comment`
	
	     	vk.api.call("utils.getShortLink", {url: ssilka}).then(function (res){
	        if(!message.$match[1]) return message.send(`‚úñ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É`);
			if(message.$match[1] < 1) return message.send(`‚úñ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ - 1 —Ä—É–±.`);
			if(message.$match[1] > 15000) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ - 15.000 —Ä—É–±.`);
	        message.send("–î–µ—Ä–∂–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã\n" + res.short_url);
    });  
});		
bot.hear(/^(?:unwarn)\s?([0-9]+)?/i, (message) => { 
		let user = acc.users.find(a => a.vk === message.user);
		let args = message.$match;
		if(!args[1]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: unwarn ID`);
		if(user.admin < 1) return message.send(`‚úñ –í—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		if(!acc.users[args[1]]) return message.send(`‚úñ –¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç!`);

		acc.users[args[1]].warn = 0; 
		acc.users[args[1]].warn_p = []

		vk.api.call('messages.send', {
			peer_id: acc.users[args[1]].id,
			message: `‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–Ω—è–ª –í–∞–º –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`
		});
		return message.send(`‚úÖ –í—ã —Å–Ω—è–ª–∏ –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏–≥—Ä–æ–∫—É [${acc.users[message.$match[1]].prefix}].`);
	}); 

bot.hear(/^(?:ban)\s?([0-9]+)?\s([^]+)?/i, (message) => {		
		let user = acc.users.find(a => a.vk === message.user); 
		if(!Number(message.$match[1])) return message.send(`‚úñ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
		if(user.admin < 1) return message.send(`‚úñ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		let u = acc.users.find(a => a.id === Number(message.$match[1])); 
	    if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
		if(u.admin > 0) return message.send(`‚úñ –£–ø—Å! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`);
		u.ban = message.$match[2];
		acc.bans +=1
		return message.send(`‚úÖ ‚ûæ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${u.prefix} –Ω–∞–≤—Å–µ–≥–¥–∞.\n‚úÖ ‚ûæ –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[2]}`);
	}); 

bot.hear(/^(?:wiki|–≤–∏–∫–∏)\s(.*)$/i, async (message, bot) => {
    let args = message.text.match(/^(?:wiki|–≤–∏–∫–∏)\s?(.*)/i);
    function isEmpty( str ) { if (str.trim() == '') return true; return false; }
        rq("https://ru.wikipedia.org/w/api.php?action=opensearch&search="+encodeURIComponent((args[1] ? args[1] : "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"))+"&meta=siteinfo&rvprop=content&format=json")
        .then((res) => {
            if(isEmpty(res[2][0])) {
                if(isEmpty(res[2][1])) {
                    if(isEmpty(res[2][2])) return message.reply('–°—Ç–∞—Ç—å—è –Ω–µ –ø–æ–ª–Ω–∞—è, –ª–∏–±–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.\n\n–°—Å—ã–ª–∫–∞: ' + res[3][0]);
                } else {
                    return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏! \n\n–°—Å—ã–ª–∫–∞: ${res[3][1]}`);
                }
            } else {
                return message.reply(`–Ø –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –í—ã –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –Ω–∞–π—Ç–∏!\n\n–°—Å—ã–ª–∫–∞: ${res[3][0]}`);
            }
        });
});
bot.hear(/^(?:ban)\s?([0-9]+)?\s([^]+)?/i, (message) => {		
		let user = acc.users.find(a => a.vk === message.user); 
		if(!Number(message.$match[1])) return message.send(`‚úñ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
		if(user.admin < 1) return message.send(`‚úñ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		let u = acc.users.find(a => a.id === Number(message.$match[1])); 
	    if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
		if(u.admin > 0) return message.send(`‚úñ –£–ø—Å! –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!`);
		u.ban = message.$match[2];
		acc.bans +=1
		return message.send(`‚úÖ ‚ûæ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${u.prefix} –Ω–∞–≤—Å–µ–≥–¥–∞.\n‚úÖ ‚ûæ –ü—Ä–∏—á–∏–Ω–∞: ${message.$match[2]}`);
	}); 
bot.hear(/^(?:unban)\s?([0-9]+)?\s([^]+)?/i, (message) => {		
		let user = acc.users.find(a => a.vk === message.user); 
		if(!Number(message.$match[1])) return message.send(`‚úñ –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –≤–∏–¥–∞.`);
		if(user.admin < 1) return message.send(`‚úñ –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä`);
		let u = acc.users.find(a => a.id === Number(message.$match[1])); 
	    if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
		u.ban = false;
		acc.bans -=1
		return message.send(`‚úÖ ‚ûæ –í—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${u.prefix}`);
	}); 
bot.hear(/^(?:nick)\s?([^]+)?/i,  (message) => { 
	let user = acc.users.find(a => a.vk === message.user);
	let args = message.$match; 
	if(user.statu < 1){
		if(args[1].length > 15) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.prefix = args[1];
	}
	if(user.statu = 1){
		if(args[1].length > 30) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 30 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.prefix = args[1];
	}
	if(user.statu = 2){
		if(args[1].length > 50) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 50 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.prefix = args[1];
	}
	return message.send(`üìó ‚ûæ –í—ã —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞: ${args[1]}`);
});
bot.hear(/^(?:—Å—Ç—Ä–∞–Ω–∞)\s?([^]+)?/i,  (message) => { 
	let user = acc.users.find(a => a.vk === message.user);
	let args = message.$match; 
	if(user.statu < 1){
		if(args[1].length > 15) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.country = args[1];
	}
	if(user.statu = 1){
		if(args[1].length > 30) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 30 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.country = args[1];
	}
	if(user.statu = 2){
		if(args[1].length > 50) return message.send(`‚úñ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 50 —Å–∏–º–≤–æ–ª–æ–≤.`);
		user.country = args[1];
	}
	return message.send(`–í—ã —Å–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É –Ω–∞: ${args[1]}`);
});
bot.hear(/^(?:–¥–±–æ–Ω—É—Å)\s?([0-9]+)?/i, message => {
	let user = acc.users.find(a => a.vk === message.user);
	let args = message.$match; 
	if(user.statu < 1) return message.send(`‚ö† –ö—É–ø–∏—Ç–µ –¥–æ–Ω–∞—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!`);
	if(user.bloks.dbonuce == true) return message.send(`‚úñ –ü–æ–ª—É—á–∞—Ç—å –¥–æ–Ω–∞—Ç –±–æ–Ω—É—Å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 24 —á–∞—Å–∞!`);
	if(user.statu == 1){
		if(!message.$match[1] || message.$match[1] < 0 || message.$match[1] > 500000) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: '–î–±–æ–Ω—É—Å [1-500000]'`);
		user.balance += Number(message.$match[1]);
	}
	if(user.statu > 1){
		if(!message.$match[1] || message.$match[1] < 0 || message.$match[1] > 1000000) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: '–î–±–æ–Ω—É—Å [1-1000000]'`);
		user.balance += Number(message.$match[1]);
	}
	user.bloks.dbonuce = true;
		setTimeout(() => {
			user.bloks.dbonuce = false;
	}, 86400000);

	return message.send(`üí∞ ‚ûæ –í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ ${spaces(args[1])}$`);
}); 
bot.hear(/^(?:—Å–æ—Å–∞—Ç—å)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(
		`–ù—É —Å–æ—Å–∏, –≤ —á—ë–º –ø—Ä–æ–±–ª–µ–º–∞?`
		
	);	
});
bot.hear(/^(?:228)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	let count = ['–ú—ã —Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–±—è –≤—ã–Ω–æ—Å–∏–º','–ü–∞–ø–∏—Ä–æ—Å–∏–º','–ù–∞—Ä–∫–æ–º–∞–Ω','1337','–ü–æ–π—Ç–∏ –∫–∞ –Ω–∞ —Ö—É–π —Ç–µ–±—è –ø—Ä–æ—Å–∏–º','üëâüèªüëåüèª'].random();
	return message.send(
		`${count}`
		
	);	
});

bot.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s?([^]+)?/i,  message => { 
    let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return;
	for(i in acc.users){
		if(acc.users[i]){
			if(acc.users[i].rass >= 1){
		vk.api.call('messages.send', {
			user_id: acc.users[i].vk,
			message: `${message.$match[1]}`,
			keyboard:JSON.stringify(
		{
			"one_time": true,
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": `–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏`
		},
			"color": "negative"
		}]
		]
			})
		});
	}
	}
		}
	for(var i = 1; i < 900; i++) {
		vk.api.call('messages.send', {
			peer_id: 2000000000 + i,
			message: `${message.$match[1]}`
		});
	}
	return message.send(`–°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
});

let date = new Date();
let minutes = date.getMinutes();
let hours = new Date().getHours(); 


setInterval(function () { 
 user.api.status.set({ 
 group_id: 75372115, 
 text: `üë• –ê–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: ${acc.number} | ‚úñ–ò–∑ –Ω–∏—Ö –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ${acc.bans} | üí∞–í –∫–∞–∑–Ω–µ: ${f.spaces(Math.round(acc.kazna))} –∫–æ–π–Ω–æ–≤`}); 
 
 }, 60000);
bot.hear(/^(?:—Å—Ç–∞—Ç–∞)/i, async (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	let podpiska = await vk.api.groups.isMember({ group_id: 75372115, user_id: message.senderId});
	let online = await vk.api.groups.getOnlineStatus({ group_id: 75372115 });
	let bans = await vk.api.groups.getBanned({ group_id: 75372115 });
	let sub = await vk.api.groups.getMembers({ group_id: 75372115 });
	let ttime = process.uptime();
    let uptime = (ttime + "").toHHMMSS();
	return message.send(
	   `üëÅ‚Äçüó®–°–æ–æ–±—â–µ—Å—Ç–≤–æ: ${online.status.toString().replace(/none/gi, "‚ùå–ù–µ –æ–Ω–ª–∞–π–Ω").replace(/online/gi, "‚úî–û–Ω–ª–∞–π–Ω").replace(/answer_mark/gi, "‚ö†–û—Ç–≤–µ—á–∞–µ—Ç –±—ã—Å—Ç—Ä–æ")}
	    ${podpiska.toString().replace(/0/gi, "‚ùå–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≥—Ä—É–ø–ø—É!").replace(/1/gi, "‚úî–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≥—Ä—É–ø–ø—É!")}
		üë• –õ—é–¥–µ–π –≤ –≥—Ä—É–ø–ø–µ: ${sub.count}
		‚úñ–í –ß–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${bans.count}
		üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${acc.number}
		‚úñ–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${acc.bans}
		üí¨–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${acc.msg}
		üí∞–í –∫–∞–∑–Ω–µ: ${f.spaces(Math.round(acc.kazna))} –∫–æ–π–Ω–æ–≤
		‚åö–ê–ø—Ç–∞–π–º –±–æ—Ç–∞ - ` + uptime + `
		‚è∞–í—Ä–µ–º—è: ${time()} 
		üìÖ–î–µ–Ω—å: ${data()}
		üëë@id217885070 (–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫)
		
		¬© PandaClicker 2018-2019 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
		`
	);	
});

String.prototype.toHHMMSS = function () {
    let sec_num = parseInt(this, 10);
    let hours   = Math.floor(sec_num / 3600);
    let minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    let seconds = sec_num - (hours * 3600) - (minutes * 60);

    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    let ttime    = hours+':'+minutes+':'+seconds;
    return ttime;
}
bot.hear(/^(?:–ò–¥–∏ –Ω–∞)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.sendPhoto("./photo/joker.jpg");
});
bot.hear(/^(?:–î–∞—Ç–∞)/i, (message) => {  
    let user = acc.users.find(a => a.vk === message.user);
	return message.send(`–í—Ä–µ–º—è: ${time()} | –î–µ–Ω—å: ${data()}`);	
});
bot.hear(/^(?:–∫—É|–ø—Ä–∏–≤–µ—Ç|–∑–¥–∞—Ä–æ–≤|–ø—Ä–∏–≤|—Ö–∞–π)/i, (message) => {  
    let user = acc.users.find(a => a.vk === message.user);
	let count = ['8914','12296','13046'].random();
		if(user.vk == 217885070){
		return message.sendPhoto("./photo/hi.png");	
	}
		if(user.admin < 1){
		return message.sendSticker(`${count}`);	
	}
		if(user.admin > 0){
		return message.sendPhoto("./photo/hiadm.jpg");	
	}
});
bot.hear(/^(?:–æ–∫)/i, (message) => {  
    let user = acc.users.find(a => a.vk === message.user);
	let count = ['11367','11367'].random();
	return message.sendSticker(`${count}`);	
});
bot.hear(/^(?:–±–∞–Ω)/i, (message) => {  
    let user = acc.users.find(a => a.vk === message.user);
	let count = ['12312','11595','11763','11724'].random();
	return message.sendSticker(`${count}`);	
});

bot.hear(/^(?:–∫–∞–∫ –¥–µ–ª–∞|—á–µ –∫–∞–∫|—á—ë –∫–∞–∫)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	let count = ['–ü–æ–∫–∞ –Ω–µ —Ä–æ–¥–∏–ª–∞, –∞ —Ç—ã –∫–∞–∫?','–•–æ—Ä–æ—à–æ, –∫–∞–∫ —Å–∞–º?','–ñ–∏—Ç—å –º–æ–∂–Ω–æ, –∞ —É —Ç–µ–±—è?','–û—Ç–ª–∏—á–Ω–æ, –∫–∞–∫ —É —Ç–µ–±—è?'].random();
	return message.send(
		`${count}`
		
	);	
});
bot.hear(/^(?:–Ω–æ—Ä–º|—Ö–æ—Ä–æ—à–æ)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	let count = ['–•–æ—Ä–æ—à–æ, –∫–æ–≥–¥–∞ –≤—Å—ë —Ö–æ—Ä–æ—à–æ!','–û–æ–æ–æ–æ, –∫—Ä–∞—Å–∞–≤–∞!','–¢–∞–∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏–ª–∏ —Å—É–ø–µ—Ä?'].random();
	return message.send(
		`${count}`
		
	);	
});
//////////////////////////////////////–î–û–ù–ê–¢///////////

bot.hear(/^(?:–ø–æ–∏—Å–∫)\s?(.*)?/i, (message) => { 
	let args = message.$match; 

	vk.api.call("utils.resolveScreenName", {
			screen_name: args[1]
	}).then((res) => { 
		var id = res.object_id;

		let user = acc.users.find(a => a.vk === id); 
		if(!user) return message.send(`‚úñ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω...\n‚úâ –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: '–ø–æ–∏—Å–∫ id217885070 `) 

		return message.send(`
			üîπ –ò–≥—Ä–æ–∫: ${user.prefix}
			üîπ VK: vk.com/id${user.vk}
			üîπ ID: ${user.id}`);
	})
});  
bot.hear(/^(?:–∏–Ω—Ñ–∞)\s?(.*)?/i, (message) => { 
	let args = message.$match; 
	let user = acc.users.find(a => a.vk === message.user);
    if(user.statu < 2) return message.send(`‚úñ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!!`);
	vk.api.call("utils.resolveScreenName", {
			screen_name: args[1]
	}).then((res) => { 
		var id = res.object_id;

		let user = acc.users.find(a => a.vk === id); 
		if(!user) return message.send(`‚úñ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω...\n‚úâ –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: '–ø–æ–∏—Å–∫ id217885070 `) 

		return message.send(`
			üîπ –ò–≥—Ä–æ–∫: ${user.prefix}
			üîπ VK: vk.com/id${user.vk}
			üîπ ID: ${user.id}
			üîπ –ë–∞–ª–∞–Ω—Å: ${user.balance}
			üîπ –°—Ç—Ä–∞–Ω–∞: ${user.country}
			${user.statu.toString().replace(/0/gi, "").replace(/1/gi, "üîπ–°—Ç–∞—Ç—É—Å: ‚öúVIP").replace(/2/gi, "üîπ–°—Ç–∞—Ç—É—Å: üî±PREMIUM").replace(/3/gi, "üîπ–°—Ç–∞—Ç—É—Å: üëÅ‚Äçüó®–°–ª–µ–¥—è—â–∏–π").replace(/4/gi, "üîπ–°—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")} 
			 ‚è≥ –£—Å–∫–æ—Ä–µ–Ω–∏—è ‚è≥ 
	 üìï –ö—É—Ä—Å–æ—Ä [${user.modules["1"].count}] +${user.modules["1"].count*1}/—Å–µ–∫
	 üìó –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞  [${user.modules["2"].count}] +${user.modules["2"].count*2}/—Å–µ–∫
	 üìò –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç  [${user.modules["3"].count}] +${user.modules["3"].count*3}/—Å–µ–∫
     üìô –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["4"].count}] +${user.modules["4"].count*4}/—Å–µ–∫
     üìî –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ [${user.modules["5"].count}] +${user.modules["5"].count*6}/—Å–µ–∫
	 üìì –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["6"].count}] +${user.modules["6"].count*8}/—Å–µ–∫
	 üñ• –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä [${user.modules["7"].count}] +${user.modules["7"].count*10}/—Å–µ–∫
	 ‚ìÇ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è Microsoft [${user.modules["8"].count}] +${user.modules["8"].count*20}/—Å–µ–∫
	 
	 üíø –°—É–º–º–∞—Ä–Ω–æ: ${(user.modules["1"].count*1)+(user.modules["2"].count*2)+(user.modules["3"].count*3)+(user.modules["4"].count*4)+(user.modules["5"].count*6)+(user.modules["6"].count*8)+(user.modules["7"].count*10)+(user.modules["8"].count*20)}/—Å–µ–∫
		`);
	})
});  
bot.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s?([0-9]+)?/i, (message) => { 
        let user = acc.users.find(a => a.vk === message.user); 
		let args = message.$match;  
        if(!args[1]) return message.send(
				`
				–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É!
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ö–∞–∑–∏–Ω–æ 10000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ö–∞–∑–∏–Ω–æ 100000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ö–∞–∑–∏–Ω–æ 1000000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ö–∞–∑–∏–Ω–æ 10000000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
        let amount = Number(parserInt(message.$match[1]));
        amount = Math.round(amount);  
		
		args[1] = args[1].replace(/(\.|\,)/ig, '');
	    args[1] = args[1].replace(/(–∫|k)/ig, '000');
	    args[1] = args[1].replace(/(–º|m)/ig, '000000');
	    args[1] = args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 
		
        if (amount > user.balance || amount < 1 ) return message.send(`‚úñ  –°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏–ª–∏ –±—ã—Ç—å –Ω–∏–∂–µ 1$`);

 		if(user.kazlock == 0){
			if (amount > 10000000 && amount != user.balance) return message.send(`‚úñ  –°—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 10.000.000$\n–°–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –∑–∞ 10 —Ä—É–±–ª–µ–π, –ø–∏—à–∏ –î–û–ù–ê–¢`);
		} 

        let mnojitel = [1,2,3,4,5].random();
        let win = ['üåö|üåö|üåö','üî∏|üî∏|üî∏','üé≤|üé≤|üé≤','ü§ë|ü§ë|ü§ë'].random();
        let lose = ['üåö|üéâ|üî∏','üî∏|üéâ|üî∏'].random();
        if(rand(1,100) < 30){
        	let balance = amount;
        	let win_balance = amount * mnojitel;
        	win_balance = Math.round(win_balance);
        	user.balance += Number(win_balance) 
        	return message.send(`üé≤ ‚ûü –í–∞–º –≤—ã–ø–∞–ª–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: 
			[${win}]\nüíé ‚ûü –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win_balance}$!\nüî• ‚ûü –ú–Ω–æ–∂–∏—Ç–µ–ª—å: ${mnojitel}x`); 
        }else{
        	user.balance -= amount;
			acc.kazna += amount/100;
        	return message.send(`üé≤ ‚ûü –í–∞–º –≤—ã–ø–∞–ª–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: 
			[${lose}]\nüåö ‚ûü –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${amount}$!`);
        }
    });
	
	bot.hear(/^(?:K–∞–∑–∏–Ω–æ)\s?([0-9]+)?/i, (message) => { 
        let user = acc.users.find(a => a.vk === message.user); 
		if(user.admin < 1) return message.send(`–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª –≤—Å–µ —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏`);
		let args = message.$match;  
        if(!args[1]) return message.send(`‚úñ —É–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É —á–∏—Å–ª–æ–≤–æ–≥–æ –≤–∏–¥–∞`);
        let amount = Number(parserInt(message.$match[1]));
        amount = Math.round(amount);  
		
		args[1] = args[1].replace(/(\.|\,)/ig, '');
	    args[1] = args[1].replace(/(–∫|k)/ig, '000');
	    args[1] = args[1].replace(/(–º|m)/ig, '000000');
	    args[1] = args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 
		
        if (amount > user.balance || amount < 1 ) return message.send(`‚úñ  –°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏–ª–∏ –±—ã—Ç—å –Ω–∏–∂–µ 1$`);

 		if(user.admin < 1){
			if (amount > 10000000 && amount != user.balance) return message.send(`‚úñ  –°—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 10.000.000$\n–°–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –∑–∞ 10 —Ä—É–±–ª–µ–π, –ø–∏—à–∏ –î–û–ù–ê–¢`);
		} 

        let mnojitel = [1,2,3,4,5].random();
        let win = ['üåö|üåö|üåö','üî∏|üî∏|üî∏','üé≤|üé≤|üé≤'].random();
        if(rand(1,100) < 30){
        	let balance = amount;
        	let win_balance = amount * mnojitel;
        	win_balance = Math.round(win_balance);
        	user.balance += Number(win_balance) 
        	return message.send(`üé≤ ‚ûü –í–∞–º –≤—ã–ø–∞–ª–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: [${win}]\nüíé ‚ûü –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win_balance}$!\nüî• ‚ûü –ú–Ω–æ–∂–∏—Ç–µ–ª—å: ${mnojitel}x`); 
        }else{
        	let balance = amount;
        	let win_balance = amount * mnojitel;
        	win_balance = Math.round(win_balance);
        	user.balance += Number(win_balance) 
        	return message.send(`üé≤ ‚ûü –í–∞–º –≤—ã–ø–∞–ª–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: [${win}]\nüíé ‚ûü –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win_balance}$!\nüî• ‚ûü –ú–Ω–æ–∂–∏—Ç–µ–ª—å: ${mnojitel}x`); 
        }
    });
	
	

bot.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|–ø–µ—Ä–µ–≤–æ–¥)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match;  
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ü–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê"`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	if(user.balance < args[2]) return message.send(`‚úñ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	if(args[1] == user.id) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π ID`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.balance -= Number(args[2]);
	u.balance += Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} coins –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:–¥–ø–µ—Ä–µ–¥–∞—Ç—å|–¥–ø–µ—Ä–µ–≤–æ–¥)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match;  
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–î–ø–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê"`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	if(user.donate < args[2]) return message.send(`‚úñ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚ÇΩ`);
	if(args[1] == user.id) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π ID`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.donate -= Number(args[2]);
	u.donate += Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]}‚ÇΩ –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});
bot.hear(/^(?:—Ä–µ—Ñ–µ—Ä–∞–ª)\s?([0-9]+)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(user.referal != false) return message.send(`‚úñ –¢—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É`);
	let args = message.$match;  
	if(!args[1]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–†–µ—Ñ–µ—Ä–∞–ª ID"`);
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

    user.referal = args[1];
	u.balance += 100000;
	user.balance += 500000
	return message.send(`[${f.time()}] –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É ${u.prefix} –∏ –ø–æ–ª—É—á–∏–ª–∏ 500,000 coins`);

});
bot.hear(/^(?:–∞–ø–µ—Ä–µ–¥–∞—Ç—å)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ê–ø–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê"`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	u.balance += Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} coins –∏–≥—Ä–æ–∫—É ${u.prefix}`);
});
bot.hear(/^(?:unlock)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "Unlock ID 1"`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
    u.kazlock = args[2];
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –∫–∞–∑–∏–Ω–æ –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:–∞–¥–ø–µ—Ä–µ–¥–∞—Ç—å)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ê–¥–ø–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê"`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	u.donate += Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∏—Å–ª–∏–ª–∏ ${args[2]} ‚ÇΩ –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:ahelp|–∞—Ö–µ–ª–ø|–∞–ø–æ–º–æ—â—å)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`); 
	return message.send(`–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞ –∫–æ—Ä–æ—á–µ, –≤–æ—Ç: 
	
	–ê–ø–µ—Ä–µ–¥–∞—Ç—å [ID] [–°—É–º–º–∞] - –≤—ã–¥–∞—Ç—å –∫–æ–π–Ω—ã
	–ê–¥–ø–µ—Ä–µ–¥–∞—Ç—å [ID] [–°—É–º–º–∞] - –≤—ã–¥–∞—Ç—å —Ä—É–±–ª–∏
	Setnick [ID] [–ù–∏–∫] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏–∫ –∏–≥—Ä–æ–∫—É
	Settag [ID] [–¢–µ–≥] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–≥ –∏–≥—Ä–æ–∫—É
	Ban [ID] [–ü—Ä–∏—á–∏–Ω–∞] - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞  –Ω–∞–≤—Å–µ–≥–¥–∞
	Unban [ID] [1] - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞
	–†–∞–∑–¥–∞—á–∞ - —Ä–∞–∑–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑ –∫–∞–∑–Ω—ã
	–í—ã–¥–∞—Ç—å –±–∞–±–∫–∏ - –æ—Ç–∫—Ä—ã—Ç—å –≤—Å–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ –ü—Ä–æ–º–æ –±–∞–±–∫–∏`);

});

bot.hear(/^(?:setadmin)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.statu !== 4) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "Setadm ID 1"`);
	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	u.admin = Number(args[2]);
	u.statu = 4
	return message.send(`[${f.time()}] –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ ${args[2]} —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});
bot.hear(/^(?:setstatus)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.statu !== 4) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2]) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "Setstatus ID 0-2"`);
	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	u.statu = Number(args[2]);
	return message.send(`[${f.time()}] –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ ${args[2]} —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:setnick)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2] || args[1] < 1) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "Setnick ID –ò–ú–Ø"`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	u.prefix = args[2];
	return message.send(`[${f.time()}] –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ –∏–º—è –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});
bot.hear(/^(?:settag)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	if(!args[2] || args[1] < 1) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "Settag ID –¢–ï–ì"`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	u.tag = args[2];
	return message.send(`[${f.time()}] –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª–∏ —Ç–µ–≥ –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:–∞–¥–∑–∞–±—Ä–∞—Ç—å)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ê–¥–∑–∞–±—Ä–∞—Ç—å ID –°–£–ú–ú–ê"`);
	if(args[2] > u.donate ) return message.send(`‚úñ –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	u.donate -= Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ ${args[2]} ‚ÇΩ —É –∏–≥—Ä–æ–∫–∞ ${u.prefix}`);

});
bot.hear(/^(?:–∞–∑–∞–±—Ä–∞—Ç—å)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.admin < 1) return message.send(`‚úñ –¢—ã –Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!!`);
	let args = message.$match;  
	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ê–∑–∞–±—Ä–∞—Ç—å ID –°–£–ú–ú–ê"`);
	if(args[2] > u.balance ) return message.send(`‚úñ –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥`);

	u.balance -= Number(args[2]);
	return message.send(`[${f.time()}]üí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–∞–ª–∏ ${args[2]} –∫–æ–π–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞ ${u.prefix}`);

});

bot.hear(/^(?:–Ω–∞—Å–∏–ª–æ–≤–∞—Ç—å)\s?([0-9]+)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match;  
	if(!args[1] || args[1] < 0) return message.send(`‚úñ –ü—Ä–∏–º–µ—Ä: "–ù–∞—Å–∏–ª–æ–≤–∞—Ç—å ID"`); 
	
	if(args[1] == user.id) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π ID`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`‚úñ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	return message.send(`–í—ã –∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${u.prefix}`);

});

bot.hear(/^(?:–≤–∞–±–∞–Ω–∫)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	if(user.balance < 1) return message.send(`‚úñ –£ —Ç–µ–±—è –Ω–µ—Ç –±–∞–±–ª–∞!`);
	let rez = [true, false].random(); 
	if(rez == false){
		let text = [].random(); 
		user.balance += user.balance;
		return message.send(`üòä –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º ! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ !`);
	}else{ 
		let count = [0].random();
		user.balance = count;
		return message.send(`üòí–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!`);
	}
});



bot.hear(/^(?:–ò–Ω—Ñ–æ|üìù –∏–Ω—Ñ–æ|‚ùì–∏–Ω—Ñ–æ)/i, (message) => {  

	return message.send(
		`
		üìÆ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å COIN 
		üë¶ –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å 50 –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞—à–µ–º—É –±–æ—Ç—É.
		‚úâ –ó–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1 BOT COINS.
		üí∏ –ó–∞ COIN –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å —É—Å–∫–æ—Ä–µ–Ω–∏—è ('—É—Å–∫–æ—Ä–µ–Ω–∏–µ')
		üí∞ –ö–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥—É—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –≤–∞–º –ø—Ä–∏–±—ã–ª—å!

		üèÜ –ß–µ–º –±–æ–ª—å—à–µ —É –≤–∞—Å BOT COIN - —Ç–µ–º –≤—ã—à–µ –≤—ã –≤ —Ç–æ–ø–µ!

		`,
		
		{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–û—Å–Ω–æ–≤–Ω—ã–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ò–≥—Ä—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}]
				]
					})
				});
		}
		);		

vk.updates.hear(/^(?:–æ–±–º–µ–Ω—è—Ç—å)\s?([1-9]+)?/i, message => {
 	
 		return message.send(
		    `
 			‚úñ –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç!
 			`
	    );
 	}); 
		
bot.hear(/^(?:–ë–∞–ª–∞–Ω—Å|üí∞–±–∞–ª–∞–Ω—Å)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	let ss = user.balance
	return message.send(
		`üí∞ –ë–∞–ª–∞–Ω—Å: ${f.spaces(Math.round(ss))} coins
üí¥ –î–æ–Ω–∞—Ç: ${user.donate}‚ÇΩ
–í –∫–∞–∑–Ω–µ: ${f.spaces(Math.round(acc.kazna))}`
	);	
});
bot.hear(/^(?:–ø—Ä–µ–º–∏—É–º|premium)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(
		`–ö–æ–º–∞–Ω–¥—ã PREMIUM:
–î–±–æ–Ω—É—Å [1-1000000] - –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω–µ–≥ —Ä–∞–∑ –≤ 24 —á–∞—Å–∞
Nick - –º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤
–ü–æ–≤—ã—à–µ–Ω % –Ω–∞ –ø–æ–±–µ–¥—É –≤ –∫–∞–∑–∏–Ω–æ!
–ö–ª–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω –≤ 3 —Ä–∞–∑–∞!
–ò–Ω—Ñ–∞ [id –í–ö]

${user.statu.toString().replace(/0/gi, "–ù–µ –∏–º–µ–µ—Ç—Å—è‚ùå").replace(/1/gi, "–ù–µ –º–µ–µ—Ç—Å—è‚ùå").replace(/2/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/3/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/4/gi, "–ò–º–µ–µ—Ç—Å—è‚úî")}`
	);	
});
bot.hear(/^(?:–í–ò–ü|VIP|v.i.p)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(
		`–ö–æ–º–∞–Ω–¥—ã VIP:
–î–±–æ–Ω—É—Å [1-500000] - –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω–µ–≥ —Ä–∞–∑ –≤ 24 —á–∞—Å–∞
Nick - –º–∞–∫—Å–∏–º—É–º 30 —Å–∏–º–≤–æ–ª–æ–≤
–ü–æ–≤—ã—à–µ–Ω % –Ω–∞ –ø–æ–±–µ–¥—É –≤ –∫–∞–∑–∏–Ω–æ!
–ö–ª–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω –≤ 2 —Ä–∞–∑–∞!

${user.statu.toString().replace(/0/gi, "–ù–µ –∏–º–µ–µ—Ç—Å—è‚ùå").replace(/1/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/2/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/3/gi, "–ò–º–µ–µ—Ç—Å—è‚úî").replace(/4/gi, "–ò–º–µ–µ—Ç—Å—è‚úî")}`
	);	
});
bot.hear(/^(?:—Å–ª–æ—Ç—ã)\s?([^\s ].*)?/i, message => {
   let user = acc.users.find(a => a.vk === message.user); 
    if (!message.$match[1]) return message.send(
				`
				–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É!
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–°–ª–æ—Ç—ã 10000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–°–ª–æ—Ç—ã 100000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–°–ª–æ—Ç—ã 1000000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–°–ª–æ—Ç—ã 10000000"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
    let amount = parserInt(message.$match[1]);
    if (!Number(amount) || amount < 0) return message.send(`‚úñ —Å—Ç–∞–≤–∫–∞ –Ω–µ —á–∏—Å–ª–æ`);
    if (amount > user.balance) return message.send(`‚úñ –°—Ç–∞–≤–∫–∞ > –±–∞–ª–∞–Ω—Å–∞`);
	if (amount > 10000000) return message.send(`‚úñ –°—Ç–∞–≤–∫–∞ > 10.000.000`);
    if (message.$from.type != 'user') return message.send(`‚úñ –≠—Ç–∞ –∏–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –õ–° –≥—Ä—É–ø–ø—ã`);
	if(message.$match[1].toLowerCase() == '–≤—Å–µ' || message.$match[1].toLowerCase() == '–≤—Å—ë'){ 
	if (user.balance < 1 ) return message.send(`‚úñ –ü–æ—Ö–æ–∂–µ —É —Ç–µ–±—è –Ω–µ—Ç—É –¥–µ–Ω–µ–≥ =)`); 
	amount = user.balance; 
}else{ 
	let amount = parserInt(message.$match[1]); 
	}
    amount = Math.round(amount);
    let text = '';
    let chat = message.user;
    vk.api.call('messages.send', {
            peer_id: chat,
            message: `üé∞üé∞üé∞`
        })
        .then((res) => {
            let rez = [{
                    id: 1,
                    smile: 'üî∫üî∫üî∫',
                    win: true
                },
                {
                    id: 2,
                    smile: 'üîπüîπüîπ',
                    win: true
                },
                {
                    id: 3,
                    smile: 'üî∏üî∏üî∏',
                    win: true
                },
                {
                    id: 4,
                    smile: 'üî∏üî∏üîπ',
                    win: false
                },
                {
                    id: 5,
                    smile: 'üîπüî∏üî∏',
                    win: false
                },
                {
                    id: 6,
                    smile: 'üîπüîπüî∏',
                    win: false
                },
                {
                    id: 7,
                    smile: 'üî∏üîπüîπ',
                    win: false
                },
                {
                    id: 8,
                    smile: 'üíØüíØüíØ',
                    win: true
                },
                {
                    id: 9,
                    smile: 'üíØ‚ùå üíØ',
                    win: false
                },
                {
                    id: 10,
                    smile: 'üíØ üíØ‚ùå',
                    win: false
                },
                {
                    id: 11,
                    smile: '‚ùåüíØüíØ',
                    win: false
                },
                {
                    id: 12,
                    smile: '‚ù§‚ù§‚ù§',
                    win: true
                },
                {
                    id: 13,
                    smile: 'üñ§‚ù§üñ§',
                    win: false
                },
                {
                    id: 14,
                    smile: '‚ù§üñ§üñ§',
                    win: false
                },
                {
                    id: 15,
                    smile: 'üñ§ üñ§üñ§ ',
                    win: false
                }
            ]
            let chet = 0;
            for (i = 700; i < 4900; i += 700) {
                let r = rez.random();
                setTimeout(() => {
                    chet += 1;
                    if (chet == 6) {
                        if (r.win == true) {
                            user.balance += Number(amount);
                            vk.api.call('messages.edit', {
                                peer_id: chat,
                                message: r.smile + `\nüé∞ –í—ã –ø–æ–±–µ–¥–∏–ª–∏!\nüíé –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${amount}$`,
                                message_id: res
                            })
                            return;
                        } else {
                            user.balance -= Number(amount);
                            vk.api.call('messages.edit', {
                                peer_id: chat,
                                message: r.smile + `\nüé∞ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\nüíé –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: ${amount}$`,
                                message_id: res
                            })
                            return;
                        }
                    }
                    vk.api.call('messages.edit', {
                        peer_id: chat,
                        message: r.smile,
                        message_id: res
                    })
                }, i);
            }
        })
        .catch((error) => {
            console.log('err');
        });
});
bot.hear(/^(?:–æ—Å–Ω–æ–≤–Ω—ã–µ)/i, (message) => {  

			return message.send(
				`
				[üåê]–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
				  üìù –ò–Ω—Ñ–æ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
				  ‚åö –î–∞—Ç–∞ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º—è –∏ —á–∏—Å–ª–æ –ø–æ –ú–°–ö
				  üõë –ë–µ—Å–µ–¥—ã - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ù–∞—à–∏—Ö –±–µ—Å–µ–¥
				  üíº –ü—Ä–æ—Ñ–∏–ª—å 
				  ‚ôª –£—Å–∫–æ—Ä–µ–Ω–∏–µ
				  üéÅ –ë–æ–Ω—É—Å
				  üîù –¢–æ–ø
				  üîç –ü–æ–∏—Å–∫ [—Å—Å—ã–ª–∫–∞(–≤–∫)]
				  üí∞ –ü–µ—Ä–µ–¥–∞—Ç—å [ID] [—Å—É–º–º–∞]
				  üí¥ –î–ø–µ—Ä–µ–¥–∞—Ç—å [ID] [—Å—É–º–º–∞]
				  üëë –î–æ–Ω–∞—Ç
				  üí¥ –ë–∞–ª–∞–Ω—Å
				
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ò–Ω—Ñ–æ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–î–∞—Ç–∞"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ë–µ—Å–µ–¥—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ü—Ä–æ—Ñ–∏–ª—å"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ë–æ–Ω—É—Å"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–¢–æ–ø"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ë–∞–ª–∞–Ω—Å"
				},
					"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–î–æ–Ω–∞—Ç"
				},
					"color": "negative"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–í –º–µ–Ω—é"
				},
					"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–∏–≥—Ä—ã)/i, (message) => {  

			return message.send(
				`
				[üéÆ] –ò–≥—Ä—ã:
			      üé≠ –ö–∞–∑–∏–Ω–æ [—Å—Ç–∞–≤–∫–∞]
				  üé∞ –°–ª–æ—Ç—ã [—Å—Ç–∞–≤–∫–∞]
				   üé≤ –í–∞–±–∞–Ω–∫ - –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É (–≤—Å—ë –∏–ª–∏ –Ω–∏—á–µ–≥–æ)
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ö–∞–∑–∏–Ω–æ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–°–ª–æ—Ç—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–í–∞–±–∞–Ω–∫"
				},
					"color": "positive"
					}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–í –º–µ–Ω—é"
				},
					"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–≤ –º–µ–Ω—é)/i, (message) => {  

			return message.send(
				`
				üôÜ‚Äç‚ôÇ | –í—ã–±–∏—Ä–∞–π –±—Ä–∞—Ç—É—Ö–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–û—Å–Ω–æ–≤–Ω—ã–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ò–≥—Ä—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–Ω–∞—Å—Ç—Ä–æ–π–∫–∏)/i, (message) => {  

			return message.send(
				`
				[üõ†] –ù–∞—Å—Ç—Ä–æ–π–∫–∏:
                  üõ†Nick [–∏–º—è] - –ø–æ–º–µ–Ω—è—Ç—å –∏–º—è –≤ –±–æ—Ç–µ
				  üëÅ‚Äçüó®–°—Ç–∞—Ç–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
				  –°—Ç—Ä–∞–Ω–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–°—Ç–∞—Ç–∞"
				},
					"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ)/i, (message) => {  

			return message.send(
				`
				[üéâ] –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ:
                    üîÆ –®–∞—Ä (—Ñ—Ä–∞–∑–∞)
					üíû –õ—Ç–µ—Å—Ç - —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤–∞—Å –ª—é–±—è—Ç
					‚ùì –ö–æ–≥–¥–∞ [—Ñ—Ä–∞–∑–∞] - –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ —Å–ª—É—á–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
					üîé –ö—Ç–æ —è - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –¢—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ
					üòÄ –ê–Ω–µ–∫–¥–æ—Ç - —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ê–Ω–µ–∫–¥–æ—Ç
					‚ùì –í–∏–∫–∏ [—Å–ª–æ–≤–æ] - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–õ—Ç–µ—Å—Ç"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ö—Ç–æ —è"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ê–Ω–µ–∫–¥–æ—Ç"
				},
					"color": "positive"
					}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–í –º–µ–Ω—é"
				},
					"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|üìú–∫–æ–º–∞–Ω–¥—ã|–Ω–∞—á–∞—Ç—å)/i, (message) => {  

			return message.send(
				`
				üôÜ‚Äç‚ôÇ | –í—ã–±–∏—Ä–∞–π –±—Ä–∞—Ç—É—Ö–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–û—Å–Ω–æ–≤–Ω—ã–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ò–≥—Ä—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–°–∫–∞–Ω"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ú–∞–≥–∞–∑–∏–Ω"
				},
					"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω|shop)/i, (message) => {  

			return message.send(
				`
				üôÜ‚Äç‚ôÇ | –í—ã–±–∏—Ä–∞–π –±—Ä–∞—Ç—É—Ö–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ë–∏–∑–Ω–µ—Å—ã"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–û—Å—Ç–∞–ª—å–Ω–æ–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–±–∏–∑–Ω–µ—Å—ã)/i, (message) => {  

			return message.send(
				`
				üôÜ‚Äç‚ôÇ | –í—ã–±–∏—Ä–∞–π –±—Ä–∞—Ç—É—Ö–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ê—ç—Ä–æ–ø–æ—Ä—Ç"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ë–∞–Ω–∫"
				},
					"color": "positive"
					}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä)/i, (message) => {  

			return message.send(
				`
				–°—Ç–æ–∏–º–æ—Å—Ç—å - 100.000.000 –∫–æ–π–Ω–æ–≤
                –ü—Ä–∏–±—ã–ª—å: 7.000.000 –∫–æ–π–Ω–æ–≤/—á–∞—Å
				
				üôÜ‚Äç‚ôÇ | –í—ã–±–∏—Ä–∞–π –±—Ä–∞—Ç—É—Ö–∞
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä –∫—É–ø–∏—Ç—å"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä –ø—Ä–æ–¥–∞—Ç—å"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä –±–∞–ª–∞–Ω—Å"
				},
					"color": "positive"
					}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
				}
				);
bot.hear(/^(?:–±–æ–Ω—É—Å|üéÅ –±–æ–Ω—É—Å)/i, async (message) => {  

	let user = acc.users.find(a => a.vk === message.user); 
	let podpiska = await vk.api.groups.isMember({ group_id: 75372115, user_id: message.senderId});
	if(podpiska == 0) return message.send(`‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≥—Ä—É–ø–ø—É`);
	
	min = limits[message.user].bonus_min; 
	if (limits[message.user].bonus == true) return message.send(`[@id${message.user}(${user.prefix})] => ‚úñ –ë—Ä–∞—Ç—å –±–æ–Ω—É—Å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑: ${min} –º–∏–Ω—É—Ç `); 
	limits[message.user].bonus = true;
 
	limits[message.user].bonus_min = 60

	setTimeout(() => {
		limits[message.user].bonus = false;
	}, 3600000);

	let ss = f.rand(100,2000);
	if(user.vip >= 1){
		ss += f.rand(200,600)
	}
	user.balance += ss;
	return message.send(`
	[@id${message.user}(${user.prefix})] => –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${f.spaces(Math.round(ss))} coins
	`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–û—Å–Ω–æ–≤–Ω—ã–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ò–≥—Ä—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}]
				]
					})
				});
				}
				);
				
				 
bot.hear(/^(?:—É—Å–∫–æ—Ä–µ–Ω–∏–µ|—É—Å–∫–æ—Ä–µ–Ω–∏—è|—É–ª—É—á—à–µ–Ω–∏—è|‚ôª —É—Å–∫–æ—Ä–µ–Ω–∏–µ|‚ôª —É—Å–∫–æ—Ä–µ–Ω–∏—è|‚ôª —É–ª—É—á—à–µ–Ω–∏—è)\s?([0-9]+)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match; 
	let ss = user.balance

	if (!args[1]) return message.send(
				`
				‚û° - - –ü–æ–∫—É–ø–∫–∞ —É—Å–∫–æ—Ä–µ–Ω–∏–π - - ‚¨Ö
			üîî  –ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –î–æ—Ö–æ–¥ üîî

			1&#8419;. –ö—É—Ä—Å–æ—Ä | ${user.modules["1"].price} | +1/—Å–µ–∫ 
			2&#8419;. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ | ${user.modules["2"].price} | +2/—Å–µ–∫
			3&#8419;. –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç | ${user.modules["3"].price} | +3/—Å–µ–∫
			4&#8419;. –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä | ${user.modules["4"].price} | +4/—Å–µ–∫
			5&#8419;. –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ | ${user.modules["5"].price} | +6/—Å–µ–∫
			6&#8419;. –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä | ${user.modules["6"].price} | +8/—Å–µ–∫
			7&#8419;. –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä | ${user.modules["7"].price} | +10/—Å–µ–∫
			8&#8419;. –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è Microsoft | ${user.modules["8"].price} | +20/—Å–µ–∫
			
			üí∞ –ë–∞–ª–∞–Ω—Å: ${f.spaces(Math.round(ss))} coins

			‚û° - -  –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–£—Å–∫–æ—Ä–µ–Ω–∏–µ (–Ω–æ–º–µ—Ä)" - - ‚¨Ö
			‚û° - -  –ü—Ä–∏–º–µ—Ä: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 1" - - ‚¨Ö
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 1"
					},
						"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 2"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 3"
					},
						"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 4"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 5"
					},
						"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 6"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 7"
					},
						"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 8"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–í –º–µ–Ω—é"
					},
						"color": "primary"
				}]
				]
					})
				});
	let i = args[1];
	
	if (!Number(i) || i < 0 || i > 8) return message.send(`[@id${message.user}(${user.prefix})] => –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä —É—Å–∫–æ—Ä–µ–Ω–∏—è!`, {keyboard: menu});
	if (user.balance < user.modules[Number(i)].price) return message.send(`[@id${message.user}(${user.prefix})] => –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ COINS`);

	user.balance -= Number(user.modules[Number(i)].price);
	user.modules[Number(i)].price += (Math.round(user.modules[Number(i)].price * 0.5));
	user.modules[Number(i)].count += 1;

	return message.send(`[@id${message.user}(${user.prefix})] => –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–µ–ª–∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ!\n‚ùó –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ '–ø—Ä–æ—Ñ–∏–ª—å'`);
	 
});



bot.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|–ø—Ä–æ—Ñ|üíº –ø—Ä–æ—Ñ–∏–ª—å| üíº –ø—Ä–æ—Ñ|üôé‚Äç‚ôÇ–ø—Ä–æ—Ñ–∏–ª—å)/i, async (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let ss = user.balance
	return message.send(`
    @id${message.user}(|${user.tag}| ${user.prefix}),
	 üÜî ID: ${user.id}
	 ${user.statu.toString().replace(/0/gi, "").replace(/1/gi, "–°—Ç–∞—Ç—É—Å: ‚öúVIP").replace(/2/gi, "–°—Ç–∞—Ç—É—Å: üî±PREMIUM").replace(/3/gi, "–°—Ç–∞—Ç—É—Å: üëÅ‚Äçüó®–°–ª–µ–¥—è—â–∏–π").replace(/4/gi, "–°—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")} 

üí∞ –ë–∞–ª–∞–Ω—Å: ${f.spaces(Math.round(ss))} coins
üí¥ –î–æ–Ω–∞—Ç: ${user.donate}‚ÇΩ

–°—Ç—Ä–∞–Ω–∞: ${user.country}
	 
	 ‚ö†
	
	 ‚è≥ –í–∞—à–∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è ‚è≥ 
	 üìï –ö—É—Ä—Å–æ—Ä [${user.modules["1"].count}] +${user.modules["1"].count*1}/—Å–µ–∫
	 üìó –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞  [${user.modules["2"].count}] +${user.modules["2"].count*2}/—Å–µ–∫
	 üìò –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç  [${user.modules["3"].count}] +${user.modules["3"].count*3}/—Å–µ–∫
     üìô –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["4"].count}] +${user.modules["4"].count*4}/—Å–µ–∫
     üìî –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ [${user.modules["5"].count}] +${user.modules["5"].count*6}/—Å–µ–∫
	 üìì –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["6"].count}] +${user.modules["6"].count*8}/—Å–µ–∫
	 üñ• –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä [${user.modules["7"].count}] +${user.modules["7"].count*10}/—Å–µ–∫
	 ‚ìÇ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è Microsoft [${user.modules["8"].count}] +${user.modules["8"].count*20}/—Å–µ–∫

	üíø –°—É–º–º–∞—Ä–Ω–æ: ${(user.modules["1"].count*1)+(user.modules["2"].count*2)+(user.modules["3"].count*3)+(user.modules["4"].count*4)+(user.modules["5"].count*6)+(user.modules["6"].count*8)+(user.modules["7"].count*10)+(user.modules["8"].count*20)}/—Å–µ–∫
	`);
	 
});       

bot.hear(/^(?:get)/i, async (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let id = acc.users.find(a => a.vk === message.$match[1]); 
	let ss = id.balance
	if(user.admin < 1) return; 
	return message.send(`
    @id${id.vk}(${id.prefix}),
	 üÜî ID: ${id.id}
	 ${id.statu.toString().replace(/0/gi, "").replace(/1/gi, "–°—Ç–∞—Ç—É—Å: ‚öúVIP").replace(/2/gi, "–°—Ç–∞—Ç—É—Å: üî±PREMIUM").replace(/3/gi, "–°—Ç–∞—Ç—É—Å: üëÅ‚Äçüó®–°–ª–µ–¥—è—â–∏–π").replace(/4/gi, "–°—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")} 

üí∞ –ë–∞–ª–∞–Ω—Å: ${f.spaces(Math.round(ss))} coins
üí¥ –î–æ–Ω–∞—Ç: ${id.donate}‚ÇΩ
	 
	 ‚ö†
	
	 ‚è≥ –£—Å–∫–æ—Ä–µ–Ω–∏—è ‚è≥ 
	 üìï –ö—É—Ä—Å–æ—Ä [${id.modules["1"].count}] +${id.modules["1"].count*1}/—Å–µ–∫
	 üìó –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞  [${id.modules["2"].count}] +${id.modules["2"].count*2}/—Å–µ–∫
	 üìò –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç  [${id.modules["3"].count}] +${id.modules["3"].count*3}/—Å–µ–∫
     üìô –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä  [${id.modules["4"].count}] +${id.modules["4"].count*4}/—Å–µ–∫
     üìî –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ [${id.modules["5"].count}] +${id.modules["5"].count*6}/—Å–µ–∫
	 üìì –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä  [${id.modules["6"].count}] +${id.modules["6"].count*8}/—Å–µ–∫
	 üñ• –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä [${id.modules["7"].count}] +${id.modules["7"].count*10}/—Å–µ–∫
	 ‚ìÇ –ö–æ—Ä–ø–æ—Ä–∞—Ü–∏—è Microsoft [${id.modules["8"].count}] +${id.modules["8"].count*20}/—Å–µ–∫

	üíø –°—É–º–º–∞—Ä–Ω–æ: ${(id.modules["1"].count*1)+(id.modules["2"].count*2)+(id.modules["3"].count*3)+(id.modules["4"].count*4)+(id.modules["5"].count*6)+(id.modules["6"].count*8)+(id.modules["7"].count*10)+(id.modules["8"].count*20)}/—Å–µ–∫
	`);
	 
});       

bot.hear(/^(?:—Ç–æ–ø|üîù —Ç–æ–ø|üë•—Ç–æ–ø)/i, (message) => { 

	let text = ``; var tops = []
	 
	for (i=0; i<acc.users.length; i++) { 
		tops.push({
			id: acc.users[i].id,
			vk: acc.users[i].vk, 
			balance: acc.users[i].balance,
			prefix: acc.users[i].prefix,
			tag: acc.users[i].tag
		}) 
	}
	 
	tops.sort(function(a, b) {
		if (b.balance > a.balance) return 1
		if (b.balance < a.balance) return -1
		return 0
	})
	var yo = []
 
	for (var g = 0; g < 10; g++) {
		if (tops.length > g) {
			let ups = g; 
			ups += 1;
			if(g <= 8) ups = `${ups}&#8419;` 
			if(g == 9) ups = `&#128287;`
			yo.push({ id: tops[g].id, vk: tops[g].vk, balance: tops[g].balance, tag: tops[g].tag, prefix: tops[g].prefix, smile: `${ups}` })
		}
	}
	text = "üí¥ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ üí¥ \n" + yo.map(a => a.smile + `. @id${a.vk} (|${a.tag}| ${a.prefix}) >> ${Math.round(a.balance)} Coins`).join("\n") 
 

	for (i=0;i<tops.length;i++) {
		if(message.user == tops[i].vk) {
			return message.send(text + `\n- - - - - -\n~ –í—ã –Ω–∞ ${i+1} –º–µ—Å—Ç–µ ~`)
		}
	} 
});


bot.hear(/^(?:–∫–ª–∏–∫|üëÜüèª–∫–ª–∏–∫)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let count = ['üòÉ','üòÄ','üòÑ','üòÅ','‚ò∫','üôÇ'].random();
	let how = ['–Ω–æ—Ä–º–∞–ª—å–Ω–æ','–∫—Ä—É—Ç–æ','—Ö–æ—Ä–æ—à–æ','–æ—Ç–ª–∏—á–Ω–æ','—Å—É–ø–µ—Ä','–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ'].random();
	let ss = f.rand(100,200);
	if(user.statu == 1){ 
	ss = f.rand(300,400) 
	} 
	if(user.statu == 2){ 
	ss = f.rand(600,700) 
	} 
	if(user.vk == 217885070||user.vk == 525933711){ 
	ss = f.rand(5000,15000) 
	} 
	
	user.balance += ss; 
	acc.kazna  += ss/2;
	return message.reply(` 
	@id${message.user}(|${user.tag}| ${user.prefix}), ${how} –∫–ª–∏–∫–∞–µ—à—å ${count} !\nüí∞–¢—ã –Ω–∞–∫–ª–∏–∫–∞–ª(–∞): ${f.spaces(Math.round(ss))} coins `,
	{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–û—Å–Ω–æ–≤–Ω—ã–µ"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ò–≥—Ä—ã"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ"
					},
						"color": "positive"
				}],
				[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "üëÜüèª–ö–õ–ò–ö"
				},
					"color": "negative"
				}]
				]
					})
				});
	}
	);

//—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ 

bot.hear(/^(?:–∫—Ç–æ —è)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user);
		let count = ['–ò–≤–∞–Ω–≥–∞–π','–¢–æ–ø—á–∏–∫','—Ç–µ–ª–∫–∞','–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ—Ä','—á–º–æ','–∫—Ä—É—Ç–æ–π','–ø—Ä–∏–Ω—Ü','—Ç–µ–ª–∫–∞ –∞–¥–º–∏–Ω–∞','—á–µ–ª–æ–≤–µ–∫','–ø–µ—Å','–æ–≤—Ü–∞','–ª–æ—Ö','—ä–µ—ä','–∫–∏—Å—è','–ü–∞–Ω–∏–Ω','–¥–µ–±–∏–ª','–±–æ–≥–∞—Ç—ã–π','–º–∏–ª–ª–∏–æ–Ω–µ—Ä','–∞—É–µ—à–Ω–∏–∫','–ø–ª–æ—Ö–æ–π —á–µ–ª–æ–≤–µ–∫','—Å–Ω–µ–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫','–ø—É–∫–∞–Ω','—Å—ã–Ω –º–∞–º–∏–Ω–æ–π –ø–æ–¥—Ä—É–≥–∏','–æ—Ç–µ—Ü 7-—Ö –∫–æ–∑–ª—è—Ç','–∫–∞–∫–∞—à–∫–∞ –µ–¥–∏–Ω–æ—Ä–æ–≥–∞','–ö–∞–ø–∏—Ç–∞–Ω','–≥–æ–≤–Ω–æ','—É–ø–æ—Ä–æ—Ç—ã–π','–∞–ª–∫–∞—à','—Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä','–ø—á–µ–ª–∫–∞','—Ñ–µ—è','–ê–Ω–∂–µ–ª–ª–∞','–†–∏–∫–∞—Ä–¥–æ –ú–∏–ª–æ—Å',' —Ñ–ª–µ–∫—Å–µ—Ä','–ü—É—Ç–∏–Ω','–ù–∞–≤–∞–ª—å–Ω—ã–π','–æ—Ñ–Ω–∏–∫','—Å–ø—É–ª–∞–µ –º—É–ª–∞–µ',' –≥–æ–Ω—â–∏–∫ –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π','–±–æ–± —Å—Ç—Ä–æ–∏—Ç–µ–ª—å','—Ü–µ–ª–∫–∞','—à–ª—é—à–∫–∞','—Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞'].random();
		return message.send(`–î—É–º–∞—é —á—Ç–æ —Ç—ã ${count} :)`);
}); 

bot.hear(/^(?:—à–∞—Ä)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let rez = [true].random();
	if(rez == false){
	}else{ 
		let count = ['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"'].random();
		return message.send(`üòÉ ${count}`);
	}
}); 
bot.hear(/^(?:–∫–æ–≥–¥–∞)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
		return message.reply(`üòÉ –î—É–º–∞—é —á—Ç–æ —á–µ—Ä–µ–∑ ${rand(1,360)} –¥–Ω–µ–π`);
}); 
bot.hear(/^(?:–ø–∏–∞—Ä)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user);  
		return message.reply(`–¢—ã-–ø–∏–∞—Ä—â–∏–∫!\n–¢—ã –¥–æ–ª–∂–µ–Ω –ø–∏–∞—Ä–∏—Ç—å –±–æ—Ç–∞ –≤ –±–µ—Å–µ–¥–∞—Ö!\n\n–ë–µ—Å–µ–¥—ã –¥–ª—è –ø–∏–∞—Ä–∞ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –∑–¥–µ—Å—å https://vk.com/topic-158861435_39990067`);
}); 
bot.hear(/^(?:–±–µ—Å–µ–¥—ã)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
		return message.reply(`–ù–ê–®–ò –ë–ï–°–ï–î–´\n\n\n–ë–ï–°–ï–î–ê ‚Ññ1 >> https://vk.me/join/AJQ1d_DJuBFteMGfJp5XDGlQ`);
}); 
bot.hear(/^(?:–ª—Ç–µ—Å—Ç)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
		return message.reply(`üë©‚Äç‚öïüíñ –¢–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª, –≤–∞—Å –ª—é–±—è—Ç  ${rand(1,397)} —á–µ–ª–æ–≤–µ–∫`);
});


bot.hear(/^(?:eval)\s?([^]+)?/i, (message) => { 
	let args = message.$match; 
	if(message.user != 217885070) return;
	return message.send(`${eval(args[1])}`);
});

function rand(min, max) {return Math.round(Math.random() * (max - min)) + min} 
var parserInt = (str) => parseInt(str.replace(/k|–∫/ig, "000"));
function spaces(string) {
	if (typeof string !== "string") string = string.toString();
	return string.split("").reverse().join("").match(/[0-9]{1,3}/g).join(".").split("").reverse().join("");
};
Array.prototype.random = function() {  
	return this[Math.floor(this.length * Math.random())];
}


 setInterval(function(){
	for (i=0;i<acc.users.length;i++) {
	 	let u = acc.users[i];
		if (u) {
			u.balance += Number(u.modules['1'].profit * u.modules['1'].count);
		 	u.balance += Number(u.modules['2'].profit * u.modules['2'].count);
		 	u.balance += Number(u.modules['3'].profit * u.modules['3'].count);
		 	u.balance += Number(u.modules['4'].profit * u.modules['4'].count);
		 	u.balance += Number(u.modules['5'].profit * u.modules['5'].count);
		 	u.balance += Number(u.modules['6'].profit * u.modules['6'].count);
			u.balance += Number(u.modules['7'].profit * u.modules['7'].count);
			u.balance += Number(u.modules['8'].profit * u.modules['8'].count);

		 	if (u.vip == 1) { u.balance += 20 }
		 	if (u.vip == 2) { u.balance += 40 }
		 	if (u.vip == 3) { u.balance += 60 }
		} 
	 }
}, 1000);

function restart() {
 		  	for(i=1;i < 200000; i++){  
 		  		if(acc.users[i]){
				acc.users[i].bloks.dbonuce = false;
				}
			} 
	}
function time() {
			let date = new Date();
			let days = date.getDate();
			let hours = date.getHours();
			let minutes = date.getMinutes();
			let seconds = date.getSeconds();
			if (hours < 10) hours = "0" + hours;
			if (minutes < 10) minutes = "0" + minutes;
			if (seconds < 10) seconds = "0" + seconds;
			var times = hours + ':' + minutes + ':' + seconds
			return times;
	}
function poltime() {
			let date = new Date();
			let days = date.getDate();
			let hours = date.getHours()+1;
			let minutes = date.getMinutes();
			let seconds = date.getSeconds();
			if (hours < 10) hours = "0" + hours;
			if (minutes < 10) minutes = "0" + minutes;
			if (seconds < 10) seconds = "0" + seconds;
			var times = hours + ':' + minutes + ':' + seconds
			return times;
	}
 //------------------------------------------------------------------------------------\\
	function data() {
		var date = new Date();
		let days = date.getDate();
		let month = date.getMonth() + 1; 
		if (month < 10) month = "0" + month;
		if (days < 10) days = "0" + days;
		var datas = days + '.' + month + '.2019' ;
		return datas;
	}
 //---------------------------------------
/*----------------------------------------------------------------------------------------------------------*/
async function run() {
	await vk.updates.startPolling(); 
	restart();
}
run().then(() => {
	    console.log('[START] --> ' + f.time());
})
.catch((error) => {
	    console.error('[ERROR] | '+error);
});
/*----------------------------------------------------------------------------------------------------------*/
bot.setHearFallbackHandler(async (context, next) => {
	return message.send(`—Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å ¬´–ø–æ–º–æ—â—å¬ª —á—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã.`);
});