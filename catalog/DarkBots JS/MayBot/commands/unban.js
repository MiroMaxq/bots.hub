const banlist = require("../plugins/autosave.js").banlist
const unban = require("../plugins/systems.js").unban
const accs = require("../plugins/autosave.js").accs
const mes = require("../settings/messages.json")
const times = require("../plugins/functions.js").time
module.exports = {
    r: /(unban|—Ä–∞–∑–±–∞–Ω–∏—Ç—å|—Ä–∞–∑–±–∞–Ω)\s?([0-9]+)?/i,
    f: function (msg, args, vk, bot){
        vk.api.call("messages.getById", {message_ids: msg.id}).then((res) => {
            var gone = ""
    if(!res.items[0].fwd_messages){
        var unb = unban({id: Number(args[2]), author: msg.user, code: -1})
        var user = args[2]
        if(unb.acc.ban == false){
            gone = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id"+ user +" –Ω–µ –≤ –±–∞–Ω–µ."
        }else if(unb.acc.system == true){
            gone = "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å *id"+ user +" —Ç.–∫ –µ–≥–æ –∑–∞–±–∞–Ω–∏–ª–∞ —Å–∏—Å—Ç–µ–º–∞."
        }else{
            gone = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id" + user + " —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
        }
    }else{
            for(var j = 0; j < res.items[0].fwd_messages.length; j++){
                var user = res.items[0].fwd_messages[j].user_id
                  var unb = unban({id: Number(user), author: msg.user, code: -1})
                  if(unb.acc.ban == false){
                      gone += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id"+ user +" –Ω–µ –≤ –±–∞–Ω–µ.\n"
                  }else if(unb.acc.system == true){
                      gone += "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å *id"+ user +" —Ç.–∫ –µ–≥–æ –∑–∞–±–∞–Ω–∏–ª–∞ —Å–∏—Å—Ç–µ–º–∞.\n"
                  }else{
                      gone += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å *id" + user + " —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n"
                  }
            }
    }
    gone += "\n\n‚è∞ | –í—Ä–µ–º—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: " + times(2) + "\nüë¶ | –ê–≤—Ç–æ—Ä: *id" + msg.user
    bot({text: gone})
    })
    },
    rights: 4,
    desc: "—Ä–∞–∑–±–∞–Ω–∏—Ç—å <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>? -- —Ä–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    type: "all",
    typ: "prosto"
}