<?php
function ManageAnonym($cmd){
	global $UserInfo,$Nick,$body,$bodyx,$bodyxl;
	$body3 = substr($body, strlen($bodyx[0].$bodyx[1])+2);
	switch ($cmd) {
		case '—Å–æ–∑–¥–∞—Ç—å':
			$message = CreateAnonymous($body3);
			break;
		case '–≤—ã–π—Ç–∏':
		case '–ø–æ–∫–∏–Ω—É—Ç—å':
			$message = LeaveAnonym();
			break;
		case '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ':
			$message = AnonymHello();
			break;
		case '–≤–æ–π—Ç–∏':
		case '–≤—Å—Ç—É–ø–∏—Ç—å':
			$message = ConnectToAnonym($bodyx[2]);
			break;
		case '–∂–µ—Ä—Ç–≤–∞':
		case '–¥–æ–Ω–∞—Ç':
			$message = DonateAnonym(KKK($bodyxl[2]));
			break;
		case '–º–µ–º':
		case '—É—á':
		case '—É—á–∞—Å—Ç–Ω–∏–∫–∏':
			$message = GetMembersAnonym($bodyxl[2]);
			break;
		case '–≤–∏—Ä—É—Å':
		case 'virus':
			if(empty($bodyxl[2])){
				$message = GetAnonymVirus();
			}else{
				$message = SetNameVirusAnonym($body3);
			}
			break;	
		case '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
		case '–Ω—Å—Ç—Ä':
			$message = GetSettingsAnonym();
			break;
		case '—á—Å':
			$user_id = FastUserId('role');
			$message = AddPlayerToBlAnonym($user_id);
			break;
		case '–¥–µ—á—Å':
			$user_id = FastUserId('role');
			$message = DeletePlayerToBlAnonym($user_id);
			break;
		case '—á—Å–∫–∞':
			$message = GetBlackListAnonym($bodyxl[2]);
			break;
		case '—Ä–æ–ª—å':
		case '–ø—Ä–∏–≤–µ–ª–µ–≥–∏—è':
		case '—Ä':
			$Fwd = CheckFwd();
			$user_id = $Fwd ? FastUserId() : $bodyxl[2];
			$user_id =  GetId($user_id);
			$val = $Fwd ? $bodyxl[2] : $bodyxl[3];
			$message = SetRoleAnonym($user_id,$val);
			break;
		case 'exec':
		case '–µ—Ö–µ—Å':
			$message = SellRewardAnonym();
			break;
		case 'up':
		case '–∞–ø':
		case '–±–æ–Ω—É—Å':
		case '–±–æ–Ω—É—Å—ã':
		case '–∞–ø–≥—Ä–µ–π–¥—ã':
			$message = BuyUpgradeAnonym($bodyxl[2]);
			break;
		case 'minf':
		case '–º–∏–Ω—Ñ':
			$message = SetMinimalFanonym(KKK($bodyxl[2]));
			break;
		case '–º–µ—Å—Ç–æ':
			$message = AddPlacesAnonym();
			break;
		default:
			$message = GetAnonym($UserInfo['anonym']);
			break;
	}
	return $message;
}

function HelpCmdAnonym(){
	global $Nick;
	$message = $Nick.', —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ anonym:<br>'.
	'
	üìî–ê–Ω–æ–Ω–∏–º - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º anonym
	üìì–ê–Ω–æ–Ω–∏–º —á—Å–∫–∞ - —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ anonym
	‚ûï–ê–Ω–æ–Ω–∏–º —Å–æ–∑–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]
	üï∑–ê–Ω–æ–Ω–∏–º exec - –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—É—Å
	üë§–ê–Ω–æ–Ω–∏–º —Ä–æ–ª—å [—Å—Å—ã–ª–∫–∞/—Å–º—Å] [+/-]
	‚ùå–ê–Ω–æ–Ω–∏–º –≤—ã–π—Ç–∏
	‚öô–ê–Ω–æ–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
	üéÅ–ê–Ω–æ–Ω–∏–º –±–æ–Ω—É—Å—ã
	üö™–ê–Ω–æ–Ω–∏–º –º–µ—Å—Ç–æ - +1 –º–µ—Å—Ç–æ –≤ anonym
	üñ•–ê–Ω–æ–Ω–∏–º –º–∏–Ω—Ñ [—á–∏—Å–ª–æ] - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ F –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
	‚õî–ê–Ω–æ–Ω–∏–º —á—Å [—Å–º—Å/–∏–¥ –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ]
	üë§–ê–Ω–æ–Ω–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ [—Ç–µ–∫—Å—Ç+–∞—É–¥–∏–æ]
	‚ôø–ê–Ω–æ–Ω–∏–º –≤–æ–π—Ç–∏ [id]
	üí∞–ê–Ω–æ–Ω–∏–º –∂–µ—Ä—Ç–≤–∞ [—Å—É–º–º–∞]
	üë•–ê–Ω–æ–Ω–∏–º –º–µ–º [../—Å—Ç—Ä–∞–Ω–∏—Ü–∞]
	üêû–ê–Ω–æ–Ω–∏–º –≤–∏—Ä—É—Å [../–Ω–∞–∑–≤–∞–Ω–∏–µ]
	';
	return $message;
}
function GetAnonym($id = false){
	global $UserInfo,$Nick,$peer_id;
	$id = empty($id) ? $UserInfo['anonym'] : $id;
	$anonym = SelectAnonym($id);
	if($anonym){
		$CountMembers = count(json_decode($anonym['members'],1));
		$message = $Nick.', –≤–∞—à anonym:<br>'.
		'üÜîID: "'.$anonym['id'].'"<br>'.
		'üî•–£—Ä–æ–≤–µ–Ω—å: "'.$anonym['lvl'].'"<br>'.
		'‚úè–ù–∞–∑–≤–∞–Ω–∏–µ: "'.$anonym['name'].'"<br>'.
		'üë§–ê–Ω–æ–Ω–∏–º–æ–≤: '.ConvertValute($CountMembers).'/'.$anonym['max_members'].'<br>'.
		'üí∞–û–±—â–∞–∫: '.ConvertValute($anonym['balance']).'$<br>';
		//$dirImg = 'modules/anonymous/viruses/'.$anonym['lvl'].'.PNG';
		//$attachment = PostPhoto($UserInfo['id_VK'],$dirImg);
		
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function GetSettingsAnonym(){
	global $UserInfo,$Nick,$peer_id;
	$anonym = SelectAnonym();
	if($anonym){
		$aSettings = json_decode($anonym['settings'],1);
		
		$attachment = !empty($aSettings['hello_attachment']) ? $aSettings['hello_attachment'] : false;
		
		$attachment_text = $attachment == false ? '–ù–µ—Ç—É' : '–ï—Å—Ç—å';
		
		$virusName = empty($aSettings['virus_name']) ? 'Virus'.rand(1,100) : $aSettings['virus_name'];

		$hello_text = !empty($aSettings['hello_text']) ? $aSettings['hello_text'] : 'undefined';
		
		$message = $Nick.', –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–≥–æ anonym:<br>'.
		'üì®–¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: "'.$hello_text.'"<br>'.
		'üìØ–ê—É–¥–∏–æ-—Ñ–∞–π–ª: '.$attachment_text.'<br>'.
		'üêû–í–∏—Ä—É—Å: "'.$virusName.'"<br>'.
		'üñ•–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ F –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: '.ConvertValute($aSettings['min_f_to_join']).'F<br>';
		SellMsg($peer_id,$message,$attachment);
		return;
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function AddPlacesAnonym(){
	global $UserInfo,$Nick,$admin;
	$anonym = SelectAnonym();
	$price = 2;
	if($anonym){
		if($UserInfo['role'] <=2 || $UserInfo['id_VK'] == $admin){
			if($UserInfo['donate_balance'] >= $price){
				SetFieldF('donate_balance',$UserInfo['donate_balance']-$price);
				SetFieldAnonym('max_members',$anonym['max_members']+1,$anonym['id']);
				$message = $Nick.', +1 –º–µ—Å—Ç–æ –≤ –≤–∞—à–µ–º anonym.';
			}else{
				$message = $Nick.', —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞: '.$price.SwitchEmoji('donate_balance');
			}
		}else{
			$message = $Nick.', –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –º–µ—Å—Ç–∞ –≤ anonym.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function SetMinimalFanonym($val){
	global $UserInfo,$Nick,$admin;
	$anonym = SelectAnonym();
	if($anonym){
		$aSettings = json_decode($anonym['settings'],1);
		$role = GetMyRoleAnonym();
		if($role >=2){
			if(($val >0 && $val < 120)|| $UserInfo['id_VK'] == $admin){
				$aSettings['min_f_to_join'] = $val;
				SetFieldAnonym('settings',json_encode($aSettings,JSON_UNESCAPED_UNICODE),$anonym['id']);
				$message = $Nick.', –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ üñ•F('.ConvertValute($val).')üñ• –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ anonym.';
			}else{
				$message = $Nick.', –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.';
			}
		}else{
			$message = $Nick.', –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ anonym.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function BuyUpgradeAnonym($id = false){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	if($anonym){
		if(empty($anonym['bonuses'])){
			SetFieldAnonym('bonuses',DefaultBonusesAnonym(),$anonym['id']);
			$anonym = SelectAnonym();
		}
		$aBonuses = json_decode($anonym['bonuses'],1);
		$role = GetMyRoleAnonym();
		if(!empty($id)){
			if($role >=2){
				$bonuse = GetUpgradeBonuseAnonym($id,$anonym['lvl']);
				if($bonuse){
					if($anonym['balance'] >= $bonuse['price']){
						if($aBonuses[$bonuse['abbr']] + 5 <= $bonuse['max_value']){

							$aBonuseLvl = $aBonuses[$bonuse['abbr']]/5;
							$price = $bonuse['price']*$aBonuseLvl; // price bonuse 

							$aBonuses[$bonuse['abbr']] += 5;// +step bonuse
							
							SetFieldAnonym('balance',$anonym['balance']-$price,$anonym['id']);// minus balance
							SetFieldAnonym('bonuses',json_encode($aBonuses),$anonym['id']); // set bonuses
							$message = $Nick.', –≤—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –±–æ–Ω—É—Å: "'.$bonuse['name'].'" –∑–∞ '.ConvertValute($price).'$';
						}else{
							$message = $Nick.', —É—Ä–æ–≤–µ–Ω—å –¥–∞–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –º–∞–∫—Å–∏–º–∞–ª–µ–Ω.';
						}
					}else{
						$message = $Nick.', –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ $ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ anonym.';
					}
				}else{
					$message = $Nick.', –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä.';
				}
			}else{
				$message = $Nick.', –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫ —á—Ç–æ–±—ã —É–ª—É—á—à–∞—Ç—å –±–æ–Ω—É—Å—ã anonym.';
			}
		}else{
			$i = 1;
			$bonuse = GetUpgradeBonuseAnonym($i,$anonym['lvl']);
			while ($bonuse != false) {
				$aBonuseProzent = $aBonuses[$bonuse['abbr']];
				$aBonuseLvl = $aBonuseProzent/5;
				$price = $bonuse['price']*$aBonuseLvl;
				$message .= ConvertNumEmoji($i).'.'.$bonuse['name'].' '.$aBonuseProzent.'% ('.ConvertValute($price).'$)<br>';
				$i++;
				$bonuse = GetUpgradeBonuseAnonym($i,$anonym['lvl']);
			}
			$message .= 'üîî–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–æ–Ω—É—Å–∞ –Ω–∞–ø–∏—à–∏—Ç–µ "–∞–Ω–æ–Ω–∏–º –±–æ–Ω—É—Å—ã [–Ω–æ–º–µ—Ä]"';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
	
}
function SetRoleAnonym($user_id,$val){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	if($anonym){
		$role = GetMyRoleAnonym();
		$User = selectFromIDVK($user_id);
		if($User){
			if($User['id_VK'] != $UserInfo['id_VK']){
				$members = json_decode($anonym['members'],1);
				if(!empty($members[$User['id_VK']])){
					if($role == 3){
						$roleUser = SwitchRolesAnonym($members[$User['id_VK']]);// member admin developer...
						if($val == '+'){
							if($roleUser == 1){
								$roleUser = 2;
								$members[$User['id_VK']] = SwitchRolesAnonym($roleUser,'role');// —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
								SetFieldAnonym('members',json_encode($members,JSON_UNESCAPED_UNICODE),$anonym['id']);
								$message = $Nick.', –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞ "'.$User['name'].'" '.$members[$User['id_VK']].' –≤ —Å–≤–æ–µ–º anonym.';
							}else{
								$message = $Nick.', –æ—à–∏–±–∫–∞: –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞ –≤—ã—à–µ –∞–¥–º–∏–Ω–∞.';
							}
						}elseif($val == '-'){
							if($roleUser != 2){
								$roleUser = 1;
								$members[$User['id_VK']] = SwitchRolesAnonym($roleUser,'role');// —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ	
								SetFieldAnonym('members',json_encode($members,JSON_UNESCAPED_UNICODE),$anonym['id']);
								$message = $Nick.', –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞ "'.$User['name'].'" '.$members[$User['id_VK']].' –≤ —Å–≤–æ–µ–º anonym.';
							}else{
								$message = $Nick.', –æ—à–∏–±–∫–∞: –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞ –Ω–∏–∂–µ –∏–≥—Ä–æ–∫–∞.';
							}
						}else{
							$message = $Nick.', –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã +/-';
						}
					}else{
						$message = $Nick.', –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫ —á—Ç–æ–±—ã –º–µ–Ω—è—Ç—å —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ anonym.';
					}
				}else{
					$message = $Nick.', –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –≤ –≤–∞—à–µ–º anonym.';
				}
			}else{
				$message = $Nick.', –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å —Å–≤–æ—é —Ä–æ–ª—å.';
			}
		}else{
			$message = $Nick.', –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function GetAnonymVirus(){
	global $UserInfo,$Nick,$peer_id;
	$anonym = SelectAnonym();
	if($anonym){
		$aSettings = json_decode($anonym['settings'],1);
		$virusName = empty($aSettings['virus_name']) ? 'Virus'.rand(1,100) : $aSettings['virus_name'];
		$dirImg = 'modules/anonymous/viruses/'.$anonym['lvl'].'.PNG';
		$attachment = PostPhoto($UserInfo['id_VK'],$dirImg);
		$message = $Nick.', –≤–∏—Ä—É—Å –≤–∞—à–µ–≥–æ anonym:<br>'.
		'‚úè–ù–∞–∑–≤–∞–Ω–∏–µ: '.$virusName.'<br>'.
		SwitchEmoji('plus').'–ü—Ä–∏–±—ã–ª—å: '.ConvertValute(GetIncomeVirus()).SwitchEmoji('btc');
		SellMsg($peer_id,$message,$attachment);
		return;
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function GetIncomeVirus(){
	$anonym = SelectAnonym();
	$aSettings = json_decode($anonym['settings'],1);
	$VirusIncome = $anonym['lvl']*100*('1.'.rand(0,99));
	return $VirusIncome;
}
function SellRewardAnonym(){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	$aSettings = json_decode($anonym['settings'],1);
	$time_sell_reward = $aSettings['time_sell_reward'];
	if($anonym){
		if(GetBanTime($time_sell_reward) == 'ok'){
			$members = json_decode($anonym['members'],1);
			$countMembers = count($members);
				if($countMembers>=3){
				$VirusIncome = GetIncomeVirus();
				$Reward = floor($VirusIncome/$countMembers);
				for($i=0;$i<$countMembers;$i++){
					$key = key($members);
					$User = selectFromIDVK($key);
					SetField('btc',$User['btc']+$Reward,$User['id_VK']);
					next($members);
				}
				$aSettings['time_sell_reward'] = time()+GetBanTimes('3d');
				SetFieldAnonym('settings',json_encode($aSettings,JSON_UNESCAPED_UNICODE),$anonym['id']);
				$message = $Nick.', –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º anonym –≤—ã–¥–∞–Ω–æ –ø–æ '.ConvertValute($Reward).SwitchEmoji('btc');
			}else{
				$message = $Nick.', –≤ anonym –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 3 —É—á–∞—Å—Ç–Ω–∏–∫–∞.';
			}
		}else{
			$message = $Nick.', –ø–æ–¥–æ–∂–¥–∏—Ç–µ: '.GetBanTime($time_sell_reward);
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}

function GetMembersAnonym($offset = false){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	$offset = !empty($offset) ? ($offset-1)*10 : 0;
	if($anonym){
		$members = json_decode($anonym['members'],1);
		$countMembers = count($members);
		$message = $Nick.', member list:<br>';
		if($countMembers >= $offset){
			for($i=$offset;$i<$countMembers;$i++){
				$key = key($members);
				$User = selectFromIDVK($key);
				if(!$User){
					AddPlayerToBlAnonym($key,1);
					continue;
				}
				$message .= ConvertNumEmoji($i+1).'.[id'.$User['id_VK'].'|'.$User['name'].'] - –†–æ–ª—å:'.ConvertNumEmoji(SwitchRolesAnonym($members[$key])).'<br>';
				next($members);
			}
		}else{
			$message = $Nick.', –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function GetBlackListAnonym($offset = false){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	$offset = !empty($offset) ? ($offset-1)*10 : 0;
	if($anonym){
		$members = json_decode($anonym['black_list'],1);
		$countMembers = count($members);
		if($countMembers>0){
			$message = $Nick.', black list:<br>';
			if($countMembers >= $offset){
				for($i=$offset;$i<$countMembers;$i++){
					$User = selectFromIDVK($members[$i]);
					$message .= ($i+1).'.[id'.$User['id_VK'].'|'.$User['name'].']<br>';
				}
			}else{
				$message = $Nick.', –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.';
			}
		}else{
			$message = $Nick.', —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–∞—à–µ–≥–æ anonym –ø—É—Å—Ç.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}

function DeletePlayerToBlAnonym($user_id){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	if($anonym){
		$role = GetMyRoleAnonym();
		if($role>=2){
			$aBlackList = json_decode($anonym['black_list'],1);
			$aBlackList = empty($aBlackList) ? array() : $aBlackList;
			$AnonymMembers = json_decode($anonym['members'],1);
			$User = selectFromIDVK($user_id);
			if($User){
				if(in_array($User['id_VK'], $aBlackList)){	
					$key  = array_search($User['id_VK'], $aBlackList);
					unset($aBlackList[$key]);
					SetFieldAnonym('black_list',json_encode($aBlackList,JSON_UNESCAPED_UNICODE),$anonym['id']);
					$message = $Nick.', –≤—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "'.$User['name'].'" –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.';
				}else{
					$message = $Nick.', –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.';
				}
					
			}else{
				$message = $Nick.', –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å.';
			}
				
				
		}else{
			$message = $Nick.', —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function AddPlayerToBlAnonym($user_id,$isSystem = false){
	global $UserInfo,$Nick;
	$anonym = SelectAnonym();
	if($anonym ){
		$role = GetMyRoleAnonym();
		if($role>=2 || !empty($isSystem)){
			$aBlackList = json_decode($anonym['black_list'],1);
			$aBlackList = empty($aBlackList) ? array() : $aBlackList;

			$AnonymMembers = json_decode($anonym['members'],1);

			$User = selectFromIDVK($user_id);
			if($User || !empty($isSystem)){
				if($UserInfo['id_VK'] != $User['id_VK']){
					if(!in_array($User['id_VK'],$aBlackList)){
						if(!empty($AnonymMembers[$user_id])){
							unset($AnonymMembers[$user_id]);
							SetFieldAnonym('members',json_encode($AnonymMembers,JSON_UNESCAPED_UNICODE),$anonym['id']);
						}
						if(empty($isSystem)){
							array_push($aBlackList, $User['id_VK']);
							SetFieldAnonym('black_list',json_encode($aBlackList,JSON_UNESCAPED_UNICODE),$anonym['id']);
						}
					}else{
						return $Nick.', –∏–≥—Ä–æ–∫ —É–∂–µ –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.';
					}
					
					if($User['anonym'] == $anonym['id']){
						SetField('anonym',0,$User['id_VK']);
					}
					$message = $Nick.', –≤—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "[id'.$User['id_VK'].'|'.$User['name'].']" –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ anonym.';
				}else{
					$message = $Nick.', –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ —á—Å —Å–µ–±—è.';
				}
			}else{
				$message = $Nick.', –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å.';
			}
		}else{
			$message = $Nick.', —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function SetNameVirusAnonym($str){
	global $UserInfo,$Nick;
	$max_lenght = 18;
	$anonym = SelectAnonym();
	$role = GetMyRoleAnonym();
	if($anonym){
		if($role >= 2){
			if(iconv_strlen($str) <= $max_lenght){	
				if(CheckStrAnonum($str)){
					if($anonym){
						$aSettings = json_decode($anonym['settings'],1);
						$aSettings['virus_name'] = $str;
						SetFieldAnonym('settings',json_encode($aSettings,JSON_UNESCAPED_UNICODE),$anonym['id']);
						$message = $Nick.', —Ç–µ–ø–µ—Ä—å –≤–∏—Ä—É—Å –≤–∞—à–µ–≥–æ anonym "'.$str.'"';
					}else{
						$message = GetErrorAnonym();
					}
				}else{
					$message = $Nick.', –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.';
				}
			}else{
				$message = $Nick.', –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏—Ä—É—Å–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ.';
			}
		}else{
			$message = $Nick.', –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –∏–º—è –≤–∏—Ä—É—Å–∞ —Å –≤–∞—à–µ–π –ø—Ä–∏–≤–µ–ª–µ–≥–∏–µ–π anonym.';
		}
	}else{
		$message = GetErrorAnonym();
	}
	return $message;
}
function ConnectToAnonym($id){
	global $UserInfo,$Nick,$mysqli,$peer_id;
	$id = empty($id) ? 0 : $id;
	$anonym = $mysqli->query('SELECT * FROM `anonymous` WHERE `id`='.$id)->fetch_assoc();
	if($anonym){
		if(empty($UserInfo['anonym'])){
			$aBlackList = json_decode($anonym['black_list'],1);
			if(in_array($UserInfo['id_VK'], $aBlackList)){
				return $Nick.', –≤—ã –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω–æ–≥–æ anonym.';
			}
			$aSettings = json_decode($anonym['settings'],1);
			$summ_f_machine = SummMachine();// summ f user
			if($summ_f_machine >= $aSettings['min_f_to_join']){
				$membersAnonym = json_decode($anonym['members'],1); // array members
				if(count($membersAnonym)+1 <= $anonym['max_members']){

					$membersAnonym[$UserInfo['id_VK']] = 'member'; // set role user to anonym

					SetFieldAnonym('members',json_encode($membersAnonym,JSON_UNESCAPED_UNICODE),$anonym['id']); // set value
					
					$hello_text = empty($aSettings['hello_text']) ? '–≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ "'.$anonym['name'].'"' : $aSettings['hello_text'];
					$text = $Nick.', '.$hello_text;
					$attachment = $aSettings['hello_attachment'];
					$message = '';
					SetFieldF('anonym',$anonym['id']);
					SellMsg($peer_id,$text,$attachment);
				}else{
					$message = $Nick.', –¥–∞–Ω–Ω—ã–π anonym –∑–∞–ø–æ–ª–Ω–µ–Ω.';
				}
			}else{
				$message = $Nick.', –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã–π anonym —Ç—Ä–µ–±—É–µ—Ç—Å—è üñ•'.$aSettings['min_f_to_join'].'üñ•';
			}
		}else{
			$message = $Nick.', —Å–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏—Ç–µ –∏–∑ —Å–≤–æ–µ–≥–æ anonym.';
		}
	}else{
		$message = $Nick.', anonym —Å —Ç–∞–∫–∏–º id –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.';
	}
	return $message;
}
function DonateAnonym($summ){
	global $UserInfo,$Nick,$admin;
	$summ = $summ<1 ? 1 :$summ;
	$anonym = SelectAnonym();
	if($anonym){
		if($UserInfo['role']<=2 || $UserInfo['id_VK'] == $admin){
			if($UserInfo['dollar'] >= $summ){
				$aSettings = json_decode($anonym['settings'],1);
				$aSettings['donate']+=$summ;
				if($aSettings['donate']>=$anonym['lvl']*KKK('50kkk')*rand(1,5) && $anonym['lvl'] != 19){
					SetFieldAnonym('lvl',$anonym['lvl']+1,$anonym['id']);
					$aSettings['donate'] = 0;
					$newLVL = true;
				}
				SetFieldAnonym('settings',json_encode($aSettings,JSON_UNESCAPED_UNICODE),$anonym['id']);
				SetFieldAnonym('balance',$anonym['balance']+$summ,$anonym['id']);
				SetFieldF('dollar',$UserInfo['dollar']-$summ);
				$message = $Nick.', –≤—ã –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª–∏ –≤ anonym: '.ConvertValute($summ).'$<br>';
				if($newLVL){
					$message .= '–í–∞—à anonym –æ–±—Ä–µ–ª –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å, –≤–∏—Ä—É—Å —É–ª—É—á—à–µ–Ω.';
				}
			}else{
				$message = $Nick.', –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ $.';
			}
		}else{
			$message = $Nick.', –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–æ–Ω–∞—Ç–∏—Ç—å –≤ anonym.';
		}
	}else{
		$message = GetErrorAnonym(1);
	}
	return $message;
}
function CreateAnonymous($name){
	global $UserInfo,$Nick,$mysqli;
	$Price = 5;
	$TypePrice = 'donate_balance';
	if(empty($UserInfo['anonym'])){
		if($UserInfo[$TypePrice] >= $Price){
			if(CheckNameAnonymous($name) == 'ok'){
				$members = array($UserInfo['id_VK']=>'developer');
				$members = json_encode($members,JSON_UNESCAPED_UNICODE);
				
				 $mysqli->query('INSERT INTO `anonymous` 
					(`name`,`members`) 
					VALUES 
					("'.$name.'",\' '.$members.'\')');
				 $id = $mysqli->query('SELECT LAST_INSERT_ID()')->fetch_assoc()['LAST_INSERT_ID()'];
				SetFieldF($TypePrice,$UserInfo[$TypePrice]-$Price);
				SetFieldF('anonym',$id);
				$message = $Nick.', –≤—ã —Å–æ–∑–¥–∞–ª–∏ anonym "'.$name.'"';
			}else{
				$message =  $Nick.', '.CheckNameAnonymous($name);
			}
		}else{
			$message = $Nick.', –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ '.SwitchEmoji($TypePrice).' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è anonym.<br>'.
			'–¶–µ–Ω–∞: '.ConvertValute($Price).SwitchEmoji($TypePrice);
		}
	}else{
		CheckAnonym();
		
	}
	return $message;
}
function SwitchRolesAnonym($role,$type = false){
	$type = empty($type) ? 'num' : $type;
	switch ($role) {
		case 'member':
		case '1':
			$num = 1;
			$role = 'member';
			break;
		case 'admin':
		case '2':
			$num = 2;
			$role = 'admin';
			break;
		case 'developer':
		case '3':
			$num = 3;
			$role = 'developer';
			break;
		
		default:
			return false;
			break;
	}
	return $$type;
}
function GetMyRoleAnonym(){
	global $UserInfo;
	$anonym = SelectAnonym($UserInfo['anonym']);
	$AnonymMembers = json_decode($anonym['members'],1);
	return SwitchRolesAnonym($AnonymMembers[$UserInfo['id_VK']]);
}
function AnonymHello(){
	global $data,$UserInfo,$Nick,$body,$bodyx;
	$role = GetMyRoleAnonym();
	$attachments = $data->object->attachments[0];
	$anonym = SelectAnonym();
	$text = substr($body, strlen($bodyx[0].$bodyx[1])+2);

	if(CheckStrAnonum($text)){
		if($role >= 2){
			if(iconv_strlen($text)<50){
				if($anonym){
					if(!empty($attachments)){
						$type = $attachments->type;
						if($type == 'audio'){
							$id = $attachments->$type->id;
							$owner_id = $attachments->$type->owner_id;
							$attachment = $type.$owner_id.'_'.$id;
							if(!empty($id)){
								$settingsAnonym = json_decode($anonym['settings'],1);
								$settingsAnonym['hello_attachment'] = $attachment;
								$settingsAnonym['hello_text'] = $text;
								SetFieldAnonym('settings',json_encode($settingsAnonym,JSON_UNESCAPED_UNICODE),$anonym['id']);
								$message = $Nick.', –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å–≤–æ–µ–≥–æ anonym.';
							}else{
								$message = $Nick.', –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.<br>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∞—É–¥–∏–æ-—Ñ–∞–π–ª.';
							}
						}else{

						}
					}else{
						$message = $Nick.', –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª.';
					}
				}else{
					$message = GetErrorAnonym();
				}
			}else{
				$message = $Nick.', —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ç–µ–∫—Å—Ç.';
			}
		}else{
			$message = $Nick.', –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã—Å–æ–∫ —á—Ç–æ–±—ã –º–µ–Ω—è—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ anonym.';
		}
	}else{
		$message = $Nick.', –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã.';
	}
	return $message;
		
}
function GetErrorAnonym($num = false){
	global $Nick;
	$num = empty($num) ? 1 : $num;
	switch ($num) {
		case '1':
			$message = $Nick.', –≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ anonym.<br>–ù–∞–ø–∏—à–∏—Ç–µ "–∞–Ω–æ–Ω–∏–º –ø–æ–º–æ—â—å", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫–æ–º–∞–Ω–¥–∞—Ö.';
			break;
		
		default:
			# code...
			break;
	}
	return $message;
}
function CheckStrAnonum($str){
	$BlackArr = array ('.','[',']','(',')','|','@');
	str_replace($BlackArr, '', $str,$count);
	if($count == 0){
		return true;
	}
	return false;
}
function CheckAnonym(){
	global $mysqli,$UserInfo,$Nick;
	$anonym = $mysqli->query('SELECT * FROM `anonymous` WHERE `id`='.$UserInfo['anonym'])->fetch_assoc();
	if(!$anonym){
		SetFieldF('anonym',0);
		SellMsg($UserInfo['id_VK'],$Nick.', –≥–ª–∞–≤–∞ —Ä–∞—Å–ø—É—Å—Ç–∏–ª anonym, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –¥—Ä—É–≥–æ–π anonym.');
	}else{
		SellMsg($UserInfo['id_VK'],$Nick.', —Å–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏—Ç–µ –∏–∑ —Å–≤–æ–µ–≥–æ anonym.');
	}

}
function LeaveAnonym(){
	global $mysqli,$UserInfo,$Nick;
	if(!empty($UserInfo['anonym'])){
		$anonym = SelectAnonym($UserInfo['anonym']);
		
		$AnonymMembers = json_decode($anonym['members'],1);
		if($AnonymMembers[$UserInfo['id_VK']] != 'developer'){
			unset($AnonymMembers[$UserInfo['id_VK']]);
			SetFieldAnonym('members',json_encode($AnonymMembers,JSON_UNESCAPED_UNICODE),$anonym['id']);
			SetFieldF('anonym',0);
			$message = $Nick.', –≤—ã –≤—ã—à–ª–∏ –∏–∑ anonym "'.$anonym['name'].'"';
		}else{
			SetFieldF('anonym',0);
			$mysqli->query('DELETE FROM `anonymous` WHERE `id`='.$anonym['id']);
			$mysqli->query('UPDATE `users` SET `anonym`=NULL WHERE `users`.`anonym`='.$anonym['id']);
			$message = $Nick.', –≤—ã —Ä–∞—Å–ø—É—Å—Ç–∏–ª–∏ —Å–≤–æ–π anonym.';
		}
	}else{
		$message = $Nick.', –≤—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ anonym.';
	}
	return $message;
}
function SetFieldAnonym($field,$value,$id){
	global $mysqli,$UserInfo;
	if($value == null){
		$mysqli->query('UPDATE `anonymous` SET `'.$field.'`= NULL WHERE `id`='.$id);
	}else{
		$mysqli->query ('UPDATE `anonymous` SET `'.$field.'` = \''.$value.'\' WHERE `id`='.$id);
	}
	
}

function CheckNameAnonymous($name){
	$BlackArr = array ('.','[',']','(',')','|','@');
	str_replace($BlackArr, '', $name,$count);
	if($count == 0){
		if(iconv_strlen($name) <= 20){
			if(iconv_strlen($name) > 5){
				return 'ok';
			}else{
				return '–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ.';
			}
		}else{
			return '–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ.';
		}
	}else{
		return '–≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã.';
	}
}
function GetUpgradeBonuseAnonym($id,$anonym_lvl){
	switch ($id) {
		case '1':
		case 'property_price_prozent':
			$price = KKK('1kkk');
			$name = '–°–∫–∏–¥–∫–∞ –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ';
			$abbr = 'property_price_prozent';
			$max_value = 30;
			break;
		case '2':
		case 'every_day_bonus_prozent':
			$price = KKK('2kkk');
			$name = '–ü—Ä–æ—Ü–µ–Ω—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞';
			$abbr = 'every_day_bonus_prozent';
			$max_value = 75;
			break;
		case '3':
		case 'time_grab_prozent':
			$price = KKK('3kkk');
			$name = '–ü—Ä–æ—Ü–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ —Ö–∞–∫–∏–Ω–≥–∞';
			$abbr = 'time_grab_prozent';
			$max_value = 100;
			break;
		default:
			return false;
			break;
	}
	$price = $price*$anonym_lvl;
	return [
		'price'=>$price,
		'name'=>$name,
		'abbr'=>$abbr,
		'max_value'=>$max_value
		];
}
function DefaultBonusesAnonym(){
	$arr = [
		'property_price_prozent'=>5,
		'every_day_bonus_prozent'=>5,
		'time_grab_prozent'=>5,
		];
	return json_encode($arr,JSON_UNESCAPED_UNICODE);
}
?>