const {VK} = require('vk-io'); 
const {Keyboard} = require('vk-io');
const vk = new VK();
const logs = require('./logs.json');
const chats = require('./chats.json');
const {updates, api, snippets, upload} = vk; 
const fs = require('fs');
const request = require('request-promise');
const chalk = require('chalk');
const base = require('./base.json');
const reports = require('./reports.json');
const design = require('./design.json');
const posts = require('./posts.json');
const res = require('./res.json');
const mg = require('./mg.json');
const clan = require('./clan.json') // –±–∞–∑–∞ —Å –∫–ª–∞–Ω–∞–º–∏
const apijson = require('./api.json');
const path = require('path')
const adminchat = 25;
const dcoinsone = `product-192325383_`
vk.setOptions({ 
token: "26b4f52709fe7f61b1e31ae513d948cd697f2faabc5b1d50dbf5a22938a50c18dd441be8ff95510c58816", // —Ç–æ–∫–µ–Ω –≥—Ä—É–ø–ø—ã
apiMode: "parallel", 
pollingGroupId: 192325383 // –∏–¥ –≥—Ä—É–ø–ø—ã 192325383
});
const page = new VK();
 page.setOptions({token: `120ab5390b2bfa8884382f0e0a18a4a889afb56526e7cd6db0f62ac02693d5933074ac22767352472c99a`}); // —Ç–æ–∫–µ–Ω —é–∑–µ—Ä–∞


        fs.writeFileSync("./base.json", JSON.stringify(base, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        fs.writeFileSync("./reports.json", JSON.stringify(reports, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
		fs.writeFileSync("./chats.json", JSON.stringify(chats, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./logs.json", JSON.stringify(logs, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
function rand(text) {
	let tts = Math.floor(text.length * Math.random())
	return text[tts]
}



function splitString(stringToSplit, separator) {
  var arrayOfStrings = stringToSplit.split(separator);
  return arrayOfStrings
}
const utils = { 
sp: (int) => {
int = ``
int = int.toString(); 
return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join(''); 
}, 
rn: (int, fixed) => { 
if (int === null) return null; 
if (int === 0) return '0'; 
fixed = (!fixed || fixed < 0) ? 0 : fixed; 
let b = (int).toPrecision(2).split('e'), 

k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), 
c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed), 
d = c < 0 ? c : Math.abs(c), 
e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω', `–∫–≤–Ω—Ç–ª–Ω`][k]; 

e = e.replace(/e/g, ''); 
e = e.replace(/\+/g, ''); 
e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê'); 

return e; 
}, 
gi: (int) => { 
int = int.toString(); 

let text = ``; 
for (let i = 0; i < int.length; i++) 
{ 
text += `${int[i]}‚É£`; 
} 

return text; 
}, 
decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] }, 
random: (x, y) => { 
return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x); 
}, 
pick: (array) => { 
return array[utils.random(array.length - 1)]; 
} 
}

function rand(text) {
	let tts = Math.floor(text.length * Math.random())
	return text[tts]
}



function getRandomInRange(min, max) { 
return Math.floor(Math.random() * (max - min + 1)) + min; 
}; //–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞

var now = new Date();
function addZero(num) { return ('0' + num).slice(-2); }

function nols(num) {
    if(num < 10) return('0' + num)
    if(num > 9) return(num)
}

function find(array, value) { 
for (var i = 0; i < array.length; i++) { 
if (array[i] == value) return i; 
} 
return -1; 
};

const menukeyboard = [
[ 
            Keyboard.textButton({ 
            label: 'üìí –ü—Ä–æ—Ñ–∏–ª—å', 
            color: Keyboard.POSITIVE_COLOR
            }),
            Keyboard.textButton({ 
            label: '‚õî –ó–∞—Ä–∞–∑–∏—Ç—å', 
            color: Keyboard.NEGATIVE_COLOR
            })
            
      ],
      [
      Keyboard.textButton({ 
            label: 'üíä –°—ä–µ—Å—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É', 
            color: Keyboard.PRIMARY_COLOR
            }),  
	  Keyboard.textButton({ 
            label: 'üíä –í–æ—Ä–æ–≤–∞—Ç—å', 
            color: Keyboard.POSITIVE_COLOR
            })                
      ],
      [
       Keyboard.textButton({ 
       label: 'üëë –¢–æ–ø', 
       color: Keyboard.PRIMARY_COLOR
       }),
	   Keyboard.textButton({ 
       label: 'üíä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 
       color: Keyboard.NEGATIVE_COLOR
       })
      ],
      [
            Keyboard.applicationButton({ 
            label: '–î–æ–±–∞–≤–∏—Ç—å –≤ –±–µ—Å–µ–¥—É', 
            appId: 6441755,
            ownerId: -192325383
            })
      ]
]
fs.readFile('example_log.txt', function (err, logData) {});
updates.use(async (context, next) => {
 let months = new Date().getMonth()
 let days = new Date().getDate()
 let hour = new Date().getHours()
 let minute = new Date().getMinutes()
 let second = new Date().getSeconds()
 if(context.isGroup)  return
 if(context.isOutbox) return
 if(context.senderId === undefined) return

if(!base.id[context.senderId]){
	base.context.id += Number(1)
	base.id[context.senderId] = {
		id: base.context.id
		}
	vk.api.call("users.get", {
    user_ids: context.senderId
  }).then(res => {
   const now = new Date(); 
  now.setHours(now.getHours() + (now.getTimezoneOffset()/60) + 3)
  let date = `${now.toLocaleString()}`
  const bb = new Date; 
  var array = splitString(date, `,`);
  var arraytwo = splitString(array[0], `/`);
    base.bs[base.context.id] = {
		tabl: 1,
		life: 4,
		death: 0,
		prefix: false,
		payban: false,
		lastpay: ``,
		paytime: 1440,
		vzlom: 0,
		refered: 0,
		banreason: 0,
		bandays: 0,
		banseconds: 0,
		banminutes: 0,
		banhours: 0,
		bannedby: ``,
		kill: 0,
		payalltime: 0,
		kolvo: 0,
		topenabled: true,
		banreason: ``,
		promoactive: false,
		banned: false,
		rank: 1,
		zaraz: false,
		notifications: true,
		reg: `${nols(days)}.${nols(months)}.${new Date().getFullYear()}, ${nols(hour)}:${nols(minute)}:${nols(second)}`,
		platform: false,
		reportban: false,
		lastactivity: `${nols(days)}.${nols(months)}.${new Date().getFullYear()}, ${nols(hour)}:${nols(minute)}:${nols(second)}`,
		lastactivity1: `${nols(days)}.${nols(months)}.${new Date().getFullYear()}, ${nols(hour)}:${nols(minute)}:${nols(second)}`,
		virus: 0,
		id: context.senderId,
		nick: `${res[0].first_name}`,
		nicknotify: true,
		subscribed: false
    }
	let regby = false
		if(context.payload.message.ref) {
			let refid = context.payload.message.ref
			if(base.bs[refid]) {
				base.bs[base.context.id].balance += Number(1)
				context.send(`–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–µ *id${base.bs[refid].id} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –∑–∞—Ä–∞–∑–∏–ª–∏—Å—å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º`)
				base.bs[refid].tabl += Number(1)
				base.bs[refid].virus += 1
				base.bs[base.context.id].refered = refid;
				regby = true
				vk.api.messages.send({user_id: base.bs[refid].id, message: `–í—ã –∑–∞—Ä–∞–∑–∏–ª–∏ *id${context.senderId} (${res[0].first_name}) –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ: 1 —Ç–∞–±–ª–µ—Ç–∫—É ü§ë`})
			if(regby == true) vk.api.messages.send({chat_id: adminchat, message: `[#LOG]\n‚úÖ *id${context.senderId} (${res[0].first_name}) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ —Å—Å—ã–ª–∫–µ *id${base.bs[refid].id} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)\nüÜî ${base.id[context.senderId].id}`})
			}
			}
			if(regby == false) vk.api.messages.send({chat_id: adminchat, message: `[#LOG]\n‚úÖ *id${context.senderId} (${res[0].first_name}) –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ!\nüÜî ${base.id[context.senderId].id}`})
		return context.send({ 
message: `üëã –ü—Ä–∏–≤–µ—Ç, *id${context.senderId} (${res[0].first_name}) !
üëÄ–Ø –∏–≥—Ä–æ–≤–æ–π nCov –±–æ—Ç. 
üéÆ–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ø–æ–º–æ—â—å"
üëâ –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä–æ–≤—É—é –±–µ—Å–µ–¥—É: https://vk.me/join/AJQ1d41t0xZNhGry73UDAuqH`, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
  } ) 
})
	}


if (context.text) {
let hour = new Date().getHours()
let minute = new Date().getMinutes()
let second = new Date().getSeconds()
if(!logs[base.id[context.senderId].id]) {
	logs[base.id[context.senderId].id] = {
		text: ``
		}
}
let chattext = ``
if(context.isChat) chattext = `üë• –ë–µ—Å–µ–¥–∞: ‚Ññ${context.chatId},`
let timesend = `[üïê ${nols(hour)}:${nols(minute)}:${nols(second)}]`
logs[base.id[context.senderId].id].text += `\n${timesend}, ${chattext} ‚úâÔ∏è ${context.text.slice(0, 360)}`
base.bs[base.id[context.senderId].id].lastactivity1 = `${nols(hour)}:${nols(minute)}:${nols(second)}`
	}
try {

        await next();
 } catch (err) { console.error(err)
                err = `${err} \n \n ${err}`}
	require('fs').writeFileSync('./base.json', JSON.stringify(base, null, '\t'));
});
async (context) => {
if(context.isChat){
	if(!chats.ids[context.chatId]) {
		chats.ids[context.chatId] = {
			"id": context.chatId,
			"active": 1,
			"message": 0
		}
	}
	chats.ids[context.chatId].message += 1
	if(chats.ids[context.chatId].active == 0) chats.ids[context.chatId].active = 1
	if(chats.ids[context.chatId].active == 3) {
		let choose = getRandomInRange(1, 2)
		chats.ids[context.chatId].active = 0
if(choose == 1) {
setTimeout(() => context.send({chat_id: context.chatId, message: `>> –ê –≤—ã –∑–Ω–∞–ª–∏, —á—Ç–æ –¥–æ–±–∞–≤–ª—è—è [club192325383|Ncov –±–æ—Ç–∞] –≤ –±–µ—Å–µ–¥—É, –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∫—Ä—É—Ç—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –≤ –≤–∏–¥–µ –¥–æ–Ω–∞—Ç–∞, –¥–µ–Ω–µ–≥ –∏ —Ç.–ø? ü§ë
üëáüèª –ë—ã—Å—Ç—Ä–µ–µ –∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —Å–∫–æ—Ä–µ–π –¥–æ–±–∞–≤–ª—è–π –º–µ–Ω—è!`,
      keyboard: Keyboard.keyboard([
      [ 
            Keyboard.textButton({ 
            label: 'üìö –ü–æ–º–æ—â—å', 
            color: Keyboard.POSITIVE_COLOR,
            payload: {
            	"command": "help"
            }
            })         
            
      ],
     	[
            Keyboard.applicationButton({ 
            label: '–î–æ–±–∞–≤–∏—Ç—å –≤ –±–µ—Å–µ–¥—É', 
            appId: 6441755,
            ownerId: -192325383
            })
      ]
     ])
     .inline(false)
  }), 2000) 

}

if(choose == 2) {
setTimeout(() => context.send({chat_id: context.chatId, message: `üéÅ –í –Ω–∞—à–µ–π [club192325383|–ì–†–£–ü–ü–ï] –∫–æ–Ω–∫—É—Ä—Å—ã –∏ —Ä–∞–∑–¥–∞—á–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! –ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ª—É—á–∏ —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –∫—Ä—É—Ç—ã–µ –ø—Ä–∏–∑—ã `,
      keyboard: Keyboard.keyboard([
      [ 
            Keyboard.textButton({ 
            label: 'vk.com/public192325383', 
            color: Keyboard.POSITIVE_COLOR,
            payload: {
            	"command": "help"
            }
            })         
            
      ]
     ])
     .inline(true)
  }), 2000) 

}

	}
}
};




vk.updates.use(async (message, next) => {

    // –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Å—Ç–∞–≤—å
    await next(); 
});
setInterval(function (){
for(let a in base.bs){
base.bs[a].life -= 1;
}
}, 3600000);
updates.hear(/–ø—Ä–æ—Ñ–∏–ª—å|üìí –ü—Ä–æ—Ñ–∏–ª—å$/i, async (context) => {
	let command = `–ü—Ä–æ—Ñ–∏–ª—å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`üìí`)) return
let refid = context.payload.message.ref
let user = base.bs[base.id[context.senderId].id]
let nick = ``
let task = `` 
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.prefix == false){
let text = `–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:
üîé ID: ${base.id[context.senderId].id}
üíä –¢–∞–±–ª–µ—Ç–æ–∫ ${base.bs[base.id[context.senderId].id].tabl}
üôç‚Äç‚ôÇ –í—ã –∑–∞—Ä–∞–∑–∏–ª–∏ ${base.bs[base.id[context.senderId].id].virus}
‚õî –î–æ —Å–º–µ—Ä—Ç–∏ ${base.bs[base.id[context.senderId].id].life} —á
üíä–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ä–µ–¥–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–µ—Ç–æ–∫ ${base.bs[base.id[context.senderId].id].kolvo}
`
if(base.bs[base.id[context.senderId].id].reg !== ``) text += `\nüìö –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${base.bs[base.id[context.senderId].id].reg}`
return context.send(text)
}else{

let text = `–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:
üîé ID: ${base.id[context.senderId].id}
${base.bs[base.id[context.senderId].id].prefix}
üíä –¢–∞–±–ª–µ—Ç–æ–∫ ${base.bs[base.id[context.senderId].id].tabl}
üôç‚Äç‚ôÇ –í—ã –∑–∞—Ä–∞–∑–∏–ª–∏ ${base.bs[base.id[context.senderId].id].virus}
‚õî –î–æ —Å–º–µ—Ä—Ç–∏ ${base.bs[base.id[context.senderId].id].life} —á
üíä–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ä–µ–¥–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–µ—Ç–æ–∫ ${base.bs[base.id[context.senderId].id].kolvo}
`
if(base.bs[base.id[context.senderId].id].reg !== ``) text += `\nüìö –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${base.bs[base.id[context.senderId].id].reg}`
return context.send(text)
}
})
updates.hear(/log ([0-9]+)$/i,async (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
	if(user.rank < 4) return
	if(context.isChat) return context.send(`${nick}, –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª—Å! ‚úâÔ∏è`)
	if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
	let file = `${context.$match[1]}_log.txt`
  async function run() {
  await fs.writeFileSync(`${context.$match[1]}_log.txt`, `${logs[context.$match[1]].text}`);
  await context.sendDocument({
                        value: `${context.$match[1]}_log.txt`,
                        filename: `${file}`,
                    }, {
                        message: `${nick}, –ª–æ–≥–∏ *id${base.bs[context.$match[1]].id}:`
                    }) 
  await fs.unlinkSync(`${context.$match[1]}_log.txt`);
}
run();
	
	})
updates.hear(/–∏–º ([0-9]+) –ø—Ä–µ—Ñ–∏–∫—Å (.*)/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let myclan = clan[base.bs[base.id[context.senderId].id].clan]
if(user.rank < 4) return
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
let usid = base.id[context.senderId].id
if(Number(context.$match[1]) !== Number(usid) && user.rank == 3) return context.send(`${nick}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –ò–º—É—â–µ—Å—Ç–≤ –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º!üòí`)

let task = base.bs[context.$match[1]]
let net = `100 –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã—Ö`
let newname = `${context.$match[2]}`
if(task.virus < 100) return context.send(`${nick}, —É *id${task.id} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –Ω–µ—Ç ${net} üòí`)
task.prefix = newname
return context.send(`${nick}, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ! üëç`)
})
	
updates.hear(/–ø–µ—Ä–µ–¥–∞—Ç—å ([0-9]+) (.*)$/i,(context, ctx) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank > 0) {
let myclan = clan[base.bs[base.id[context.senderId].id].clan]
if(user.payban == true) return context.send(`${nick}, —É –í–∞—Å –±–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏ üòØ`)
if(!Number(context.$match[1])) return context.send(`${nick}, –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞ üòî`)
let bb = Number(context.$match[1])
if(!base.bs[bb]) return context.send(`${nick}, –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞ üòî`)
if(bb == base.id[context.senderId].id) return context.send(`${nick}, –Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞ üòî`)
if(base.bs[bb].payban == true) return context.send(`${nick}, —É *id${base.bs[bb].id} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –±–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏ üòØ`) 
let res = context.$match[2]
	while(res.includes(`–∫`)){
		res = res.replace(`–∫`,`000`)
	}
	while(res.includes(`k`)){
		res = res.replace(`k`,`000`)
	}
	while(res.includes(`.`)){
		res = res.replace(`.`,``)
	}
	while(res.includes(`-`)){
		res = res.replace(`-`,``)
	}
if(!Number(res)) return context.send(`${nick}, –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–ø–µ—Ä–µ–¥–∞—Ç—å [–∏–≥—Ä–æ–≤–æ–π ID] [—Å—É–º–º–∞]¬ª. –ü—Ä–∏–º–µ—Ä: ¬´–ø–µ—Ä–µ–¥–∞—Ç—å 1448393 33–∫¬ª`)
res = Number(res)
let limit = Number(user.paylimit)
limit += Number(res)
if(user.tabl < Number(res)) return context.send(`${nick}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üíä —Ç–∞–±–ª–µ—Ç–æ–∫ 
üíä –¢–∞–±–ª–µ—Ç–æ–∫: ${user.tabl}üíä`)
 let months = new Date().getMonth()
    let days = new Date().getDate()
    let hour = new Date().getHours()
    let minute = new Date().getMinutes()
    let second = new Date().getSeconds()
user.paylimit += Number(res)
user.tabl -= Number(res)
user.payalltime += Number(res)
base.bs[bb].tabl += Number(res)
user.lastpay = `${nols(days)}.${nols(months)}.${new Date().getFullYear()}, ${nols(hour)}:${nols(minute)}:${nols(second)}`
if(base.bs[bb].notifications == true) {
  	vk.api.messages.send({user_id: base.bs[bb].id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
‚ñ∂ –ò–≥—Ä–æ–∫ ${nick} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${res}üíä!
üîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`})
}
return context.send(`${nick}, –≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É *id${base.bs[bb].id} (${base.bs[bb].nick}) ${res}üíä`)
}

})
updates.hear(/chatid$/i,async (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
	return context.send(context.chatId)
	})

setInterval(function(){
for(let o in base.bs){
if(base.bs[o].vzlom > 0){
base.bs[o].vzlom -= 1;
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: "–≤–æ—Ä–æ–≤–∞—Ç—å"
updates.hear(/üíä –≤–æ—Ä–æ–≤–∞—Ç—å|–≤–∞—Ä–∞–≤–∞—Ç—å|üíä –≤–æ—Ä–∞–≤–∞—Ç—å|–≤–∞—Ä–æ–≤–∞—Ç—å$/i, (context) => {
let command = `–≤–æ—Ä–æ–≤–∞—Ç—å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–≤–∞—Ä–∞–≤–∞—Ç—å` && quest !== `–≤–æ—Ä–∞–≤–∞—Ç—å` && quest !== `–≤–∞—Ä–æ–≤–∞—Ç—å` && !context.text.includes(`@`) && !context.text.includes(`üíä`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.vzlom > 0) return context.send(`${nick}, –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${user.vzlom} –º–∏–Ω—É—Ç `)
let type = getRandomInRange(1, 5)
user.vzlom = 15
if(type == 1) {
let find = 1
user.tabl += Number(1)
return context.send({message: `${nick}, –≤–∞–º —É–¥–∞–ª–æ—Å—å —É–∫—Ä–∞—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∞–±–ª–µ—Ç–æ–∫ —Å —Ä—ã–Ω–∫–∞! ‚òëÔ∏è –í—ã —É–∫—Ä–∞–ª–∏ ${find}üíä`})
}
if(type == 2) {
return context.send({message: `${nick}, –≤—ã —Ü–µ–ª—ã–π –º–µ—Å—è—Ü –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Å —Ç–∞–±–ª–µ—Ç–∫–∞–º–∏, –Ω–∞—Å—Ç–∞–ª —ç—Ç–æ—Ç –¥–µ–Ω—å –∏ –≤—ã –ø–æ—à–ª–∏ –≥—Ä–∞–±–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω –≤ –æ–¥–∏–Ω–æ—á–∫—É, –Ω–æ –≤–∞—Å –≤ –Ω–µ–≥–æ –Ω–µ –≤–ø—É—Å—Ç–∏–ª–∏, –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–Ω –∑–∞–∫—Ä—ã–ª—Å—è –ø–∞—Ä—É –Ω–µ–¥–µ–ª—å –Ω–∞–∑–∞–¥.`})

}
if(type == 3) {
let find = 1
user.tabl += Number(1)
return context.send({message: `${nick}, –≤—ã –Ω–∞—à–ª–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—å –≤ –±–µ–∑–æ–ø–∞—Å—Ç–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–∞ —Å —Ç–∞–±–ª–µ—Ç–∫–∞–º–∏, –≤–∞–º –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –∑–∞ –Ω–∞–π–¥–µ–Ω–Ω—É—é —É—è–∑–≤–∏–º–æ—Å—Ç—å\n‚òëÔ∏è –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${find}üíä`})
}
if(type == 4) {
return context.send({message: `${nick}, –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω —Å —Ç–∞–±–ª–µ—Ç–∫–∞–º–∏, —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ–∫–∞–∑–∞–ª–∞—Å—å —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ–π, –≤–∞—Å –ø–æ–π–º–∞–ª–∞ –æ—Ö—Ä–∞–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–ª–∞ –≤—Å–µ —É–∫—Ä–∞–¥–µ–Ω–Ω–æ–µ.`})
}
if(type == 5) {
let find = 1
user.tabl += Number(1)
return context.send({message: `${nick}, –≤–∞–º —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫—Ä—É–ø–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω —Å —Ç–∞–±–ª–µ—Ç–∫–∞–º–∏!\n‚òëÔ∏è –í—ã —É–∫—Ä–∞–ª–∏: ${find}üíä`})

}

})
updates.hear(/@sendtext (.*)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.rank < 4) return
let text = context.$match[1]
for(let o in base.bs){
	if(base.bs[o].notifications == true) {
		vk.api.messages.send({user_id: base.bs[o].id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚ñ∂ ${context.$match[1]}\nüîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`, keyboard: Keyboard.keyboard([
		 [
				Keyboard.textButton({ 
				label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: Keyboard.POSITIVE_COLOR,
				}),
				Keyboard.textButton({ 
				label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: Keyboard.NEGATIVE_COLOR,
				}),
		  ]
		 ])
		 .inline(true)
	  })
	}
	}
	for(let b in chats.ids){
		if(chats.ids[b].active !== 3) {
			vk.api.messages.send({chat_id: chats.ids[b].id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚ñ∂ ${context.$match[1]}\n`, 
	  })
		}
	}
	})
updates.hear(/–≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è|—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	user.notifications = false
	let nf = user.notifications
	let nfb
	if(nf == true) {
    nf = Keyboard.PRIMARY_COLOR
    nfb = Keyboard.SECONDARY_COLOR
    }
	if(nf == false) {
	nfb = Keyboard.PRIMARY_COLOR
    nf = Keyboard.SECONDARY_COLOR
    }
	let nc = user.nicknotify
	let ncb
	if(nc == true) {
    nc = Keyboard.PRIMARY_COLOR
    ncb = Keyboard.SECONDARY_COLOR
    }
	if(nc == false) {
    ncb = Keyboard.PRIMARY_COLOR
    nc = Keyboard.SECONDARY_COLOR
    }
	return context.send({message: `${nick}, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã!\nüîï`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: nf,
            }),
            Keyboard.textButton({ 
            label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: nfb,
            }),
      ],
      [
            Keyboard.textButton({ 
            label: '‚òùÔ∏è –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
            color: nc,
            }),
            Keyboard.textButton({ 
            label: 'üëä –ù–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
            color: ncb,
            })
      ],
      [
            Keyboard.textButton({ 
            label: '‚óÄÔ∏è –í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª', 
            color: Keyboard.PRIMARY_COLOR,
            })           
      ]
     ])
     .inline(platform)
  })
	})
	updates.hear(/–≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è|—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	user.notifications = true
	let nf = user.notifications
	let nfb
	if(nf == true) {
    nf = Keyboard.PRIMARY_COLOR
    nfb = Keyboard.SECONDARY_COLOR
    }
	if(nf == false) {
	nfb = Keyboard.PRIMARY_COLOR
    nf = Keyboard.SECONDARY_COLOR
    }
	let nc = user.nicknotify
	let ncb
	if(nc == true) {
    nc = Keyboard.PRIMARY_COLOR
    ncb = Keyboard.SECONDARY_COLOR
    }
	if(nc == false) {
    ncb = Keyboard.PRIMARY_COLOR
    nc = Keyboard.SECONDARY_COLOR
    }
	return context.send({message: `${nick}, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!\nüîî`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: nf,
            }),
            Keyboard.textButton({ 
            label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: nfb,
            }),
      ],
      [
            Keyboard.textButton({ 
            label: '‚òùÔ∏è –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
            color: nc,
            }),
            Keyboard.textButton({ 
            label: 'üëä –ù–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
            color: ncb,
            })
      ],
      [
            Keyboard.textButton({ 
            label: '‚óÄÔ∏è –í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª', 
            color: Keyboard.PRIMARY_COLOR,
            })           
      ]
     ])
     .inline(platform)
  })
	})
setInterval(function (){
let resphoto = `photo187845340_457239143`
let hour = new Date().getHours()
let minute = new Date().getMinutes()
let second = new Date().getSeconds()
let time = `${nols(hour)}:${nols(minute)}`
let type = base.context.giveawaytype
if(time == `15:00`) {
	if(base.context.lastgiveawayid !== 0) {
		let reposts = 0
		page.api.wall.getReposts({owner_id: -192325383, post_id: base.context.lastgiveawayid, count: 1000}).then((res) => {
			reposts = res.profiles
			for(let r in reposts){
				if(!base.id[reposts[r].id]) return
					let uid = base.id[reposts[r].id].id
				if(type == 1) {
					base.bs[uid].tabl += Number(5)
					vk.api.messages.send({user_id: reposts[r].id, message: `üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 5üíä –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–¥–∞—á–µ!`})
				} // 500,000 –ë–∏—Ç–∫–æ–∏–Ω–æ–≤ 
			} // –≤—ã–¥–∞—á–∞ –Ω–∞–≥—Ä–∞–¥—ã

		}) // –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–ø–æ—Å—Ç–æ–≤
	} // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å —Å —Ä–∞–∑–¥–∞—á–µ–π

let givetype = getRandomInRange(1, 6)
let givetext = ``
base.context.giveawaytype = Number(givetype)
if(givetype == 1) {
	page.api.wall.post({owner_id: -192325383, attachment: resphoto, message: `üì¢ –ù–∞—á–∞–ª–∞—Å—å –Ω–æ–≤–∞—è —Ä–∞–∑–¥–∞—á–∞!
‚úÖ –†–µ–ø–æ—Å—Ç–Ω–∏—Ç–µ —ç—Ç—É –∑–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–∏—Ç–µ 5üíä! –†–∞–∑–¥–∞—á–∞ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è —Ä–æ–≤–Ω–æ —Å—É—Ç–∫–∏.`}).then((res) => {
base.context.lastgiveawayid = Number(res.post_id)
for(let m in base.bs){
if(base.bs[m].notifications == true) {
	vk.api.messages.send({user_id: base.bs[m].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\nüì¢ –ù–∞—á–∞–ª–∞—Å—å –Ω–æ–≤–∞—è —Ä–∞–∑–¥–∞—á–∞!\nüîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`, keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.POSITIVE_COLOR,
            }),
            Keyboard.textButton({ 
            label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.NEGATIVE_COLOR,
            }),
      ]
     ])
     .inline(true)
  })
}
}
for(let z in chats.ids){
	if(chats.ids[z].active !== 3) {
		vk.api.messages.send({chat_id: chats.ids[z].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\nüì¢ –ù–∞—á–∞–ª–∞—Å—å –Ω–æ–≤–∞—è —Ä–∞–∑–¥–∞—á–∞!\n`, })
}		
}
})
} // —Ä–∞–∑–¥–∞—á–∞ #1



if(givetype == 4) {
	let colves = getRandomInRange(10, 100)
	base.context.promotype = Number(1)
	base.context.promocolves = Number(colves)
	page.api.wall.post({owner_id: -452381830, message: `‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!
‚ñ∂ –û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –ø—Ä–æ–º–æ–∫–æ–¥ ¬´–ü—Ä–æ–º–æ nCov¬ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 5üíä! üòØ
‚ùó –õ–∏–º–∏—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${colves}`}).then((res) => {
base.context.lastgiveawayid = Number(0)
for(let m in base.bs){
	base.bs[m].promoactive = false
if(base.bs[m].notifications == true) {
	vk.api.messages.send({user_id: base.bs[m].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!\nüîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`, keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.POSITIVE_COLOR,
            }),
            Keyboard.textButton({ 
            label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.NEGATIVE_COLOR,
            }),
      ]
     ])
     .inline(true)
  })
}
}
for(let z in chats.ids){
	if(chats.ids[z].active !== 3) {
		vk.api.messages.send({chat_id: chats.ids[z].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!\n`, })
}		
}
})
} // –ø—Ä–æ–º–æ–∫–æ–¥ #1



if(givetype == 6) {
	let colves = getRandomInRange(10, 100)
	base.context.promotype = Number(3)
	base.context.promocolves = Number(colves)
	page.api.wall.post({owner_id: -452381830, message: `‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!
‚ñ∂ –û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –ø—Ä–æ–º–æ–∫–æ–¥ ¬´–ü—Ä–æ–º–æ nCov¬ª —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 5üíä 
‚ùó –õ–∏–º–∏—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${colves}`}).then((res) => {
base.context.lastgiveawayid = Number(0)
for(let m in base.bs){
	base.bs[m].promoactive = false
if(base.bs[m].notifications == true) {
	vk.api.messages.send({user_id: base.bs[m].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!\nüîï –í–≤–µ–¥–∏—Ç–µ ¬´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è`, keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.POSITIVE_COLOR,
            }),
            Keyboard.textButton({ 
            label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
            color: Keyboard.NEGATIVE_COLOR,
            }),
      ]
     ])
     .inline(true)
  })
}
}
for(let z in chats.ids){
	if(chats.ids[z].active !== 3) {
		vk.api.messages.send({chat_id: chats.ids[z].id, attachment: `wall-192325383_${res.post_id}`, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n‚è≥ –ù–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥!\n`, })
}		
}
})
} // –ø—Ä–æ–º–æ–∫–æ–¥ #3


}
}, 60000); // –∞–≤—Ç–æ-—Ä–∞–∑–¥–∞—á–∏
updates.hear(/–±–∞–Ω—Ä–µ–ø ([0-9]+)$/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å `)
let repid = context.$match[1]
if(!base.bs[repid]) return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–ø—É—Ç–∞–ª–∏ –∏–¥ —Ä–µ–ø–æ—Ä—Ç–∞ —Å –∏–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è `)
if(reports.reps[repid]) return context.send(`${nick}, –Ω–∞–π–¥–µ–Ω id —Ä–µ–ø–æ—Ä—Ç–∞ <<${repid}>>, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –ø–µ—Ä–µ–ø—É—Ç–∞–ª–∏ –∏–¥ —Ä–µ–ø–æ—Ä—Ç–∞ —Å –∏–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è `)
let ok = base.bs[repid]
if(ok.reportban == false){
	ok.reportban = true
	vk.api.messages.send({chat_id: adminchat, message: `${nick} - –û—Ç–∫–ª—é—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ <<—Ä–µ–ø–æ—Ä—Ç>> –∏–≥—Ä–æ–∫—É: *id${ok.id} (${ok.nick}) `})
	return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${ok.id} (${ok.nick}) - –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç `)
}
if(ok.reportban == true){
	ok.reportban = false
	vk.api.messages.send({chat_id: adminchat, message: `${nick} - –í–∫–ª—é—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ <<—Ä–µ–ø–æ—Ä—Ç>> –∏–≥—Ä–æ–∫—É: *id${ok.id} (${ok.nick}) `})
	return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${ok.id} (${ok.nick}) - –≤–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç `)
}


})
updates.hear(/–ø—Ä–æ–º–æ nCpv|–ø—Ä–æ–º–æ–∫–æ–¥ nCov|–ø—Ä–æ–º–æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º|–ø—Ä–æ–º–æ–∫–æ–¥ –ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å$/i,(context) => {
	let platform = false
	if(context.isChat) platform = true
	let user = base.bs[base.id[context.senderId].id]
	let nick = ``
	if(user.nicknotify == false) {
		nick = `${base.bs[base.id[context.senderId].id].nick}`
	}
	if(user.nicknotify == true) {
		nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
	}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
	if(base.context.promotype < 1) return context.send(`${nick}, –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–∏–±–æ –≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –µ–≥–æ`)
	if(base.context.promocolves < 1) return context.send(`$${nick}, —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å`)
	if(user.promoactive == true) return context.send(`${nick}, –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–∏–±–æ –≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –µ–≥–æ`)
	user.promoactive = true 
	base.context.promocolves -= Number(1)
	context.send(`${nick}, –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ü—Ä–æ–º–æ–∫–æ–¥ <<nCov>>.
	‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${base.context.promocolves}`)
	
	if(base.context.promotype == 1) user.tabl += Number(5)
	if(base.context.promotype == 2) user.tabl += Number(5)
	if(base.context.promotype == 3) user.tabl += Number(5)
	
	})
updates.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç (.*))$/i,(context) => {

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.reportban == true) {
	let text = rand([`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–ø–æ—Ä—Ç—ã `,`–≤–∞–º –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É `,`—É –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ `])
return context.send(`${nick}, ${text}`)
}
let group = `–ì–†–£–ü–ü–ê`
if(context.isChat) group = `–ì–†–£–ü–ü–ê –í –ë–ï–°–ï–î–ï`
reports.lastid += Number(1)
let aa = base.id[context.senderId].id
reports.reps[reports.lastid] = {
	"senderid": aa,
	"text": context.$match[1],
	"sender": context.senderId
}
vk.api.messages.send({chat_id: adminchat, message: `[${group}]
üó£ –û—Ç–ø—Ä–∞–≤–∏–ª: ${context.senderId}
üîç –ò–≥—Ä–æ–≤–æ–π –∏–¥: ${base.id[context.senderId].id}
‚úè ID –∂–∞–ª–æ–±—ã: ${reports.lastid}
‚û° *id${context.senderId} (${base.bs[base.id[context.senderId].id].nick}): ${context.$match[1]}`})
return context.send(`${nick}, –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ‚Ññ${reports.lastid} üëç`)

})
updates.hear(/–ë–∞–Ω—Ä–µ–ø ([0-9]+)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

if(user.rank < 4) return
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
let task = base.bs[context.$match[1]]
if(task.reportban == false) {
	task.reportban = true
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`})
	vk.api.messages.send({chat_id: adminchat, message: `${nick} ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª *id${task.id} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`})
	return context.send(`${nick}, *id${task.id} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`)
	
	}
	
	if(task.reportban == true) {
	task.reportban = false
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`})
	vk.api.messages.send({chat_id: adminchat, message: `${nick} ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª *id${task.id} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`})
	return context.send(`${nick}, *id${task.id} (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é) –≤–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç üÜò`)
	
	}
	
})


updates.hear(/–¢–±–∞–Ω ([0-9]+)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

if(user.rank < 4) return
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
let task = base.bs[context.$match[1]]
if(task.topenabled == false) {
	task.topenabled = true
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–ø—É`})
	return context.send(`${nick}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${task.id} (${task.nick}) ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ç–æ–ø`)
	
	}
if(task.topenabled == true) {
	task.topenabled = false
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–ø—É`})
	return context.send(`${nick}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${task.id} (${task.nick}) ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ç–æ–ø`)
	}

})

updates.hear(/–ü–±–∞–Ω ([0-9]+)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

if(user.rank < 4) return
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
let task = base.bs[context.$match[1]]
if(task.payban == false) {
	task.payban = true
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–∞—á–µ –≤–∞–ª—é—Ç—ã`})
	return context.send(`${nick}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${task.id} (${task.nick}) ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∞`)
	}
if(task.payban == true) {
	task.payban = false
	vk.api.messages.send({user_id: task.id, message: `${nick} ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –í–∞–º –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–¥–∞—á–µ –≤–∞–ª—é—Ç—ã`})
	return context.send(`${nick}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${task.id} (${task.nick}) ‚Äî —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–¥–∞—á–∞`)
	}

})

updates.hear(/^(?:–æ—Ç–≤ ([0-9]+) (.*))$/i,(context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å ${sad}`)
let repid = context.$match[1]
if(!reports.reps[repid]) return context.send(`${nick}, —Ä–µ–ø–æ—Ä—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–ª–∏ –Ω–∞ –Ω–µ–≥–æ —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π ${sad}`)
vk.api.messages.send({user_id: reports.reps[repid].sender, message: `üîî *id${reports.reps[repid].sender} (${base.bs[reports.reps[repid].senderid].nick}), –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ <<${reports.reps[repid].text}>> –ø–æ—Å—Ç—É–ø–∏–ª –æ—Ç–≤–µ—Ç:\nüí¨ ${context.$match[2]}`})
delete reports.reps[repid]
return context.send(`${nick}, –æ—Ç–≤–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω ${cool}`)
})
updates.hear(/(?:newtask_num)\s(.*)\s(.*)$/i,async (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.rank < 6) return 
let basad = [] 
for (let i in base.bs){
basad.push({ 
id: i 
}) 
} 
for (let j = 0; j < basad.length; j++){ 
base.bs[basad[j].id][context.$match[1]] = Number(context.$match[2]) 
} 
return context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ`) 
})
setInterval(function (){
for(let a in base.bs){
base.bs[a].paytime -= 1;
if(base.bs[a].paytime < 1){
base.bs[a].paytime = 1440
base.bs[a].paylimit = 0
}
}
}, 60000); 

updates.hear(/^(?:~replace)\s([0-9]+)\s(.*)\s(.*)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
 if(user.rank < 5 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179) return 
 if(!base.bs[context.$match[1]]) return context.send(`Error: (User with id: ${context.$match[1]} not founded) ‚ùé`) 
 if(user.rank < 6 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179){
    if(context.$match[2] == "bananas" || context.$match[2] == "id" || context.$match[2] == "bank" || context.$match[2] == "rate" || context.$match[2] == "rank" || context.$match[2] == "farms") return context.send(`Error: (Can't change this task) ‚ùé`)
 } 
 base.bs[context.$match[1]][context.$match[2]] = 1
 if(Number(base.bs[context.$match[1]][context.$match[2]])) { 
  base.bs[context.$match[1]][context.$match[2]] = Number(context.$match[3]) 
  let one = context.$match[2]
  let two = context.$match[3]
  vk.api.messages.send({chat_id: adminchat, message:`
[#LOG]
*id${context.senderId} (–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚öôÔ∏è) –∏–∑–º–µ–Ω–∏–ª –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ¬´${one}¬ª –∏–≥—Ä–æ–∫—É: "*id${base.bs[context.$match[1]].id} (${base.bs[context.$match[1]].nick})" –ù–∞: ¬´${(two)}¬ª `})
  return context.send(`Successful - NUM ‚òë`) 
 } else { 
  base.bs[context.$match[1]][context.$match[2]] = context.$match[3]; 
  return context.send(`Successful - STR ‚òë`) 
 } 
})
updates.hear(/–∏–º ([0-9]+) –ø—Ä–µ—Ñ–∏–∫—Å (.*)/i,(context) => {
let usid = base.id[context.senderId].id
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let myclan = clan[base.bs[base.id[context.senderId].id].clan]
if(user.rank < 4 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179) return
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
if(Number(context.$match[1]) !== Number(usid) && user.rank == 3 && context.senderId !== 452381830 && context.senderId !== 571003825 && context.senderId !== 515400179) return context.send(`${nick}, –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –ò–º—É—â–µ—Å—Ç–≤ –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º!üòí`)

let task = base.bs[context.$match[1]]
let newname = `${context.$match[2]}`
task.prefix = newname
return context.send(`${nick}, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ! üëç`)
})
updates.hear(/–∫–Ω–æ–ø–∫–∏ –≤–∫–ª|–∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–∏—Ç—å$/i, (context) => {
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}

	if(context.isChat) return context.send({ 
message: `${nick}, –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã. üëç
 `, 
     keyboard: Keyboard.keyboard([  
     menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
   .inline(false)
 
})
	return context.send({ 
message: `${nick}, –∫–Ω–æ–ø–∫–∏ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º –≤–∫–ª—é—á–µ–Ω—ã. üëç
 `, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
   .inline(false)
  }) 
	
	
	
})
updates.hear(/üíä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$/i, async (context) => {
	let platform = false
	let command = `üíä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`üíä`)) return
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
const get = require("prequest"); 
let china = await get('https://covid2019-api.herokuapp.com/current') 
let piece = await get('https://covid2019-api.herokuapp.com/total') 
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
return context.send(`üíä –ò–≥—Ä–æ–∫–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ ${base.context.id}\n\nC—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ 2020-nCoV: 

üá®üá≥ –ö–∏—Ç–∞–π: 
ü¶† –ó–∞—Ä–∞–∂–µ–Ω–æ: ${china.Mainland_China.confirmed} 
üíÄ –°–º–µ—Ä—Ç–µ–π: ${china.Mainland_China.deaths} 
üíä –í—ã–ª–µ—á–µ–Ω–æ: ${china.Mainland_China.recovered} 

üåç –í–µ—Å—å –º–∏—Ä: 
ü¶† –ó–∞—Ä–∞–∂–µ–Ω–æ: ${piece.confirmed} 
üíÄ –°–º–µ—Ä—Ç–µ–π: ${piece.deaths} 
üíä –í—ã–ª–µ—á–µ–Ω–æ: ${piece.recovered} 

üìÜ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${piece.dt}`)
})


updates.hear(/‚óÄÔ∏è –í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª|–í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª|–í —Ä–∞–∑–¥–µ–ª "—Ä–∞–∑–Ω–æ–µ"|–í —Ä–∞–∑–¥–µ–ª —Ä–∞–∑–Ω–æ–µ|‚óÄ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é|–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é$/i, (context) => {
	let platform = false
	let command = `–í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`‚óÄ`) && !context.text.includes(`–º–µ–Ω—é`) && !context.text.includes(`–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`) && !context.text.includes(`‚óÄÔ∏è`)) return
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}

	if(context.isChat) return context.send({ 
message: `${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å. üëç
 `, 
     keyboard: Keyboard.keyboard([  
     menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
   .inline(false)
 
})
	return context.send({ 
message: `${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å.
 `, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
   .inline(false)
  }) 
	
	
	
})
		updates.hear(/–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫|–Ω–∏–∫ –≤–∫–ª$/i,(context) => {
	let platform = false
	if(context.isChat) platform = true
	let user = base.bs[base.id[context.senderId].id]
	let nick = ``
	if(user.nicknotify == false) {
		nick = `${base.bs[base.id[context.senderId].id].nick}`
	}
	if(user.nicknotify == true) {
		nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
	}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}

		user.nicknotify = true
		let nf = user.notifications
		let nfb
		if(nf == true) {
		nf = Keyboard.PRIMARY_COLOR
		nfb = Keyboard.SECONDARY_COLOR
		}
		if(nf == false) {
		nfb = Keyboard.PRIMARY_COLOR
		nf = Keyboard.SECONDARY_COLOR
		}
		let nc = user.nicknotify
		let ncb
		if(nc == true) {
		nc = Keyboard.PRIMARY_COLOR
		ncb = Keyboard.SECONDARY_COLOR
		}
		if(nc == false) {
		ncb = Keyboard.PRIMARY_COLOR
		nc = Keyboard.SECONDARY_COLOR
		}
		return context.send({message: `${nick}, –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞! üëç`,
		  keyboard: Keyboard.keyboard([
		 [
				Keyboard.textButton({ 
				label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: nf,
				}),
				Keyboard.textButton({ 
				label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: nfb,
				}),
		  ],
		  [
				Keyboard.textButton({ 
				label: '‚òùÔ∏è –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
				color: nc,
				}),
				Keyboard.textButton({ 
				label: 'üëä –ù–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
				color: ncb,
				})
		  ],
		  [
				Keyboard.textButton({ 
				label: '‚óÄÔ∏è –í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª', 
				color: Keyboard.PRIMARY_COLOR,
				})           
		  ]
		 ])
		 .inline(platform)
	  })
		})
		updates.hear(/–Ω–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫|–Ω–∏–∫ –≤—ã–∫–ª$/i,(context) => {
	let platform = false
	if(context.isChat) platform = true
	let user = base.bs[base.id[context.senderId].id]
	let nick = ``
	if(user.nicknotify == false) {
		nick = `${base.bs[base.id[context.senderId].id].nick}`
	}
	if(user.nicknotify == true) {
		nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
	}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}

		user.nicknotify = false
		let nf = user.notifications
		let nfb
		if(nf == true) {
		nf = Keyboard.PRIMARY_COLOR
		nfb = Keyboard.SECONDARY_COLOR
		}
		if(nf == false) {
		nfb = Keyboard.PRIMARY_COLOR
		nf = Keyboard.SECONDARY_COLOR
		}
		let nc = user.nicknotify
		let ncb
		if(nc == true) {
		nc = Keyboard.PRIMARY_COLOR
		ncb = Keyboard.SECONDARY_COLOR
		}
		if(nc == false) {
		ncb = Keyboard.PRIMARY_COLOR
		nc = Keyboard.SECONDARY_COLOR
		}
		return context.send({message: `${nick}, –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞! üëç`,
		  keyboard: Keyboard.keyboard([
		 [
				Keyboard.textButton({ 
				label: 'üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: nf,
				}),
				Keyboard.textButton({ 
				label: 'üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', 
				color: nfb,
				}),
		  ],
		  [
				Keyboard.textButton({ 
				label: '‚òùÔ∏è –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
				color: nc,
				}),
				Keyboard.textButton({ 
				label: 'üëä –ù–µ–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–π –Ω–∏–∫', 
				color: ncb,
				})
		  ],
		  [
				Keyboard.textButton({ 
				label: '‚óÄÔ∏è –í —Ä–∞–∑–¥–µ–ª ¬´—Ä–∞–∑–Ω–æ–µ¬ª', 
				color: Keyboard.PRIMARY_COLOR,
				})           
		  ]
		 ])
		 .inline(platform)
	  })
		})
updates.hear(/getid (.*)$/i, async (context) => {
	let platform = false
	if(context.isChat) platform = true
	let user = base.bs[base.id[context.senderId].id]
	let nick = ``
	if(user.nicknotify == false) {
		nick = `${base.bs[base.id[context.senderId].id].nick}`
	}
	if(user.nicknotify == true) {
		nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
	}
	
	if(user.rank < 3) return
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
	let res = context.$match[1]
	while(res.includes(`vk.com`)){
		res = res.replace(`vk.com`,``)
	}
	while(res.includes(`/`)){
		res = res.replace(`/`,``)
	}
	while(res.includes(`https:`)){
		res = res.replace(`https:`,``)
	}
	try{
		var mine = await vk.api.users.get({
			user_ids: res
		});
	} catch(e){
		return context.send(`${nick}, –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.`)
	}
	if(!base.id[mine[0].id]) return context.send(`${nick}, –¥–∞–Ω–Ω—ã–π ID –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.`)
	return context.send(
		`
		VK ID: *id${mine[0].id} (${mine[0].id}) | GAME ID: *id${mine[0].id} (${base.id[mine[0].id].id})
		`
		)
})
updates.hear(/get ([0-9]+)$/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}

if(!base.bs[context.$match[1]]) return context.send(`${nick}, –∏–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üîç`)
if(user.rank < 2) return
let admtext = `${nick}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ ¬´*id${base.bs[context.$match[1]].id} (${base.bs[context.$match[1]].nick})¬ª:`
let guser = base.bs[context.$match[1]]
let profile = `\nüîé ID: ${base.id[guser.id].id}`
profile += `\nüëÄ –ù–∏–∫: ${guser.nick}`
profile += `\nüí† –í–ö –∏–¥: ${guser.id}`
profile += `\nüíä  –¢–∞–±–ª–µ—Ç–æ–∫: ${guser.tabl}üçå`
profile += `\n‚õî –ó–∞—Ä–∞–∑–∏–ª: ${guser.virus}`
profile += `\n‚õî –û—Å—Ç–∞–ª–æ—Å—å –∂–∏—Ç—å: ${guser.life}`
if(guser.topenabled == true) profile += `\nüëë –¢–æ–ø: –í–∫–ª—é—á–µ–Ω`
if(guser.topenabled == false) profile += `\nüëë –¢–æ–ø: –í—ã–∫–ª—é—á–µ–Ω`
if(guser.notifications == true) profile += `\nüîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã`
if(guser.notifications == false) profile += `\nüîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í—ã–∫–ª—é—á–µ–Ω—ã`
profile += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${guser.reg}`
if(guser.payban == true) profile += `\n‚õî –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏: –ï—Å—Ç—å`
if(guser.payban == false) profile += `\n‚õî –ë–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏: –ù–µ—Ç`
profile += `\n‚û°Ô∏è –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø–µ—Ä–µ–¥–∞–≤–∞–ª: ${guser.lastpay}`
profile +=`\nüí≤ –ü–µ—Ä–µ–¥–∞–ª: ${guser.payalltime}`
if(guser.reportban == true) profile += `\nüÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: –ï—Å—Ç—å`
if(guser.reportban == false) profile += `\nüÜò –ë–∞–Ω —Ä–µ–ø–æ—Ä—Ç–∞: –ù–µ—Ç`
if(guser.banned == false) profile += `\n‚ùé –ó–∞–±–∞–Ω–µ–Ω: –ù–µ—Ç`
if(guser.banned == true) profile += `\n‚ùé –ó–∞–±–∞–Ω–µ–Ω: –î–∞`
return context.send({message: `${admtext} ${profile}`
})
})
updates.hear(/–°—ä–µ—Å—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É|üíä –°—ä–µ—Å—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É$/i, async (context) => {
	let command = `–°—ä–µ—Å—Ç—å —Ç–∞–±–ª–µ—Ç–∫—É`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`üíä`)) return
let refid = context.payload.message.ref
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.tabl < 1){
return context.send(`–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–∞–±–ª–µ—Ç–æ–∫`)
}
user.life += Number(2)
user.tabl -= Number(1)
user.kolvo += Number(1)
return context.send(`–í—ã —Å—ä–µ–ª–∏ —Ç–∞–±–ª–µ—Ç–∫—É. –í—ã –ø—Ä–æ–¥–ª–∏–ª–∏ —Å—Ä–æ–∫ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ –Ω–∞ 2 —á`)
})
updates.hear(/–∑–∞—Ä–∞–∑–∏—Ç—å$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	
	let ssilka = `vk.me/bot_ncov2?ref=${base.id[context.senderId].id}`
	vk.api.call("utils.getShortLink", {url: ssilka}).then(function (res){ 
	setTimeout(() => context.send(`${nick},üò∑ –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–π—Ç–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –∑–∞—Ä–∞–∂–µ–Ω–∏—è, –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 1 —Ç–∞–±–ª–µ—Ç–∫—É! `), 1500)
	setTimeout(() => context.send(`` + res.short_url ), 3000)
})
})




async function run() {
    await vk.updates.startPolling();
    console.log(chalk.red(">_ Started"));
}
 
run().catch(console.error);
// –ü–æ–ª—É—á–∞–µ–º UnixDate –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
function getUnix() {
    return Math.floor(Date.now() / 1000);
}
setInterval(function() {
updateWidget()
console.log(chalk.yellow(`–≤–∏–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω :)`))
}, 36000)
function updateWidget() {
	var tops = []
	for(let i in base.bs){
		if(base.bs[i].topenabled === true && base.bs[i].rank < 4){
			tops.push({
				id: i,
				idvk: base.bs[i].id,
				lvl: base.bs[i].virus
			});
		}
	}
	tops.sort(function(a, b) {
		if (b.lvl > a.lvl) return 1
		if (b.lvl < a.lvl) return -1
		return 0
	})

	var script = {
		title: `–¢–æ–ø :3`,
		head: [
			{
				text: '–ù–∏–∫ –∏–≥—Ä–æ–∫–∞'
			},
			{
				text: '–ó–∞—Ä–∞–∑–∏–ª',
				align: 'right'
			}
		],
		body: []
	}

	for (var g = 0; g < 10; g++) {
		if (tops.length > g) {
			let ups = g;
			ups += 1;
			if (g <= 8) ups = `${ups}`
			if (g == 9) ups = `10`
			script.body.push([
				{
					icon_id: `id${tops[g].idvk}`,
					text: `${base.bs[tops[g].id].nick}`,
					url: `vk.com/id${tops[g].idvk}`
				},
				{
					text: `üôç‚Äç‚ôÇ${tops[g].lvl}`
				},
			])
		}
	}

	request.post({ 
		url: 'https://api.vk.com/method/appWidgets.update', 
		form: { 
			v: '5.103', 
			type: 'table', 
			code: `return ${JSON.stringify(script)};`, 
			access_token: '936a141f3594798aa02f0b7ef1348c077f02cfa6503e1228f2a2c23d4b13777bce1ea8048c113968c9d3f' 
	}},
	function(err, resp, body) {
	});
}
updates.hear(/üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è|–≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è $/i,(context) => {
let command = `–≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è` && quest !== `–í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è` && quest !== `–≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è` && !context.text.includes(`üëº`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.tabl < 5){
return context.send(`${nick}, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–∞–±–ª–µ—Ç–æ–∫ –≤–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è(5)`)
}
user.tabl -= Number(5)
user.life = 3
return context.send({ 
message: `${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤–æ–∑—Ä–æ–¥–∏–ª–∏—Å—å
 `, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2], menukeyboard[3]
   ])
   .inline(false)
  }) 
})
updates.hear(/—Ç–æ–ø|üëë —Ç–æ–ø$/i,(context) => {
let command = `—Ç–æ–ø`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `—Ç–æ–ø` && quest !== `—Ç–æ–ø` && quest !== `—Ç–æ–ø` && !context.text.includes(`üëë`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
return context.send({message: `${nick}, —É–∫–∞–∂–∏—Ç–µ –≤–∏–¥ —Ç–æ–ø–∞`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üíä –ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ],
	  [
            Keyboard.textButton({ 
            label: 'üôç‚Äç‚ôÇ –ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º', 
            color: Keyboard.NEGATIVE_COLOR,
            })
		]
     ])
     .inline(true)
  })
})
updates.hear(/üíä –ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º|–ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º$/i,(context) => {
let command = `–ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º` && quest !== `–ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º` && quest !== `–ü–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º` && !context.text.includes(`üíä`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
    let top = []
    let topme = [] 

    for (let i in base.bs){
    	if(base.bs[i].topenabled == true && base.bs[i].rank < 3){
        top.push({
            id: i,
            name: base.bs[i].nick,
            balance: base.bs[i].tabl 

        })
    }
    }


    top.sort(function(a, b) { 
if (b.balance > a.balance) return 1 
if (b.balance < a.balance) return -1 
return 0
}); 

let text = ""
for (let s = 0; s < top.length; s++){
    topme.push(top[s].id)
}

if (top.length < 10){
    for (let j = 0; j < top.length; j++){
    	j + 1
    	let b = `${j}`
    	b = b.replace("9", "üîü")
    	b = b.replace("8", "9‚É£")
    	b = b.replace("7", "8‚É£")
    	b = b.replace("6", "7‚É£")
    	b = b.replace("5", "6‚É£")
    	b = b.replace("4", "5‚É£")
    	b = b.replace("3", "4‚É£")
    	b = b.replace("2", "3‚É£")
    	b = b.replace("1", "2‚É£")
    	b = b.replace("0", "1‚É£")
        text += `${b} [id${base.bs[top[j].id].id}|${top[j].name}] ‚Äî üíä${utils.rn(top[j].balance)}\n`
    }
} else {
    for (let j = 0; j < 10; j++){
    	j + 1
    	let b = `${j}`
    	b = b.replace("9", "üîü")
    	b = b.replace("8", "9‚É£")
    	b = b.replace("7", "8‚É£")
    	b = b.replace("6", "7‚É£")
    	b = b.replace("5", "6‚É£")
    	b = b.replace("4", "5‚É£")
    	b = b.replace("3", "4‚É£")
    	b = b.replace("2", "3‚É£")
    	b = b.replace("1", "2‚É£")
    	b = b.replace("0", "1‚É£")
        text += `${b} [id${base.bs[top[j].id].id}|${top[j].name}] ‚Äî üíä${utils.rn(top[j].balance)}\n`
    }
} 

    return context.send(`${nick}, —Ç–æ–ø –ø–æ —Ç–∞–±–ª–µ—Ç–∫–∞–º: \n${text}`)
})
updates.hear(/üôç‚Äç‚ôÇ –ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º|–ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º$/i,(context) => {
let command = `–ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º` && quest !== `–ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º` && quest !== `–ü–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º` && !context.text.includes(`üôç‚Äç‚ôÇ`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(context.isChat){
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(true)
  })
}
}else{
if(user.life < 1){
return context.send({message: `${nick}, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –≤—ã–∂–∏—Ç—å`,
      keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: 'üëº –í–æ–∑—Ä–æ–¥–∏—Ç—å—Å—è', 
            color: Keyboard.PRIMARY_COLOR,
            })
      ]
     ])
     .inline(false)
  })
}
}
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
    let top = []
    let topme = []

    for (let i in base.bs){
    	if(base.bs[i].topenabled == true && base.bs[i].rank < 3){
        top.push({
            id: i,
            name: base.bs[i].nick,
            balance: base.bs[i].virus 

        })
    }
    }


    top.sort(function(a, b) { 
if (b.balance > a.balance) return 1 
if (b.balance < a.balance) return -1 
return 0
});

let text = ""
for (let s = 0; s < top.length; s++){
    topme.push(top[s].id)
}

if (top.length < 10){
    for (let j = 0; j < top.length; j++){
    	j + 1
    	let b = `${j}`
    	b = b.replace("9", "üîü")
    	b = b.replace("8", "9‚É£")
    	b = b.replace("7", "8‚É£")
    	b = b.replace("6", "7‚É£")
    	b = b.replace("5", "6‚É£")
    	b = b.replace("4", "5‚É£")
    	b = b.replace("3", "4‚É£")
    	b = b.replace("2", "3‚É£")
    	b = b.replace("1", "2‚É£")
    	b = b.replace("0", "1‚É£")
        text += `${b} [id${base.bs[top[j].id].id}|${top[j].name}] ‚Äî üôç‚Äç‚ôÇ${utils.rn(top[j].balance)}\n`
    }
} else {
    for (let j = 0; j < 10; j++){
    	j + 1
    	let b = `${j}`
    	b = b.replace("9", "üîü")
    	b = b.replace("8", "9‚É£")
    	b = b.replace("7", "8‚É£")
    	b = b.replace("6", "7‚É£")
    	b = b.replace("5", "6‚É£")
    	b = b.replace("4", "5‚É£")
    	b = b.replace("3", "4‚É£")
    	b = b.replace("2", "3‚É£")
    	b = b.replace("1", "2‚É£")
    	b = b.replace("0", "1‚É£")
        text += `${b} [id${base.bs[top[j].id].id}|${top[j].name}] ‚Äî üôç‚Äç‚ôÇ${utils.rn(top[j].balance)}\n`
    }
} 

    return context.send(`${nick}, —Ç–æ–ø –ø–æ –∑–∞—Ä–∞–∂–µ–Ω–Ω—ã–º: \n${text}`)
})