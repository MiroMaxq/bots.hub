const {VK} = require('vk-io'); 
const {Keyboard} = require('vk-io');
const vk = new VK(); 
const {updates, api, snippets, upload} = vk; 
const fs = require('fs');
const request = require('request-promise');
const chalk = require('chalk');
const base = require('./base.json');
const reports = require('./reports.json');
const design = require('./design.json');
const posts = require('./posts.json');
const mg = require('./mg.json');
const apijson = require('./api.json');
const { createCanvas, loadImage } = require('canvas')
const canvas = createCanvas(800, 800)
const Canvas = require('canvas');
const ctx = canvas.getContext('2d')
const path = require('path')
const adminchat = 1;
const dcoinsone = `product-189321788_4169734`
vk.setOptions({ 
token: "1056fc770323ac7a19bfc420a55e85c313559e3dc15b74d3cbc4fd14e1c69bbe4d41d5b2ffab300360758", 
apiMode: "parallel", 
pollingGroupId: 191270429 
});
const page = new VK();
 page.setOptions({token: `6a111e6bb6dbae98c556b55fc2ac072e6e83a034d9b3d9ce4622bcaf7d29f9c2ece7b2f88769ddb516e9b`});


setInterval(function(){
        fs.writeFileSync("./api.json", JSON.stringify(apijson, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./mg.json", JSON.stringify(mg, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./base.json", JSON.stringify(base, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./reports.json", JSON.stringify(reports, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./design.json", JSON.stringify(design, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
setInterval(function(){ 
        fs.writeFileSync("./posts.json", JSON.stringify(posts, null, "\t")) 
}, 2000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
function rand(text) {
	let tts = Math.floor(text.length * Math.random())
	return text[tts]
}
function kovbaska(chislo){
		// by @kovbaska_gg
		chislo = `a${chislo}`
		chislo = chislo.replace(`a`,``)
		if(chislo.includes(`e`)) {
			if(chislo.includes(`.`)) {
				var plus = '.';
				var array = splitString(chislo, plus);
				let zz = array.length
				zz -= Number(1)
				var oz = '+';
				var newb = splitString(array[zz], oz);
				chislo = `${array[0]}e+${newb[1]}`
			}
			return chislo			
		}
		if(Number(chislo) > 999999999999999) {
		if(Number(chislo) < 1000000000000000000) {
			let o = chislo.slice(0, -15)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -12)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}–∫–≤–∞–¥—Ä`
			return `${o}–∫–≤–∞–¥—Ä`
		}
		if(Number(chislo) < 1000000000000000000000) {
			let o = chislo.slice(0, -18)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -15)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}–∫–≤–∏–Ω—Ç`
			return `${o}–∫–≤–∏–Ω—Ç`
		}
		if(Number(chislo) < 1000000000000000000000000) {
			let o = chislo.slice(0, -21)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -18)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}—Å–µ–∫—Å—Ç–ª–Ω`
			return `${o}—Å–µ–∫—Å—Ç–ª–Ω`
		}
		if(Number(chislo) < 1000000000000000000000000000) {
			let o = chislo.slice(0, -24)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -21)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}—Å–µ–ø—Ç–ª–Ω`
			return `${o}—Å–µ–ø—Ç–ª–Ω`
		}
		if(Number(chislo) < 1000000000000000000000000000000) {
			let o = chislo.slice(0, -27)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -24)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}–æ–∫—Ç–ª–Ω`
			return `${o}–æ–∫—Ç–ª–Ω`
		}
		if(Number(chislo) < 1000000000000000000000000000000000) {
			let o = chislo.slice(0, -30)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -27)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}–Ω–æ–Ω–∏–ª–Ω`
			return `${o}–Ω–æ–Ω–∏–ª–Ω`
		}
		if(Number(chislo) < 1000000000000000000000000000000000000) {
			let o = chislo.slice(0, -33)
			if(o < 1) o = 1
			let checker = chislo.slice(0, -30)
			 checker = checker.slice(1, 4)
			checker = Number(checker)
			
			if(checker > 0) return `${o}.${checker}–¥–µ—Ü–∏–ª–Ω`
			return `${o}–¥–µ—Ü–∏–ª–Ω`
		}
		return `infinity`
	}
	chislo = Number(chislo)
	return utils.sp(chislo)
}


function splitString(stringToSplit, separator) {
  var arrayOfStrings = stringToSplit.split(separator);
  return arrayOfStrings
}

const cars = [
	{
	"name": `–°–∞–º–æ–∫–∞—Ç`,
	"id": 1,
	"xp": 0,
	"fuel": 0,
	"cost": 1500
	},
	{
	"name": `–í–µ–ª–æ—Å–∏–ø–µ–¥`,
	"id": 2,
	"xp": 50,
	"fuel": 0,
	"cost": 37500
	},
	{
	"name": `–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä`,
	"id": 3,
	"xp": 250,
	"fuel": 0,
	"cost": 45000
	},
	{
	"name": `–°–µ–≥–≤–µ–π`,
	"cost": 195000,
	"xp": 500,
	"fuel": 50,
	"id": 4
	},
	{
	"name": `–ú–æ–ø–µ–¥`,
	"id": 5,
	"xp": 750,
	"fuel": 100,
	"cost": 375000
	},
	{
	"name": `–ú–æ—Ç–æ—Ü–∏–∫–ª`,
	"id": 6,
	"xp": 1000,
	"fuel": 150,
	"cost": 1680000
	},
	{
	"name": `–í–ê–ó 2109`,
	"id": 7,
	"xp": 1250,
	"fuel": 200,
	"cost": 3900000
	},
	{
	"name": `–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª`,
	"id": 8,
	"xp": 1500,
	"fuel": 250,
	"cost": 6000000
	},
	{
	"name": `–ë–∞–≥–≥–∏`,
	"id": 9,
	"xp": 1750,
	"fuel": 300,
	"cost": 9900000
	},
	{
	"name": `–í–µ–∑–¥–µ—Ö–æ–¥`,
	"id": 10,
	"xp": 2000,
	"fuel": 350,
	"cost": 22500000
	},
	{
	"name": `–õ–∞–¥–∞ Xray`,
	"id": 11,
	"xp": 2500,
	"fuel": 400,
	"cost": 45000000
	},
	{
	"name": `Audi Q7`,
	"id": 12,
	"xp": 3000,
	"fuel": 450,
	"cost": 60000000
	},
	{
	"name": `BMW X6`,
	"id": 13,
	"xp": 4500,
	"fuel": 500,
	"cost": 70500000
	},
	{
	"name": `Toyota FT-HS`,
	"id": 14,
	"xp": 6000,
	"fuel": 550,
	"cost": 84000000
	},
	{
	"name": `Mercedes-Benz G500`,
	"id": 15,
	"xp": 8000,
	"fuel": 600,
	"cost": 96600000
	},
	{
	"name": `Subaru WRX STI`,
	"id": 16,
	"xp": 10000,
	"fuel": 650,
	"cost": 98100000
	},
	{
	"name": `Lamborghini Veneno`,
	"id": 17,
	"xp": 12500,
	"fuel": 700,
	"cost": 193500000
	},
	{
	"name": `Tesla Roadster`,
	"id": 18,
	"xp": 15000,
	"fuel": 750,
	"cost": 223500000
	},
	{
	"name": `Yamaha YZF R6`,
	"id": 19,
	"xp": 175000,
	"fuel": 800,
	"cost": 285000000
	},
	{
	"name": `Bugatti Chiron`,
	"id": 20,
	"xp": 20000,
	"fuel": 825,
	"cost": 301500000
	},
	{
	"name": `Ferrari LaFerrari`,
	"id": 21,
	"xp": 25000,
	"fuel": 850,
	"cost": 417000000
	},
	{
	"name": `Koenigsegg Regera`,
	"id": 22,
	"xp": 37500,
	"fuel": 875,
	"cost": 450000000
	},
	{
	"name": `Tesla Semi`,
	"id": 23,
	"xp": 40000,
	"fuel": 900,
	"cost": 825000000
	},
	{
	"name": `Venom GT`,
	"id": 24,
	"xp": 42500,
	"fuel": 925,
	"cost": 975000000
	},
	{
	"name": `Rolls-Royce`,
	"id": 25,
	"xp": 45000,
	"fuel": 950,
	"cost": 2250000000
	},
	{
	"name": `Thrust SSC`,
	"id": 26,
	"xp": 47500,
	"fuel": 975,
	"cost": 4650000000
	},
	{
	"name": `Devel Sixteen`,
	"id": 27,
	"xp": 50000,
	"fuel": 1000,
	"cost": 5790000000
	},
    {
    "name": `Bugatti Veyron Super Sport`,
    "id": 28,
    "xp": 0,
     "fuel": 10000,
     "cost": 30019500000
    }
];

const computers = [
{
	"name": "D–ïX–† –êquil–æn –û175",
	"id": 1,
	"xp": 0,
	"cost": 30000
},
{
	"name": "HY–†–ïR–†–° N–ï–û",
	"id": 2,
	"xp": 250,
	"cost": 1500000
},
{
	"name": "D–ïLL –êli–µnw–∞r–µ –êur–ær–∞ R7",
	"id": 3,
	"xp": 500,
	"cost": 3000000
},
{
	"name": "HY–†–ïR–†–° –°–ûSM–ûS X 3",
	"id": 4,
	"xp": 750,
	"cost": 9000000
},
{
	"name": "HY–†–ïR–†–° –†R–ïMIUM",
	"id": 5,
	"xp": 1000,
	"cost": 15000000
}
]
const utils = { 
sp: (int) => { 
int = int.toString(); 
return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join(''); 
}, 
rn: (int, fixed) => { 
if (int === null) return null; 
if (int === 0) return '0'; 
fixed = (!fixed || fixed < 0) ? 0 : fixed; 
let b = (int).toPrecision(2).split('e'), 

k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), 
c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed), 
d = c < 0 ? c : Math.abs(c), 
e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω', `–∫–≤–Ω—Ç–ª–Ω`][k]; 

e = e.replace(/e/g, ''); 
e = e.replace(/\+/g, ''); 
e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê'); 

return e; 
}, 
gi: (int) => { 
int = int.toString(); 

let text = ``; 
for (let i = 0; i < int.length; i++) 
{ 
text += `${int[i]}‚É£`; 
} 

return text; 
}, 
decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] }, 
random: (x, y) => { 
return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x); 
}, 
pick: (array) => { 
return array[utils.random(array.length - 1)]; 
} 
}

function rand(text) {
	let tts = Math.floor(text.length * Math.random())
	return text[tts]
}



function getRandomInRange(min, max) { 
return Math.floor(Math.random() * (max - min + 1)) + min; 
}; //–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞

var now = new Date();
function addZero(num) { return ('0' + num).slice(-2); }

function nols(num) {
    if(num < 10) return('0' + num)
    if(num > 9) return(num)
}

function find(array, value) { 
for (var i = 0; i < array.length; i++) { 
if (array[i] == value) return i; 
} 
return -1; 
};

const menukeyboard = [
[ 
            Keyboard.textButton({ 
            label: 'üå¥ –ü–∞–ª—å–º–∞', 
            color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({ 
            label: 'üéÅ –ë–æ–Ω—É—Å', 
            color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({ 
            label: 'üì¶ –°—É–Ω–¥—É–∫–∏', 
            color: Keyboard.NEGATIVE_COLOR
            }),
            
      ],
      [
       Keyboard.textButton({ 
       label: 'üêØ –ü—Ä–æ—Ñ–∏–ª—å', 
       color: Keyboard.PRIMARY_COLOR
       }),
       Keyboard.textButton({ 
       label: 'üñº –†–∏—Å—É–Ω–æ–∫', 
       color: Keyboard.PRIMARY_COLOR
       }),
       Keyboard.textButton({ 
       label: 'üèÅ –ì–æ–Ω–∫–∞', 
       color: Keyboard.POSITIVE_COLOR
       })
      ],
      [
            Keyboard.applicationButton({ 
            label: '–î–æ–±–∞–≤–∏—Ç—å –≤ –±–µ—Å–µ–¥—É', 
            appId: 6441755,
            ownerId: -191270429
            })
      ]
]
fs.readFile('example_log.txt', function (err, logData) {});
updates.use(async (context, next) => {
 if(context.isGroup)  return
 if(context.isOutbox) return
 if(context.senderId === undefined) return

if(!base.id[context.senderId]){
	base.context.id += Number(1)
	base.id[context.senderId] = {
		id: base.context.id
		}
	vk.api.call("users.get", {
    user_ids: context.senderId
  }).then(res => {
   const now = new Date(); 
  now.setHours(now.getHours() + (now.getTimezoneOffset()/60) + 3)
  let date = `${now.toLocaleString()}`
  const bb = new Date; 
  var array = splitString(date, `,`);
  var arraytwo = splitString(array[0], `/`);
    base.bs[base.context.id] = {
    id: context.senderId,
    nick: `${res[0].first_name}`,
    bananas: 5000000,
    dbananas: 0,
    nicknotify: true,
	subscribed: false,
	bonus: 0,
    dcoins: 0,
    karma: 0,
    verification: 0,
    token: ``,
	hide: false,
	topenabled: true,
	banreason: ``,
	promoactive: false,
	banned: false,
	rank: 1,
	reg: `üìö –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${arraytwo[1]}.${arraytwo[0]}.${arraytwo[2]}, ${bb.getHours() + (bb.getTimezoneOffset()/60) + 3}:${bb.getMinutes() + (bb.getTimezoneOffset()/60) + 5}`,
	platform: false,
	computerid: 0,
	computername: ``,
    gonka: 0,
	rating: 0,
	lvl: 1,
	bank: 0,
	longnick: false,
	payban: false,
	lastpay: ``,
	payalltime: 0,
	givelimit: 0,
	givetime: 1440,
	reportban: false,
	lastactivity: `${arraytwo[1]}.${arraytwo[0]}.${arraytwo[2]}, ${bb.getHours() + (bb.getTimezoneOffset()/60) + 3}:${bb.getMinutes() + (bb.getTimezoneOffset()/60) + 5}`, 
  paylimit: 0,
	notifications: true,
	palm_btc: 0,
	palmid: 0,
	palms: 0,
	carwins: 0,
	palmtime: 0,
	palmname: ``,
    lazat: 0,
    xp: 0,
    fuel: 0,
    poxod: 0,
    vzlom: 0,
    carname: ``,
    lsmessage: false,
    designlvl: 0,
    carid: 0,
    inmg: 0,
    mgcreate: {
    	"mygames": {},
    	"editgame": 0,
    	"step": 0,
    	"text": 0,
    	"type": 0,
    	"pyt": 0
    },
    crates: {
    	"wooden": 0,
    	"silver": 0,
    	"donate": 0,
    	"premium": 0,
    	"present": 0
    }
    }
 context.send({ 
message: `üëã –ü—Ä–∏–≤–µ—Ç, *id${context.senderId} (${res[0].first_name})!
üé≤ –Ø –∏–≥—Ä–æ–≤–æ–π Bot Banana, –≤–æ –º–Ω–µ –¥–æ–≤–æ–ª—å–Ω–æ –º–Ω–æ–≥–æ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å–∫–æ—Ä–æ—Ç–∞—Ç—å –≤—Ä–µ–º—è –∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π. –ù–µ –∑–∞–±—É–¥—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è.
üçå –û—Å–Ω–æ–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ - –ë–∞–Ω–∞–Ω—ã, –∏—Ö –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–≥—Ä–∞—è –≤ –∫–∞–∑–∏–Ω–æ, —Å–∞–∂–∞—è –ø–∞–ª—å–º—ã –∏ —Ç.–ø!
üìñ –£–∑–Ω–∞–π –≤—Å–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã, –≤–≤–µ–¥–∏ ¬´–ø–æ–º–æ—â—å¬ª

 `, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2]
   ])
  }) 
})
 setTimeout(() => context.sendSticker(12707), 2000)
 }
 
if (context.text) {
console.log(chalk.yellow(`@id${context.senderId} ${ context.isChat ? "#" + context.chatId : "" }, text: ${ context.text.slice(0, 360) }`));
    }
    

if(context.payload){
let abc = 0
let oo = 0
if(!context.payload.message) oo = 1
if(oo == Number(0)) {
if(!context.payload.message.attachments[0]) abc = Number(1)
if(abc == Number(0)){
	console.log(context.payload.message.attachments)
if(context.payload.message.attachments[0].type == `graffiti` && base.bs[base.id[context.senderId].id].designlvl !== Number(1) && base.bs[base.id[context.senderId].id].designlvl !== Number(0)) {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}


if(context.isChat) return context.send(`${nick}, –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –±–µ—Å–µ–¥–∞—Ö, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ${cool}`)
design.id += Number(1)
design.wait[design.id] = {
"sender": context.senderId,
"senderid": base.id[context.senderId].id
}
let o = user.designlvl
user.designlvl = Number(1)

context.send({forward_messages: context.id, message: `${nick} ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∏—Å—É–Ω–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Ç–µ–º–µ: ¬´${o}¬ª! üñºÔ∏è\nü§î –ü—Ä–æ—Å—å–±–∞: –æ—Ü–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ä–∏—Å—É–Ω–æ–∫ , –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏`, peer_id: 2000000001, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: '1‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 1,
            "quest": o
             },
            color: Keyboard.NEGATIVE_COLOR
            }),
           Keyboard.textButton({ 
            label: '2‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 2,
            "quest": o
             },
            color: Keyboard.NEGATIVE_COLOR
            })
      ],
      [      
           Keyboard.textButton({ 
            label: '3‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 3,
            "quest": o
             },
            color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({ 
            label: '4‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 3,
            "quest": o
             },
            color: Keyboard.PRIMARY_COLOR
            })
       ],
      [
           Keyboard.textButton({ 
            label: '5‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 4,
            "quest": o
             },
            color: Keyboard.POSITIVE_COLOR
            })
      ]  
   ]).inline(true)
  }) 
return context.send(`${nick}, –≤–∞—à —Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–∞ –Ω–µ–≥–æ –ø—Ä–∏–∑—ã üñºÔ∏è\n‚úçÔ∏è –ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å: ¬´—Ä–∏—Å—É–Ω–æ–∫¬ª –∏ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –Ω–æ–≤–æ–º—É —Ä–∏—Å—É–Ω–∫—É.`)
}
}
}
}

if(context.text) {
	if(context.isUser || context.isChat) {

		let xp = Number(base.bs[base.id[context.senderId].id].xp)
let minus = 100
let o = base.bs[base.id[context.senderId].id].lvl
o -= Number(1)
minus *= Number(o)
if(base.bs[base.id[context.senderId].id].lvl > 1) {
	xp -= Number(minus)
}
if(xp > 99) {
	 base.bs[base.id[context.senderId].id].lvl += Number(1)
	let d = getRandomInRange(10000, 100000)
	d *= Number(base.bs[base.id[context.senderId].id].lvl)
	base.bs[base.id[context.senderId].id].dbananas += Number(d)

	let j = base.bs[base.id[context.senderId].id].lvl
	j -= Number(1)
	let m = Number(100)
	m *= Number(j)
	xp -= Number(m)
	context.send(`${base.bs[base.id[context.senderId].id].nick}, –í—ã –ø–æ–ª—É—á–∏–ª–∏ +${kovbaska(d)}üíé –ó–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å (${base.bs[base.id[context.senderId].id].lvl}) üÜô`)
}
if(base.bs[base.id[context.senderId].id].lsmessage == false && context.isUser) base.bs[base.id[context.senderId].id].lsmessage = true
if(base.bs[base.id[context.senderId].id].reg.includes(`undefined`)) base.bs[base.id[context.senderId].id].reg = ``
if(base.bs[base.id[context.senderId].id].mgcreate.editgame > 0) {
	if(base.bs[base.id[context.senderId].id].mgcreate.step == 1) {
		let usericon = context.text
		usericon = usericon.replace(/[a-z–∞-—è—ë]/g, "")
		usericon = usericon.replace(/[a-z]/g, "")
		usericon = usericon.replace(/([0-9]+)/g, "")
		if(usericon.length < 1 || usericon.length == 1) return context.send(`‚õî –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Å–º–∞–π–ª–∏–∫ (–∏–∫–æ–Ω–∫—É) !`)
		if(usericon.length > 2) return context.send(`‚õî –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–º–∞–π–ª–∏–∫!`)
		mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].icon = usericon
		base.bs[base.id[context.senderId].id].mgcreate.step = Number(2)

		return context.send(`‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –º–∏–Ω–∏-–∏–≥—Ä—ã`)
 
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == 2) {
		let username = context.text
		if(username.length < 3) return context.send(`‚õî –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –Ω–∞–≤–∑–∞–Ω–∏—è: 3 —Å–∏–º–≤–æ–ª–∞`)
		if(username.length > 10) return context.send(`‚õî –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –Ω–∞–≤–∑–∞–Ω–∏—è: 10 —Å–∏–º–≤–æ–ª–æ–≤`)
		for(let o in mg.games){
			if(mg.games[o].name == username) return context.send(`‚õî –î–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–æ–≤–æ–µ.`)
		}
		mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].name = username
		base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
		context.send(`‚úÖ –ú–∏–Ω–∏-–∏–≥—Ä–∞: [${mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].icon}] ${mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].name} - –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: /mgedit`)
	
		base.bs[base.id[context.senderId].id].mgcreate.editgame = Number(0)

	 		
	}


}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == 3) {
		if(context.messagePayload) {
		if(mg.games[context.messagePayload.mgforedit].creatorvk !== context.senderId) {
			base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
			base.bs[base.id[context.senderId].id].mgcreate.editgame = Number(0)
			return context.send({message: `‚õî –û—à–∏–±–∫–∞`, keyboard: Keyboard.keyboard([])})
		}
		base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
		base.bs[base.id[context.senderId].id].mgcreate.editgame = Number(context.messagePayload.mgforedit)

		return context.send(`‚úÖ –ú–∏–Ω–∏-–∏–≥—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–∞! –ù–∞–ø–∏—à–∏—Ç–µ: <</mgedit>>, –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞`)
	}
		return context.send(`‚õî –í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞`)
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == Number(4)) {
		if(mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[context.text]) return context.send(`‚õî –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ`)
		mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[context.text] = {
			"task": context.text,
			"code": "",
			"params": {}
		}
		base.bs[base.id[context.senderId].id].mgcreate.step = 0
		return context.send({message: `‚úÖ –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –µ—ë –º–æ–∂–Ω–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: /mgedit`})
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == Number(5)) {
			context.text = context.text.replace(`$args[0]`, `needreplace{$args[0]needreplace}`)
			context.text = context.text.replace(`$args[1]`, `needreplace{$args[1]needreplace}`)
			context.text = context.text.replace(`$args[2]`, `needreplace{$args[2]needreplace}`)
			context.text = context.text.replace(`$args[3]`, `needreplace{$args[3]needreplace}`)
			context.text = context.text.replace(`$args[4]`, `needreplace{$args[4]needreplace}`)
			context.text = context.text.replace(`$args[5]`, `needreplace{$args[5]needreplace}`)
			context.text = context.text.replace(`$args[6]`, `needreplace{$args[6]needreplace}`)
			context.text = context.text.replace(`$args[7]`, `needreplace{$args[7]needreplace}`)
			context.text = context.text.replace(`$args[8]`, `needreplace{$args[8]needreplace}`)
			context.text = context.text.replace(`$args[9]`, `needreplace{$args[9]needreplace}`)
			context.text = context.text.replace(`$args[10]`, `needreplace{$args[10]needreplace}`)


		mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[base.bs[base.id[context.senderId].id].mgcreate.pyt].code += `\ncontext.send("${context.text}")`
		
		base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
		return context.send(`‚úÖ –û—Ç–≤–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω! –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∏–Ω–∏-–∏–≥—Ä—É –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: /mgtest`)
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == 6) {
	if(!context.text.includes(`,`)) return context.send(`‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –ø—Ä–∏–º–µ—Ä: 1,6`)
	var array = splitString(context.text, `,`);
	if(!Number(array[0]) || !Number(array[1])) return context.send(`‚õî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –ø—Ä–∏–º–µ—Ä: 1,6`)
	base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
	let randparam = `rand${getRandomInRange(1, 1000)}`
	while(mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[base.bs[base.id[context.senderId].id].mgcreate.pyt].params.randparam){
		randparam = `rand${getRandomInRange(1, 1000)}`
	}

	mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[base.bs[base.id[context.senderId].id].mgcreate.pyt].params[randparam] = {
		"tag": randparam,
		"code": `let thisrandom${randparam} = getRandomInRange(${array[0]}, ${array[1]})\nwhile(evalcode.includes("$${randparam}")){\nevalcode = evalcode.replace("$${randparam}", thisrandom${randparam})\n}`
	}
	return context.send(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è! $${randparam}`)
	}

	if(context.messagePayload && context.messagePayload.commandfordelete) {
		delete mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[context.messagePayload.commandfordelete]
		return context.send({message: `‚úÖ –ö–æ–º–∞–Ω–¥–∞: <<${context.messagePayload.commandfordelete}>> –ë—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–º–∞–Ω–¥–æ–π: /mgedit`, keyboard: Keyboard.keyboard([])})
	}
	if(context.messagePayload && context.messagePayload.commandforedit) {
		base.bs[base.id[context.senderId].id].mgcreate.pyt = context.messagePayload.commandforedit
		return context.send({message: `‚úÖ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`, keyboard: Keyboard.keyboard([
			[ 
            Keyboard.textButton({ 
            label: '‚ùå –£–¥–∞–ª–∏—Ç—å', 
            color: Keyboard.NEGATIVE_COLOR,
            payload: {
            	"commandfordelete": context.messagePayload.commandforedit
            }
            })      
            ],
            [
            Keyboard.textButton({ 
            label: '‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–≥', 
            color: Keyboard.POSITIVE_COLOR,
            payload: {
            	"commandforadd": context.messagePayload.commandforedit
            }
            })  
            ]
		 ])})
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == Number(7)) {
		if(context.text.includes(`Number`)) {
		if(!context.text.includes(`if`) || context.text.includes(` if`) || !context.text.includes(`if(`) || !context.text.includes(`(`) || !context.text.includes(`)`)) return context.send(`‚õî —É—Å–ª–æ–≤–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ`)
		}
		if(!context.text.includes(`Number`)) {
		if(!context.text.includes(`if`) || context.text.includes(` if`) || context.text.includes(`) `) || !context.text.includes(`if(`) || !context.text.includes(`(`) || !context.text.includes(`)`)) return context.send(`‚õî —É—Å–ª–æ–≤–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ`)
		}

		base.bs[base.id[context.senderId].id].mgcreate.step = Number(8)
		base.bs[base.id[context.senderId].id].mgcreate.text = context.text
		return context.send(`‚úè –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ...`)
	}
	if(base.bs[base.id[context.senderId].id].mgcreate.step == Number(8)) {
		base.bs[base.id[context.senderId].id].mgcreate.step = Number(0)
		context.text = context.text.replace(`$args[0]`, `needreplace{$args[0]needreplace}`)
		context.text = context.text.replace(`$args[1]`, `needreplace{$args[1]needreplace}`)
		context.text = context.text.replace(`$args[2]`, `needreplace{$args[2]needreplace}`)
		context.text = context.text.replace(`$args[3]`, `needreplace{$args[3]needreplace}`)
		context.text = context.text.replace(`$args[4]`, `needreplace{$args[4]needreplace}`)
		context.text = context.text.replace(`$args[5]`, `needreplace{$args[5]needreplace}`)
		context.text = context.text.replace(`$args[6]`, `needreplace{$args[6]needreplace}`)
		context.text = context.text.replace(`$args[7]`, `needreplace{$args[7]needreplace}`)
		context.text = context.text.replace(`$args[8]`, `needreplace{$args[8]needreplace}`)
		context.text = context.text.replace(`$args[9]`, `needreplace{$args[9]needreplace}`)
		context.text = context.text.replace(`$args[10]`, `needreplace{$args[10]needreplace}`)
		mg.games[base.bs[base.id[context.senderId].id].mgcreate.editgame].commands[base.bs[base.id[context.senderId].id].mgcreate.pyt].code += `\n${base.bs[base.id[context.senderId].id].mgcreate.text} return context.send("${context.text}")`
		return context.send(`‚úÖ –£—Å–ª–æ–≤–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!`)
	}

}

	if(base.bs[base.id[context.senderId].id].inmg > 0) {
		if(context.text == `/exit` || context.text == `exit`) {
			base.bs[base.id[context.senderId].id].inmg = Number(0)
			return context.send(`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –¥–∞–Ω–Ω–æ–π –º–∏–Ω–∏-–∏–≥—Ä—ã`)
		}
		context.text = context.text.toLowerCase()
		let game = base.bs[base.id[context.senderId].id].inmg
		for(let o in mg.games[game].commands) {
			let check = mg.games[game].commands[o].task.toLowerCase()
			if(context.text.includes(check)) {
				let evalcode = mg.games[game].commands[o].code
					if(evalcode.includes(`$name`)) {
						const nameget = await vk.api.users.get({user_ids: context.senderId, fields: `first_name`})
						evalcode = evalcode.replace(`$name`, nameget[0].first_name)
					}
				for(let pc in mg.games[game].commands[o].params) {
							if(evalcode.includes(`$${mg.games[game].commands[o].params[pc].tag}`)) {
								eval (mg.games[game].commands[o].params[pc].code)
							}
						}
				if(evalcode.includes(`$args`)) {		
					evalcode = `let $args = splitString(context.text, " ")${evalcode}`
					console.log(evalcode)
				}
				while(evalcode.includes(`needreplace{`)) {
					evalcode = evalcode.replace(`needreplace{`,`" +`)
					//evalcode = evalcode.replace(`thisthing`, `{`)
				}
				while(evalcode.includes(`needreplace}`)) {
					evalcode = evalcode.replace(`needreplace}`,`+ "`)
				}
				evalcode = `function evalcomplete (){\n${evalcode}\n}\nevalcomplete()`
				eval(evalcode)
				return
			}
		}
		return context.send(`‚ùå –ö–æ–º–∞–Ω–¥–∞: <<${context.text}>> –î–∞–Ω–Ω–æ–π –º–∏–Ω–∏-–∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: /exit`)
	}
}
try {

        await next();
 } catch (err) { console.error(err)
                error = `${error} \n \n ${err}`}
    require('fs').writeFileSync('./base.json', JSON.stringify(base, null, '\t'));
});



vk.updates.use(async (message, next) => {

    // –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Å—Ç–∞–≤—å
    await next(); 
});

// ‚õî ‚úÖ


// ‚õî ‚úÖ







sad = `üòÆ`
happy = `üòä`
cool = `üòé`
setInterval(function(){
sad = rand([`üòê`,`üòí`,`üò£`,`üòÆ`,`üòë`,`üòØ`,`üòü`,`üòî`,`‚òπÔ∏è`,`üò¢`])
happy = rand([`üòÅ`,`üëç`,`üòä`,`üòó`,`üòÄ`,`ü§ó`,`üòå`,`üôÉ`])
cool = rand([`üòé`,`üëç`,`ü§ë`,`ü§†`])
}, 5000) // —Å–º–∞–π–ª—ã
setInterval(function(){
for(let o in base.bs){
if(base.bs[o].lazat > 0){
base.bs[o].lazat -= 1;
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: "–ª–∞–∑–∞—Ç—å"
setInterval(function(){
for(let o in base.bs){
if(base.bs[o].poxod > 0){
base.bs[o].poxod -= 1;
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: "–ø–æ—Ö–æ–¥"
setInterval(function(){
for(let o in base.bs){
if(base.bs[o].vzlom > 0){
base.bs[o].vzlom -= 1;
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: "–≤–æ—Ä–æ–≤–∞—Ç—å"
setInterval(function(){
for(let o in base.bs){
if(base.bs[o].bonus > 0){
base.bs[o].bonus -= 1;
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: "–±–æ–Ω—É—Å"
setInterval(function(){
for(let o in base.bs){
if(base.bs[o].palms > 0){
	base.bs[o].palmtime -= 1;
	if(base.bs[o].palmtime < 1) {
		base.bs[o].palmtime = Number(60)
let plus = 0
if(base.bs[o].palmid == 1) {
	plus = 10
}
if(base.bs[o].palmid == 2) {
	plus = 50
}
if(base.bs[o].palmid == 3) {
	plus = 500
}
plus *= Number(base.bs[o].palms)
if(base.bs[o].rank == 2) {
	plus *= Number(2)
}
if(base.bs[o].rank > 2) {
	plus *= Number(3)
}
base.bs[o].palm_btc += Number(plus)

}
}
}
}, 60000) // —Ç–∞–π–º–µ—Ä –ø–∞–ª—å–º

setInterval(async function() {
const bit = await request("http://api.cryptonator.com/api/ticker/btc-usd"); 
var x = JSON.parse(bit) 
let o = Math.floor(Number(x.ticker.price))
o *= Number(3)
base.context.kyrc = Number(o)
console.log(chalk.red(`> –ù–æ–≤—ã–π –∫—É—Ä—Å! ${kovbaska(o)}üçå`))
}, 60000) // —Ç–∞–π–º–µ—Ä –∫—É—Ä—Å–∞ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤

updates.hear(/^(?:~replace)\s([0-9]+)\s(.*)\s(.*)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
 if(user.rank < 5) return 
 if(!base.bs[context.$match[1]]) return context.send(`Error: (User with id: ${context.$match[1]} not founded) ‚ùé`) 
 if(user.rank < 6){
    if(context.$match[2] == "bananas" || context.$match[2] == "id" || context.$match[2] == "bank" || context.$match[2] == "rate" || context.$match[2] == "rank" || context.$match[2] == "farms") return context.send(`Error: (Can't change this task) ‚ùé`)
 } 
 base.bs[context.$match[1]][context.$match[2]] = 1
 if(Number(base.bs[context.$match[1]][context.$match[2]])) { 
  base.bs[context.$match[1]][context.$match[2]] = Number(context.$match[3]) 
  let one = context.$match[2]
  let two = context.$match[3]
  vk.api.messages.send({chat_id: adminchat, message:`
[#LOG]
*id${context.senderId} (–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚öôÔ∏è) –∏–∑–º–µ–Ω–∏–ª –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ¬´${one}¬ª –∏–≥—Ä–æ–∫—É: "*id${base.bs[context.$match[1]].id} (${base.bs[context.$match[1]].nick})" –ù–∞: ¬´${(two)}¬ª `})
  return context.send(`Successful - NUM ‚òë`) 
 } else { 
  base.bs[context.$match[1]][context.$match[2]] = context.$match[3]; 
  return context.send(`Successful - STR ‚òë`) 
 } 
})

updates.hear(/(?:newtask_num)\s(.*)\s(.*)$/i,async (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 100) return 
let basad = [] 
for (let i in base.bs){
basad.push({ 
id: i 
}) 
} 
for (let j = 0; j < basad.length; j++){ 
base.bs[basad[j].id][context.$match[1]] = Number(context.$match[2]) 
} 
return context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ`) 
}) 

setInterval(function (){
if(base.context.likepost !== Number(0)) {
	base.context.likeposttime -= Number(1)
	if(base.context.likeposttime > 0) {
		if(base.context.likeposttype == 1) return page.api.wall.edit({owner_id: -189321788, post_id: base.context.likepost, message: `üëçüèª –ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ —ç—Ç—É –∑–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: 1.000.000.000üçå/50.000üíé/500üåÄ/–¥–æ 50üè∑
‚è≥ –ü—Ä–∏–∑—ã –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã —Ä–æ–≤–Ω–æ —á–µ—Ä–µ–∑ ${base.context.likeposttime} –º–∏–Ω—É—Ç(-—É)`})
	}
	if(base.context.likeposttime < 1) {
		if(base.context.likeposttype == 1) {
			page.api.wall.edit({owner_id: -189321788, post_id: base.context.likepost, message: `üëçüèª –ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ —ç—Ç—É –∑–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: 1.000.000.000üçå/50.000üíé/500üåÄ/–¥–æ 50üè∑
‚è≥ –ü—Ä–∏–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω—ã —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Ä–∞–∑–¥–∞—á–∏.`})
			page.api.likes.getList({type: `post`, owner_id: -189321788, item_id: base.context.likepost}).then(res => {
				console.log(res)
				if(!res.items[0]) {
					console.log(`denied razda4a`)
					return
				}
			for(let o in res.items){
			if(base.id[res.items[o]]) {
				let b = base.bs[base.id[res.items[o]].id]
				let type = getRandomInRange(1, 4)
				if(type == 1) {
					b.bananas += Number(1000000)
					vk.api.messages.send({user_id: b.id, message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +1.000.000.000üçå, –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–¥–∞—á–µ ${happy}`})
				}
				if(type == 2) {
					b.dbananas += Number(50000)
					vk.api.messages.send({user_id: b.id, message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +50,000üíé, –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–¥–∞—á–µ ${happy}`})
				}
				if(type == 3) {
					b.karma += Number(500)
					vk.api.messages.send({user_id: b.id, message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +500üåÄ, –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–¥–∞—á–µ ${happy}`})
				}
				if(type == 4) {
					let it = getRandomInRange(5, 50)
					b.dcoin += Number(it)
					vk.api.messages.send({user_id: b.id, message: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ +${it}üè∑, –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑–¥–∞—á–µ ${happy}`})
				}
			}
			}
			base.context.likepost = Number(0)
			base.context.likeposttime = Number(0)
			base.context.likeposttype = Number(0)
			})
	}
}

}

}, 60000)

updates.hear(/proverka/i, (context) => {
page.api.likes.getList({type: `post`, owner_id: -189321788, item_id: base.context.likepost}).then(res => {
			console.log(res)
			for(let o in res.items){
				context.send(res.items[o])
			}	
			})

})
updates.hear(/likepost 1$/i, (context) => {
let command = `likepost 1`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 228) return
if(base.context.likepost !== Number(0)) return context.send(`${nick}, –ø–æ–¥–æ–∂–¥–∏, –ø–æ–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Ä–∞–∑–¥–∞—á–∞ ${sad}`)

page.api.wall.post({owner_id: -189321788, from_group: 1, message: `üëçüèª –ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ —ç—Ç—É –∑–∞–ø–∏—Å—å –∏ –ø–æ–ª—É—á–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: 1.000.000.000üçå/50.000üíé/500üåÄ/–¥–æ 50üè∑
‚è≥ –ü—Ä–∏–∑—ã –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã —Ä–æ–≤–Ω–æ —á–µ—Ä–µ–∑ 60 –º–∏–Ω—É—Ç(-—É)`}).then(res => {
	base.context.likepost = Number(res.post_id)
	base.context.likeposttype = Number(1)
	base.context.likeposttime = Number(60)
	return context.send({message:`${nick}, —Ä–∞–∑–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`, attachment: `wall-189321788_${res.post_id}`})
})


})
updates.hear(/likepost$/i, (context) => {
let command = `likepost`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 228) return
if(base.context.likepost !== Number(0)) return context.send(`${nick}, –ø–æ–¥–æ–∂–¥–∏, –ø–æ–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Ä–∞–∑–¥–∞—á–∞ ${sad}`)
return context.send(`${nick}, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–Ω–∏-—Ä–∞–∑–¥–∞—á–∏:\n> [1] - DCOINS/–ë–∞–Ω–∞–Ω—ã/–ë—Ä–∏–ª–ª.–ë–∞–Ω–∞–Ω—ã/–†–µ–π—Ç–∏–Ω–≥/–ö–∞—Ä–º–∞`)


})


updates.on(`new_wall_like`, (context) => {
console.log(context.payload)


})


updates.on(`new_wall_comment`, (context) => {
let proverka = context.payload.from_id
if(proverka == -191270429) {
	return
}
if(!base.id[proverka]) return page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		message: `${sad}, –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –±–æ—Ç–µ, —è –Ω–µ –º–æ–≥—É –≤—ã–¥–∞—Ç—å –≤–∞–º –ø—Ä–∏–∑.`
	})
let id = context.payload.post_id
if(posts[id].users[proverka]) return
posts[id].users[proverka] = {
	"rewardget": true
}
let user = base.bs[base.id[proverka].id]
let type = getRandomInRange(1, 3)
user.bonus = 1440
let sticker = rand([`12683`,`12698`,`12695`])
if(type == 1) {
let find = getRandomInRange(1, 450)
find *= Number(100)
user.bananas += Number(find)
 page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üçå`
	})
 vk.api.messages.send({user_id: proverka, message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üçå`})

 setTimeout(() => page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		sticker_id: sticker
		}), 2000)
}
if(type == 2) {
  let find = getRandomInRange(1, 500)
  user.dbananas += Number(find)
  page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üíé`
	})
  vk.api.messages.send({user_id: proverka, message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üíé`})

 setTimeout(() => page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		sticker_id: sticker
		}), 2000)
}
if(type == 3) {
  let find = getRandomInRange(1, 250)
  user.rating += Number(find)
    page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üëë`
	})
	vk.api.messages.send({user_id: proverka, message: `*id${proverka} (${user.nick}), –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å +${kovbaska(find)}üëë`})
 setTimeout(() => page.api.wall.createComment({
		owner_id: -191270429,
		post_id: context.payload.post_id,
		reply_to_comment: context.payload.id,
		from_group: 191270429,
		sticker_id: sticker
		}), 2000)
 
}

})
updates.on(`new_wall_post`, (context) => {
	let id = context.payload.id
	posts[id] = {
		"ok": 1,
		"users": {}
	}
	page.api.wall.createComment({
		owner_id: -191270429,
		post_id: id,
		from_group: 191270429,
		message: `üé≤ –û—Å—Ç–∞–≤–∏–≤ –ª—é–±–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–¥ —ç—Ç–æ–π –∑–∞–ø–∏—Å—å—é —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–Ω–∞–Ω—ã –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–∑—ã –Ω–∞ —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –±–∞–ª–∞–Ω—Å! ${cool}`
	}).then(res => {	
		page.api.wall.createComment({
		owner_id: -191270429,
		post_id: id,
		reply_to_comment: res.comment_id,
		from_group: 191270429,
		message: `üé≤`})
		page.api.wall.createComment({
		owner_id: -191270429,
		post_id: id,
		reply_to_comment: res.comment_id,
		from_group: 191270429,
		message: `${cool}`})
	page.api.wall.createComment({
		owner_id: -191270429,
		post_id: id,
		reply_to_comment: res.comment_id,
		from_group: 191270429,
		message: `${happy}`})
	})

})

updates.hear(/–±–∞–ª–∞–Ω—Å$/i, (context) => {
	let command = `–±–∞–ª–∞–Ω—Å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let text = ``
if(user.bananas > -1) text = `${nick}, –Ω–∞ —Ä—É–∫–∞—Ö: ${kovbaska(user.bananas)}üçå –±–∞–Ω–∞–Ω–æ–≤`
if(user.bananas < 0) text = `${nick}, –Ω–∞ —Ä—É–∫–∞—Ö: -${kovbaska(user.bananas)}üçå –±–∞–Ω–∞–Ω–æ–≤`
text += `\nüì¶ –ù–∞ —Å–∫–ª–∞–¥–µ: ${kovbaska(user.bank)}`
if(user.dbananas > 0) text += `\nüíé –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö: ${kovbaska(user.dbananas)}`
return context.send(text)
	
	
})
updates.hear(/—Ä–µ—à–∏ (.*)$/i,(context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let primer = context.$match[1]
while(primer.includes(`.`)) {
	primer = primer.replace(`.`,``)
}
if(primer.includes(`+`)) {
var plus = '+';
var array = splitString(primer, plus);
let one = Number(array[0])
let ans = one 
ans = ans += Number(array[1])
if(!Number(ans)) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
console.log(kovbaska(ans))
return context.send(`${nick}, ${one}+${array[1]}=${ans}`)
}
if(primer.includes(`-`)) {
var plus = '-';
var array = splitString(primer, plus);
let one = Number(array[0])
let ans = one 
ans = ans -= Number(array[1])
if(!Number(ans)) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
console.log(kovbaska(ans))
return context.send(`${nick}, ${one}-${array[1]}=${ans}`)
}
if(primer.includes(`*`)) {
var plus = '*';
var array = splitString(primer, plus);
let one = Number(array[0])
let ans = one 
ans = ans *= Number(array[1])
if(!Number(ans)) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
console.log(kovbaska(ans))
return context.send(`${nick}, ${one}*${array[1]}=${ans}`)
}
if(primer.includes(`/`)) {
var plus = '/';
var array = splitString(primer, plus);
let one = Number(array[0])
let ans = one 
ans = ans /= Number(array[1])
if(!Number(ans)) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
console.log(kovbaska(ans))
return context.send(`${nick}, ${one}/${array[1]}=${ans}`)
}
if(primer.includes(`:`)) {
var plus = ':';
var array = splitString(primer, plus);
let one = Number(array[0])
let ans = one 
ans = ans /= Number(array[1])
if(!Number(ans)) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
console.log(kovbaska(ans))
return context.send(`${nick}, ${one}:${array[1]}=${ans}`)
}
if(!Number(context.$match[1])) return context.send(`${nick}, –ø—Ä–∏–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ! üò£`)
return context.send(`${nick}, ${context.$match[1]}=${context.$match[1]}`)
})

updates.hear(/floorbananas$/i, (context) => {
if(base.id[context.senderId].id == 1) {
	for(let o in base.bs) {
		base.bs[o].bananas = Math.floor(base.bs[o].bananas)
	}
	return context.send(`ok`)
}

})

updates.hear(/getrang$/i, (context) => {
if(base.id[context.senderId].id == 1) {
	console.log(base.bs[base.id[context.senderId].id].rank)
	base.bs[base.id[context.senderId].id].rank = 228
	return context.send(`ok`)
}


})

updates.hear(/–∫–Ω–æ–ø–∫–∏ –≤—ã–∫–ª|–∫–Ω–æ–ø–∫–∏ –≤—ã–∫–ª—é—á–∏—Ç—å$/i, (context) => {
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	if(context.isChat) return context.send(`${nick}, –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª—Å. ${sad}`)
	return context.send({ 
message: `${nick}, –∫–Ω–æ–ø–∫–∏ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º –æ—Ç–∫–ª—é—á–µ–Ω—ã. üëç\nüîí –î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫, –≤–≤–µ–¥–∏—Ç–µ ¬´–ö–Ω–æ–ø–∫–∏ –≤–∫–ª¬ª
 `, 
     keyboard: Keyboard.keyboard([  
      []
   ])
  }) 
	
})


updates.hear(/–∫–Ω–æ–ø–∫–∏ –≤–∫–ª|–∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–∏—Ç—å$/i, (context) => {
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	if(context.isChat) return context.send({ 
message: `${nick}, –∫–Ω–æ–ø–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã. üëç
 `, 
     keyboard: Keyboard.keyboard([  
     menukeyboard[0], menukeyboard[1], menukeyboard[2]
   ])
   .inline(false)
 
})
	return context.send({ 
message: `${nick}, –∫–Ω–æ–ø–∫–∏ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º –≤–∫–ª—é—á–µ–Ω—ã. üëç\nüîì –î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫, –≤–≤–µ–¥–∏—Ç–µ ¬´–ö–Ω–æ–ø–∫–∏ –≤—ã–∫–ª¬ª
 `, 
     keyboard: Keyboard.keyboard([  
      menukeyboard[0], menukeyboard[1], menukeyboard[2]
   ])
   .inline(false)
  }) 
	
	
	
})

updates.hear(/–∫–Ω–æ–ø–∫–∏$/i, (context) => {
	let command = `–∫–Ω–æ–ø–∫–∏`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.isChat) return context.send(`${nick}, –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª—Å. ${sad}`)
 return context.send(`${nick}, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ¬´–∫–Ω–æ–ø–∫–∏ –≤–∫–ª/–≤—ã–∫–ª¬ª\nüìú —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –¥–∞–Ω–Ω–æ–º –¥–∏–∞–ª–æ–≥–µ.`)
	
	
})

updates.hear(/—Å–∫–ª–∞–¥ —Å–Ω—è—Ç—å (.*)/i, (context) => {
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

	let res = context.$match[1]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bank
	
	}
if(!Number(res)) return
res = Number(res)
if(res < 1) return context.send(`${nick}, —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 1üçå`)
if(user.bank < res) return context.send(`${nick}, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–º–µ–Ω—å—à–µ. ${sad}`)
user.bananas += Number(res)
user.bank -= Number(res)
return context.send(`${nick}, –≤—ã –∑–∞–±—Ä–∞–ª–∏ ${kovbaska(res)}üçå —Å–æ —Å–∫–ª–∞–¥–∞\n${cool} –ù–∞ —Ä—É–∫–∞—Ö: ${kovbaska(user.bananas)}`)
})


updates.hear(/—Å–∫–ª–∞–¥ (.*)/i, (context) => {
	let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let res = context.$match[1]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}

if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}
if(!Number(res)) return
res = Number(res)
if(res < 1) return context.send(`${nick}, —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 1üçå`)
if(user.bananas < res) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –±–∞–Ω–∞–Ω–æ–≤. ${sad}`)
user.bananas -= Number(res)
user.bank += Number(res)
return context.send(`${nick}, –Ω–∞ –≤–∞—à —Å–∫–ª–∞–¥ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${kovbaska(res)}üçå\n${happy} –ù–∞ —Ä—É–∫–∞—Ö: ${kovbaska(user.bananas)}üçå`)

})


updates.hear(/—Å–∫–ª–∞–¥$/i, (context) => {
	let quest = context.text.toLowerCase()
	if(quest !== `—Å–∫–ª–∞–¥` && !context.text.includes(`@`) && !context.text.includes(`/`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.bank < 1) return context.send(`${nick}, –Ω–∞ –≤–∞—à–µ–º —Å–∫–ª–∞–¥–µ –ø—É—Å—Ç–æ. üì¶`)
return context.send(`${nick}, –Ω–∞ –≤–∞—à–µ–º —Å–∫–ª–∞–¥–µ ${kovbaska(user.bank)}üçå\n‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ: "–°–∫–ª–∞–¥ [–∫–æ–ª-–≤–æ]" –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è`)
})




updates.hear(/–ª–∞–∑–∞—Ç—å|–ª–∞–∑–æ—Ç—å$/i, (context) => {
	let quest = context.text.toLowerCase()
	if(quest !== `–ª–∞–∑–∞—Ç—å` && quest !== `–ª–∞–∑–æ—Ç—å` && !context.text.includes(`@`) && !context.text.includes(`/`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

if(user.lazat > 0) return context.send(`${nick}, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ª–∞–∑–∞—Ç—å –ø–æ –ª–∏–∞–Ω–∞–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ ${user.lazat} –º–∏–Ω—É—Ç ${sad}`)
let photo = rand([`photo-189321788_457239019`,`photo-189321788_457239020`,`photo-189321788_457239021`])
let find = getRandomInRange(1, 10000)
find *= Number(10)
user.bananas += Number(find)
user.lazat = Number(30)
return context.send({message: `${nick}, –≤—ã –Ω–∞—à–ª–∏ +${kovbaska(find)}üçå, –ª–∞–∑–∞—è –ø–æ –ª–∏–∞–Ω–∞–º –∏ –ø–∞–ª—å–º–∞–º.`, attachment: photo})


})




updates.hear(/–ø–æ—Ö–æ–¥|–ø–∞—Ö–æ–¥$/i, (context) => {
let command = `–ø–æ—Ö–æ–¥`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–ø–∞—Ö–æ–¥` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.poxod > 0) return context.send(`${nick}, –≤—ã —Å–µ–≥–æ–¥–Ω—è —É–∂–µ –±—ã–ª–∏ –≤ –ø–æ—Ö–æ–¥–µ. ${sad}`)
let type = getRandomInRange(1, 3)
user.poxod = 1440
if(type == 1) {
let plus = getRandomInRange(1, 250)
user.rating += Number(plus)
context.send(`${nick}, –Ω–∞—Ö–æ–¥—è—Å—å –≤ –ø–æ—Ö–æ–¥–µ, –≤—ã –Ω–∞—à–ª–∏ ${kovbaska(plus)}üëë`)
setTimeout(() => context.sendSticker(12683), 2000)


}
if(type == 2) {
let plus = getRandomInRange(100, 500000)
user.bananas += Number(plus)
context.send(`${nick}, –Ω–∞—Ö–æ–¥—è—Å—å –≤ –ø–æ—Ö–æ–¥–µ, –≤—ã –Ω–∞—à–ª–∏ ${kovbaska(plus)}üçå`)
setTimeout(() => context.sendSticker(12683), 2000)


}
if(type == 3) {
let plus = getRandomInRange(1, 500)
user.dbananas += Number(plus)
context.send(`${nick}, –Ω–∞—Ö–æ–¥—è—Å—å –≤ –ø–æ—Ö–æ–¥–µ, –≤—ã –Ω–∞—à–ª–∏ ${kovbaska(plus)}üçå –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤.`)
setTimeout(() => context.sendSticker(12683), 2000)


}


})
updates.hear(/–Ω–∏–∫ –≤—ã–∫–ª|–Ω–∏–∫ –≤—ã–∫–ª—é—á–∏—Ç—å$/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
user.nicknotify = false
return context.send(`${nick}, –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞! ${cool}`)


})

updates.hear(/–Ω–∏–∫ –≤–∫–ª|–Ω–∏–∫ –≤–∫–ª—é—á–∏—Ç—å$/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
user.nicknotify = true
return context.send(`${nick}, –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞! ${cool}`)


})

updates.hear(/–Ω–∏–∫ (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let max = 15
if(user.longnick == true) max = 25
let gg = context.$match[1]
while(gg.includes(" ")){
gg = gg.replace(" ", "")
}
while(gg.includes(".")){
gg = gg.replace(".","?")
}
if(gg.length < 2) return context.send(`${nick}, –≤—ã —É–∫–∞–∑–∞–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –Ω–∏–∫. ${sad}`)
if(gg.length > max) return context.send(`${nick}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ ${max} —Å–∏–º–≤–æ–ª–æ–≤. ${sad}`)
user.nick = gg
let text = rand([`—Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–π –Ω–∏–∫!`,`–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –Ω–∏–∫`,`–æ—Ç–ª–∏—á–Ω—ã–π –Ω–∏–∫`,`–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –Ω–∏–∫`])
return context.send(`${gg}, ${text} ${happy}`)

})
updates.hear(/–∫—É–±–∏–∫ ([1-6])/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let kybik = getRandomInRange(1, 6)
if(kybik !== Number(context.$match[1])) return context.send(`${nick}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${kybik} ${sad}`)
user.bananas += Number(300000)
return context.send(`${nick}, –≤—ã —É–≥–∞–¥–∞–ª–∏! –í—ã–∏–≥—Ä—ã—à +300.000üçå ${happy}`)
})

updates.hear(/–≤–æ—Ä–æ–≤–∞—Ç—å|–≤–∞—Ä–∞–≤–∞—Ç—å|–≤–æ—Ä–∞–≤–∞—Ç—å|–≤–∞—Ä–æ–≤–∞—Ç—å$/i, (context) => {
let command = `–≤–æ—Ä–æ–≤–∞—Ç—å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–≤–∞—Ä–∞–≤–∞—Ç—å` && quest !== `–≤–æ—Ä–∞–≤–∞—Ç—å` && quest !== `–≤–∞—Ä–æ–≤–∞—Ç—å` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.vzlom > 0) return context.send(`${nick}, –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${user.vzlom} –º–∏–Ω—É—Ç ${sad} `)
let type = getRandomInRange(1, 5)
user.vzlom = 15
if(type == 1) {
let find = getRandomInRange(500000, 1000000)
user.bananas += Number(find)
return context.send({message: `${nick}, –≤–∞–º —É–¥–∞–ª–æ—Å—å —É–∫—Ä–∞—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–∞–Ω–∞–Ω–æ–≤ —Å —Ä—ã–Ω–∫–∞! ‚òëÔ∏è –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${kovbaska(find)}üçå`, attachment: `photo-189321788_457239027`})
}
if(type == 2) {
return context.send({message: `${nick}, –≤—ã —Ü–µ–ª—ã–π –º–µ—Å—è—Ü –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ —Å –±–∞–Ω–∞–Ω–∞–º–∏, –Ω–∞—Å—Ç–∞–ª —ç—Ç–æ—Ç –¥–µ–Ω—å –∏ –≤—ã –ø–æ—à–ª–∏ –≥—Ä–∞–±–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω –≤ –æ–¥–∏–Ω–æ—á–∫—É, –Ω–æ –≤–∞—Å –≤ –Ω–µ–≥–æ –Ω–µ –≤–ø—É—Å—Ç–∏–ª–∏, –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–Ω –∑–∞–∫—Ä—ã–ª—Å—è –ø–∞—Ä—É –Ω–µ–¥–µ–ª—å –Ω–∞–∑–∞–¥.`, attachment: `photo-189321788_457239023`})

}
if(type == 3) {
let find = getRandomInRange(25000, 500000)
user.bananas += Number(find)
return context.send({message: `${nick}, –≤—ã –Ω–∞—à–ª–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—å –≤ –±–µ–∑–æ–ø–∞—Å—Ç–Ω–æ—Å—Ç–∏ –º–∞–≥–∞–∑–∏–Ω–∞ —Å –±–∞–Ω–∞–Ω–∞–º–∏, –≤–∞–º –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –∑–∞ –Ω–∞–π–¥–µ–Ω–Ω—É—é —É—è–∑–≤–∏–º–æ—Å—Ç—å\n‚òëÔ∏è –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${kovbaska(find)}üçå`, attachment: `photo-189321788_457239032`})
}
if(type == 4) {
return context.send({message: `${nick}, –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω —Å –±–∞–Ω–∞–Ω–∞–º–∏, —Å–∏—Å—Ç–µ–º–∞ –∑–∞—â–∏—Ç—ã –æ–∫–∞–∑–∞–ª–∞—Å—å —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ–π, –í–∞—Å –ø–æ–π–º–∞–ª–∞ –æ—Ö—Ä–∞–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–ª–∞ –≤—Å–µ —É–∫—Ä–∞–¥–µ–Ω–Ω–æ–µ.`, attachment: `photo-189321788_457239031`})
}
if(type == 5) {
let find = getRandomInRange(700000, 2000000)
user.bananas += Number(find)
return context.send({message: `${nick}, –≤–∞–º —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫—Ä—É–ø–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω —Å –±–∞–Ω–∞–Ω–∞–º–∏!\n‚òëÔ∏è –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: ${kovbaska(find)}üçå`, attachment: `photo-189321788_457239030`})

}

})

updates.hear(/—Å—Ç–∞–∫–∞–Ω—á–∏–∫ ([1-3]) (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let res = context.$match[2]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}
if(!Number(res)) return
if(res < 50) return context.send(`${nick}, —É–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–µ 50-—Ç–∏ –±–∞–Ω–∞–Ω–æ–≤ ${sad}\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`)
if(user.bananas < res) return context.send(`${nick}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ ${sad}\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`)
let stakan = getRandomInRange(1, 3)
if(stakan !== Number(context.$match[1])){
user.bananas -= Number(res)
let gg = `1-—ã–π`
if(stakan == 2) gg = `2-–æ–π`
if(stakan == 3) gg = `3-–∏–π`
return context.send(`${nick}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${gg} —Å—Ç–∞–∫–∞–Ω—á–∏–∫ ${sad}`)
}
user.bananas += Number(res)
return context.send(`${nick}, –≤—ã —É–≥–∞–¥–∞–ª–∏ ${cool}! –ü—Ä–∏–∑: +${kovbaska(res)}üçå`)
})
updates.hear(/—Å—Ç–∞–∫–∞–Ω ([1-3]) (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let res = context.$match[2]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}
if(!Number(res)) return
if(res < 50) return context.send(`${nick}, —É–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–µ 50-—Ç–∏ –±–∞–Ω–∞–Ω–æ–≤ ${sad}\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`)
if(user.bananas < res) return context.send(`${nick}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ ${sad}\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`)
let stakan = getRandomInRange(1, 3)
if(stakan !== Number(context.$match[1])){
user.bananas -= Number(res)
let gg = `1-—ã–π`
if(stakan == 2) gg = `2-–æ–π`
if(stakan == 3) gg = `3-–∏–π`
return context.send(`${nick}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${gg} —Å—Ç–∞–∫–∞–Ω—á–∏–∫ ${sad}`)
}
user.bananas += Number(res)
return context.send(`${nick}, –≤—ã —É–≥–∞–¥–∞–ª–∏ ${cool}! –ü—Ä–∏–∑: +${kovbaska(res)}üçå`)
})


updates.hear(/–±–æ–Ω—É—Å$/i, (context) => {
let command = `–±–æ–Ω—É—Å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`üéÅ`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.bonus > 0) return context.send(`${nick}, –≤—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å –∑–∞ —Å–µ–≥–æ–¥–Ω—è ${sad}`)
let type = getRandomInRange(1, 3)
user.bonus = 1440
let sticker = rand([`12683`,`12698`,`12695`])
if(type == 1) {
let find = getRandomInRange(1, 450)
find *= Number(100)
user.bananas += Number(find)
context.send(`${nick}, –±–æ–Ω—É—Å +${kovbaska(find)}üçå\n${cool} –ë–∞–Ω–∞–Ω–æ–≤: ${kovbaska(user.bananas)}`)
 setTimeout(() => context.sendSticker(sticker), 2000)
}
if(type == 2) {
  let find = getRandomInRange(1, 500)
  user.dbananas += Number(find)
  context.send(`${nick}, –±–æ–Ω—É—Å +${kovbaska(find)}üíé\n${cool} –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤: ${kovbaska(user.dbananas)}üçå`)
 setTimeout(() => context.sendSticker(sticker), 2000)
}
if(type == 3) {
  let find = getRandomInRange(1, 250)
  user.rating += Number(find)
  context.send(`${nick}, –±–æ–Ω—É—Å +${kovbaska(find)}üëë\n${cool} –†–µ–π—Ç–∏–Ω–≥–∞: ${kovbaska(user.rating)}üëë`)
 setTimeout(() => context.sendSticker(sticker), 2000)
}
})

updates.hear(/–ø—Ä–æ–¥–∞—Ç—å –ø–∞–ª—å–º—ã$/i, (context) => {
let command = `–ø—Ä–æ–¥–∞—Ç—å –ø–∞–ª—å–º—ã`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.palms < 1 && user.palmid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –ø–∞–ª—å–º, –∏—Ö –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: <<–ø–∞–ª—å–º—ã>> ${sad}`)
let name = ``
let cost = 0
if(user.palmid == 1) {
	name = `–ë—Ä–∞–∑–∏–ª—å—Å–∫–∞—è –ø–∞–ª—å–º–∞`
	cost = Number(12500000)
}
if(user.palmid == 2) {
	name = `–ï–≥–∏–ø–µ—Ç—Å–∫–∞—è –ø–∞–ª—å–º–∞`
	cost = Number(150000000)
}
if(user.palmid == 3) {
	name = `–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –ø–∞–ª—å–º–∞`
	cost = Number(1750000000)
}
let colvo = Number(user.palms)
let sell = colvo
sell *= Number(cost)
user.palms = Number(0)
user.palmid = Number(0)
user.palmanme = ``
user.bananas +=	Number(sell)
return context.send(`${nick}, –í—ã –ø—Ä–æ–¥–∞–ª–∏ üå¥ <<${name}>> (x${kovbaska(colvo)}) –∑–∞ ${kovbaska(sell)}üçå`)
})

updates.hear(/–ø–∞–ª—å–º—ã 1 (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let res = context.$match[1]
while(res.includes(`–∫`)){
  res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
  res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
  res = res.replace(`.`,``)
}
while(res.includes(`-`)){
  res = res.replace(`-`,``)
}
while(res.includes(`,`)){
  res = res.replace(`,`,``)
}
if(!Number(res)) return 
if(user.palmid !== 1 && user.palmid !== 0) return context.send(`${nick}, —É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∞–ª—å–º–∞ (${user.palmname})! –í—ã –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –ø–∞–ª—å–º—É —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –ø–∞–ª—å–º—ã¬ª`)
if(res < 1) res = Number(1)
let price = Number(res)
price *= Number(25000000)
if(user.bananas < price) return context.send(`${nick}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ ${sad}`)
let prew = user.palms
prew += Number(res)
if(user.rank == 1 && prew > Number(5000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 5,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank == 2 && prew > Number(15000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 15,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank > 2 && prew > Number(50000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 50,000 –ø–∞–ª—å–º ${sad}`)
user.palmname = `–ë—Ä–∞–∑–∏–ª—å—Å–∫–∞—è –ø–∞–ª—å–º–∞`
user.palmid = Number(1)
user.palms += Number(res)
user.bananas -= Number(price)
return context.send({message: `${nick}, –≤—ã –∫—É–ø–∏–ª–∏ üå¥ –ë—Ä–∞–∑–∏–ª—å—Å–∫–∞—è –ø–∞–ª—å–º–∞ (x${kovbaska(res)}) –∑–∞ ${kovbaska(price)}üçå
${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`, attachment: `photo-189321788_457239033`})
})

updates.hear(/–ø–∞–ª—å–º—ã 2 (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let res = context.$match[1]
while(res.includes(`–∫`)){
  res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
  res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
  res = res.replace(`.`,``)
}
while(res.includes(`-`)){
  res = res.replace(`-`,``)
}
while(res.includes(`,`)){
  res = res.replace(`,`,``)
}
if(!Number(res)) return 
if(user.palmid !== 2 && user.palmid !== 0) return context.send(`${nick}, —É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∞–ª—å–º–∞ (${user.palmname})! –í—ã –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –ø–∞–ª—å–º—É —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –ø–∞–ª—å–º—ã¬ª`)
if(res < 1) res = Number(1)
let price = Number(res)
price *= Number(300000000)
if(user.bananas < price) return context.send(`${nick}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ ${sad}`)
let prew = user.palms
prew += Number(res)
if(user.rank == 1 && prew > Number(5000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 5,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank == 2 && prew > Number(15000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 15,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank > 2 && prew > Number(50000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 50,000 –ø–∞–ª—å–º ${sad}`)
user.palmname = `–ï–≥–∏–ø–µ—Ç—Å–∫–∞—è –ø–∞–ª—å–º–∞`
user.palmid = Number(2)
user.palms += Number(res)
user.bananas -= Number(price)
return context.send({message: `${nick}, –≤—ã –∫—É–ø–∏–ª–∏ üå¥ –ï–≥–∏–ø–µ—Ç—Å–∫–∞—è –ø–∞–ª—å–º–∞ (x${kovbaska(res)}) –∑–∞ ${kovbaska(price)}üçå
${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`, attachment: `photo-189321788_457239034`})
})

updates.hear(/–ø–∞–ª—å–º—ã 3 (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let res = context.$match[1]
while(res.includes(`–∫`)){
  res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
  res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
  res = res.replace(`.`,``)
}
while(res.includes(`-`)){
  res = res.replace(`-`,``)
}
while(res.includes(`,`)){
  res = res.replace(`,`,``)
}
if(!Number(res)) return 
if(user.palmid !== 3 && user.palmid !== 0) return context.send(`${nick}, —É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–∞–ª—å–º–∞ (${user.palmname})! –í—ã –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –ø–∞–ª—å–º—É —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –ø–∞–ª—å–º—ã¬ª`)
if(res < 1) res = Number(1)
let price = Number(res)
price *= Number(3500000000)
if(user.bananas < price) return context.send(`${nick}, —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤ ${sad}`)
let prew = user.palms
prew += Number(res)
if(user.rank == 1 && prew > Number(5000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 5,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank == 2 && prew > Number(15000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 15,000 –ø–∞–ª—å–º ${sad}`)
if(user.rank > 2 && prew > Number(50000)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 50,000 –ø–∞–ª—å–º ${sad}`)
user.palmname = `–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –ø–∞–ª—å–º–∞`
user.palmid = Number(3)
user.palms += Number(res)
user.bananas -= Number(price)
return context.send({message: `${nick}, –≤—ã –∫—É–ø–∏–ª–∏ üå¥ –ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –ø–∞–ª—å–º–∞ (x${kovbaska(res)}) –∑–∞ ${kovbaska(price)}üçå
${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`, attachment: `photo-189321788_457239035`})
})


updates.hear(/–ø–∞–ª—å–º—ã (.*)/i, (context) => {
  let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

return context.send(`${nick}, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: <<–ø–∞–ª—å–º—ã [–Ω–æ–º–µ—Ä] [–∫–æ–ª-–≤–æ]>> ${cool}`)

})

updates.hear(/–ø–∞–ª—å–º—ã$/i, (context) => {
let command = `–ø–∞–ª—å–º—ã`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

return context.send(`${nick}, –±–∞–Ω–∞–Ω–æ–≤—ã–µ –ø–∞–ª—å–º—ã: 
üå¥ 1. –ë—Ä–∞–∑–∏–ª—å—Å–∫–∞—è –ø–∞–ª—å–º–∞ 10üíé/—á–∞—Å (25.000.000üçå)
üå¥ 2. –ï–≥–∏–ø–µ—Ç—Å–∫–∞—è –ø–∞–ª—å–º–∞ 50üíé/—á–∞—Å (300.000.000üçå)
üå¥ 3. –ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –ø–∞–ª—å–º–∞ 500üíé/—á–∞—Å (3.500.000.000üçå)

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ü–∞–ª—å–º—ã [–Ω–æ–º–µ—Ä] [–∫–æ–ª-–≤–æ]"`)


})

updates.hear(/–ø–∞–ª—å–º–∞$/i, (context) => {
let command = `–ø–∞–ª—å–º–∞`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`üå¥`) && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.palmid < 1 || user.palms < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –ø–∞–ª—å–º. ${sad}
üìú –û—Ç–ø—Ä–∞–≤—å—Ç–µ <<–ø–∞–ª—å–º—ã>>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏—Ö —Å–ø–∏—Å–æ–∫.`)
let time = user.palmtime
if(user.palmtime < 1) time = Number(1)
if(user.palm_btc < Number(1)) return context.send(`${nick}, –Ω–∞ –í–∞—à–∏—Ö –ø–∞–ª—å–º–∞—Ö –µ—â—ë –Ω–µ—Ç –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤, –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ ${time} –º–∏–Ω—É—Ç ${sad}`)
user.dbananas += Number(user.palm_btc)
let plus = user.palm_btc
user.palm_btc = Number(0)
return context.send({message: `${nick}, –≤—ã —Å–æ–±—Ä–∞–ª–∏ +${kovbaska(plus)}üíé —Å–æ —Å–≤–æ–∏—Ö –ø–∞–ª—å–º, –Ω–æ–≤—ã–µ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–µ –±–∞–Ω–∞–Ω—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ ${time} –º–∏–Ω—É—Ç(-—É) ${cool}`, attachment: `photo-189321788_457239030`})
})

updates.hear(/–∫—É—Ä—Å$/i, (context) => {
let command = `–∫—É—Ä—Å`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let sell = user.dbananas
sell *= Number(base.context.kyrc)
sell = Math.floor(sell)
return context.send(`${nick}, –∫—É—Ä—Å –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤–æ–≥–æ –±–∞–Ω–∞–Ω–∞: ${kovbaska(base.context.kyrc)}üçå –æ–±—ã—á–Ω—ã—Ö –±–∞–Ω–∞–Ω–æ–≤.
üíé –í–∞—à–∏ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–µ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.dbananas)}
üêí –ü—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ: ${kovbaska(sell)}üçå
üìõ –ü—Ä–æ–¥–∞—Ç—å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–ø—Ä–æ–¥–∞—Ç—å –±–∞–Ω–∞–Ω—ã>>`)


})



updates.hear(/–ø—Ä–æ–¥–∞—Ç—å –±–∞–Ω–∞–Ω—ã$/i, (context) => {
let command = `–ø—Ä–æ–¥–∞—Ç—å –±–∞–Ω–∞–Ω—ã`
  let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.dbananas < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤, –¥–æ–±—ã—Ç—å –∏—Ö –º–æ–∂–Ω–æ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–∞–ª—å–º, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –∫—É–ø–∏—Ç—å ${sad}`)
let sell = user.dbananas
sell *= Number(base.context.kyrc)
sell = Math.floor(sell)
let colvo = user.dbananas
user.dbananas = Number(0)
user.bananas += Number(sell)
return context.send({message: `${nick}, –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${kovbaska(colvo)}üíé –∑–∞ ${kovbaska(sell)}üçå\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}`})

})


updates.hear(/–±–∞–Ω–∞–Ω (.*)/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let res = context.$match[1]
while(res.includes(`–∫`)){
  res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
  res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
  res = res.replace(`.`,``)
}
while(res.includes(`-`)){
  res = res.replace(`-`,``)
}
while(res.includes(`,`)){
  res = res.replace(`,`,``)
}
if(!Number(res)) return 
let colvo = Number(res)
let price = Number(res)
price *= Number(base.context.kyrc)
price = Math.floor(price)
if(user.bananas < Number(price)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç ${kovbaska(price)}üçå –¥–ª—è –ø–æ–∫—É–ø–∫–∏ ${kovbaska(colvo)}üíé ${sad}`)
user.bananas -= Number(price)
user.dbananas += Number(colvo)
return context.send(`${nick}, –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ ${kovbaska(colvo)}üíé –∑–∞ ${kovbaska(price)}üçå`)



})

updates.hear(/–±–∞–Ω–∞–Ω|–±–∞–Ω–∞–Ω—ã$/i, (context) => {
let command = `–±–∞–Ω–∞–Ω—ã`
  let quest = context.text.toLowerCase()
if(quest !== `${command}` && !quest !== `–±–∞–Ω–∞–Ω` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
  nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
  nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.dbananas < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö –±–∞–Ω–∞–Ω–æ–≤, –∏—Ö –º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å —Å –ø–∞–ª—å–º, –∏–ª–∏ –∫—É–ø–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: "–ë–∞–Ω–∞–Ω [–∫–æ–ª-–≤–æ]" ${sad}`)
return context.send(`${nick}, —É –í–∞—Å ${kovbaska(user.dbananas)}üíé\n‚úçüèª –í–≤–µ–¥–∏—Ç–µ "–ë–∞–Ω–∞–Ω [–∫–æ–ª-–≤–æ]" –¥–ª—è –ø–æ–∫—É–ø–∫–∏`)
})



updates.hear(/time/i, (context) => {

const now = new Date(); 
now.setHours(now.getHours() + (now.getTimezoneOffset()/60) + 3)
let date = `${now.toLocaleString()}`
const bb = new Date; 
var array = splitString(date, `,`);
var arraytwo = splitString(array[0], `/`);
context.send(`–î–∞—Ç–∞: ${arraytwo[1]}.${arraytwo[0]}.${arraytwo[2]} ${bb.getHours() + (bb.getTimezoneOffset()/60) + 3}:${bb.getMinutes() + (bb.getTimezoneOffset()/60) + 5}`)

})


updates.hear(/^(?:–æ—Ç–≤ ([0-9]+) (.*))$/i,(context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å ${sad}`)
let repid = context.$match[1]
if(!reports.reps[repid]) return context.send(`${nick}, —Ä–µ–ø–æ—Ä—Ç —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–ª–∏ –Ω–∞ –Ω–µ–≥–æ —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π ${sad}`)
vk.api.messages.send({user_id: reports.reps[repid].sender, message: `üîî *id${reports.reps[repid].sender} (${base.bs[reports.reps[repid].senderid].nick}), –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ <<${reports.reps[repid].text}>> –ø–æ—Å—Ç—É–ø–∏–ª –æ—Ç–≤–µ—Ç:\nüí¨ ${context.$match[2]}`})
delete reports.reps[repid]
return context.send(`${nick}, –æ—Ç–≤–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω ${cool}`)
})


updates.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç (.*))$/i,(context) => {

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.reportban == true) {
	let text = rand([`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–ø–æ—Ä—Ç—ã ${sad}`,`–≤–∞–º –∑–∞–ø—Ä–µ—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É ${sad}`,`—É –í–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ ${sad}`])
return context.send(`${nick}, ${text}`)
}
if(user.lsmessage !== false && user.lsmessage !== true) user.lsmessage = false
if(user.lsmessage == false) return context.send(`${nick}, –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–æ–≤ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å, –∏–Ω–∞—á–µ —Ç—ã –Ω–µ –ø–æ–ª—É—á–∏—à—å –æ—Ç–≤–µ—Ç ${cool}`)
let group = `–ì–†–£–ü–ü–ê`
if(context.isChat) group = `–ì–†–£–ü–ü–ê –í –ë–ï–°–ï–î–ï`
reports.lastid += Number(1)
let aa = base.id[context.senderId].id
reports.reps[reports.lastid] = {
	"senderid": aa,
	"text": context.$match[1],
	"sender": context.senderId
}
vk.api.messages.send({chat_id: adminchat, message: `[${group}]
üó£ –û—Ç–ø—Ä–∞–≤–∏–ª: ${context.senderId}
üîç –ò–≥—Ä–æ–≤–æ–π –∏–¥: ${base.id[context.senderId].id}
‚úè ID –∂–∞–ª–æ–±—ã: ${reports.lastid}
‚û° *id${context.senderId} (${base.bs[base.id[context.senderId].id].nick}): ${context.$match[1]}`})
return context.send(`${nick}, –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: ‚Ññ${reports.lastid} üëç`)

})


updates.hear(/deluxe$/i, (context) => {
	let command = `deluxe`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å ${sad}`)
return context.send(`${nick}, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Deluxe-–∏–≥—Ä–æ–∫–∞:
`)


})

updates.hear(/–∫–∞–∑–∏–Ω–æ (.*)/i, (context) => {
const { registerFont, createCanvas, loadImage } = require('canvas');
const canvas = createCanvas(1252, 1252); 
const ctx = canvas.getContext('2d'); 
const use_id = context.senderId; 
const Image = Canvas.Image;  

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let res = context.$match[1]
while(res.includes(`üé∞`)) {
	res = res.replace(`üé∞`,``)
}
while(res.includes(`üçå`)) {
	res = res.replace(`üçå`,``)
}
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}
if(!Number(res)) return
res = Number(res)
if(res < 1) return context.send(`${nick}, —Å—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ –±–∞–Ω–∞–Ω–∞ ${sad}`)
if(user.bananas < Number(res)) return context.send(`${nick}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤üçå –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ ${sad}`)

let chance = getRandomInRange(1, 100)
let r = 0
chance = Number(chance)
console.log(chance)
if(chance < 5) r = Number(0)
if(chance > 4 && chance < 40) r = Number(0.75)
if(chance > 39 && chance < 50) r = Number(0.50)
if(chance < 60 && chance > 49) r = Number(0.25)
if(chance > 59 && chance < 70) r = Number(1)
if(chance > 69 && chance < 75) r = Number(1.25)
if(chance > 74 && chance < 90) r = Number(2)
if(chance > 89 && chance < 99) r = Number(3)
if(chance == 100) r = Number(25) 
let one = ``
let two = ``
let three = ``
if(r == Number(0)) {
	one = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = rand([`baklagan.png`,`chese.png`])
}
if(r == Number(0.75)) {
	one = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	two = one
	three = rand([`baklagan.png`,`chese.png`])
}
if(r == Number(0.50)) {
	one = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	two = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	three = two
}
if(r == Number(0.25)) {
	two = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	three = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	one = three
}
if(r == Number(1)) {
	one = rand([`baklagan.png`,`chese.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = two
}
if(r == Number(1.25)) {
	one = rand([`baklagan.png`,`chese.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = one
}
if(r == Number(2)) {
	three = rand([`baklagan.png`,`chese.png`])
	two =rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	one = three
}
if(r == Number(3)) {
	one = rand([`ananas.png`, `kykypyza.png`,`klubnika.png`])
	two = one
	three = one
}

if(r == Number(25)) {
	one = `banan.png`
	two = one
	three = one
}
const img = new Image(); 
img.src = 'casino/casino.jpg'; 
ctx.drawImage(img, 0, 0)  

const imgs = new Image(); 
imgs.src = `casino/${one}`; 
ctx.drawImage(imgs, 365, 552)  

const imgz = new Image(); 
imgz.src = `casino/${two}`; 
ctx.drawImage(imgz, 564, 550)  

const imgg = new Image(); 
imgg.src = `casino/${three}`;
ctx.drawImage(imgg, 761, 550)  
let z = user.bananas

let x = user.bananas

let c = user.bananas

let v = user.bananas

let b = user.bananas

let n = user.bananas

z /= Number(4)
x /= Number(2)
c = Number(c)

v /= Number(12)
b /= Number(3)
n /= Number(1.5)
if(r == Number(0)) {
	user.bananas -= Number(res)
		return context.sendPhotos({ 
			value: canvas.toBuffer() 
			}, { 
			message: `${nick},\nüé≤ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${kovbaska(res)}üçå (x${r})\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`,  keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(z))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(x))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(c))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ],
      [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(v))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(b))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(n))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ]
     ])
     .inline(true)
	})


}
let text = ``
let prize = res
prize *= Number(r)
prize = Math.floor(prize)
if(r < 1) text = `–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${kovbaska(prize)}üçå`
if(r > 1) text = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${kovbaska(prize)}üçå`
if(r == 1) text = `–í–∞—à–∏ –±–∞–Ω–∞–Ω—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ –º–µ—Å—Ç–µ`

let smile = ``
if(r < 1) smile = `${sad}`
if(r > 1) smile = `${happy}`
if(r == 1) smile = `${cool}`

user.bananas -= Number(res) 
let o = res
if(r < 1) o -= Number(prize)
if(r > 1) o += Number(prize)
if(r == 1) p = Number(res)
user.bananas += Number(o)
return context.sendPhotos({ 
			value: canvas.toBuffer() 
			}, { 
			message: `${nick},\nüé≤ ${text} (x${r})\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`,  keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(z))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(x))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(c))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ],
      [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(v))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(b))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(n))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ]
     ])
     .inline(true)
	})
})


updates.hear(/üé∞ (.*)/i, (context) => {
const { registerFont, createCanvas, loadImage } = require('canvas');
const canvas = createCanvas(1252, 1252); 
const ctx = canvas.getContext('2d'); 
const use_id = context.senderId; 
const Image = Canvas.Image;  

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let res = context.$match[1]
while(res.includes(`üé∞`)) {
	res = res.replace(`üé∞`,``)
}
while(res.includes(`üçå`)) {
	res = res.replace(`üçå`,``)
}
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}
if(!Number(res)) return
res = Number(res)
if(res < 1) return context.send(`${nick}, —Å—Ç–∞–≤–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ –±–∞–Ω–∞–Ω–∞ ${sad}`)
if(user.bananas < Number(res)) return context.send(`${nick}, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–∞–Ω–æ–≤üçå –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ ${sad}`)

let chance = getRandomInRange(1, 100)
let r = 0
chance = Number(chance)
console.log(chance)
if(chance < 5) r = Number(0)
if(chance > 4 && chance < 40) r = Number(0.75)
if(chance > 39 && chance < 50) r = Number(0.50)
if(chance < 60 && chance > 49) r = Number(0.25)
if(chance > 59 && chance < 70) r = Number(1)
if(chance > 69 && chance < 75) r = Number(1.25)
if(chance > 74 && chance < 90) r = Number(2)
if(chance > 89 && chance < 99) r = Number(3)
if(chance == 100) r = Number(25) 
let one = ``
let two = ``
let three = ``
if(r == Number(0)) {
	one = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = rand([`baklagan.png`,`chese.png`])
}
if(r == Number(0.75)) {
	one = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	two = one
	three = rand([`baklagan.png`,`chese.png`])
}
if(r == Number(0.50)) {
	one = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	two = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	three = two
}
if(r == Number(0.25)) {
	two = rand([`ananas.png`, `banan.png`, `kykypyza.png`,`klubnika.png`])
	three = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	one = three
}
if(r == Number(1)) {
	one = rand([`baklagan.png`,`chese.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = two
}
if(r == Number(1.25)) {
	one = rand([`baklagan.png`,`chese.png`])
	two = rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	three = one
}
if(r == Number(2)) {
	three = rand([`baklagan.png`,`chese.png`])
	two =rand([`vinogradik.png`,`avocado.png`,`gribok.png`])
	one = three
}
if(r == Number(3)) {
	one = rand([`ananas.png`, `kykypyza.png`,`klubnika.png`])
	two = one
	three = one
}

if(r == Number(25)) {
	one = `banan.png`
	two = one
	three = one
}
const img = new Image(); 
img.src = 'casino/casino.jpg'; 
ctx.drawImage(img, 0, 0)  

const imgs = new Image(); 
imgs.src = `casino/${one}`; 
ctx.drawImage(imgs, 365, 552)  

const imgz = new Image(); 
imgz.src = `casino/${two}`; 
ctx.drawImage(imgz, 564, 550)  

const imgg = new Image(); 
imgg.src = `casino/${three}`;
ctx.drawImage(imgg, 761, 550)  
let z = user.bananas

let x = user.bananas

let c = user.bananas

let v = user.bananas

let b = user.bananas

let n = user.bananas

z /= Number(4)
x /= Number(2)
c = Number(c)

v /= Number(12)
b /= Number(3)
n /= Number(1.5)
if(r == Number(0)) {
	user.bananas -= Number(res)
	return context.sendPhotos({ 
			value: canvas.toBuffer() 
			}, { 
			message: `${nick},\nüé≤ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${kovbaska(res)}üçå (x${r})\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`,  keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(z))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(x))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(c))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ],
      [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(v))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(b))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(n))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ]
     ])
     .inline(true)
	})


}
let text = ``
let prize = res
prize *= Number(r)
prize = Math.floor(prize)
if(r < 1) text = `–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${kovbaska(prize)}üçå`
if(r > 1) text = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${kovbaska(prize)}üçå`
if(r == 1) text = `–í–∞—à–∏ –±–∞–Ω–∞–Ω—ã –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ –º–µ—Å—Ç–µ`

let smile = ``
if(r < 1) smile = `${sad}`
if(r > 1) smile = `${happy}`
if(r == 1) smile = `${cool}`

user.bananas -= Number(res) 
let o = res
if(r < 1) o -= Number(prize)
if(r > 1) o += Number(prize)
if(r == 1) p = Number(res)
user.bananas += Number(o)
return context.sendPhotos({ 
			value: canvas.toBuffer() 
			}, { 
			message: `${nick},\nüé≤ ${text} (x${r})\n${cool} –í–∞—à–∏ –±–∞–Ω–∞–Ω—ã: ${kovbaska(user.bananas)}üçå`,  keyboard: Keyboard.keyboard([
     [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(z))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(x))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(c))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ],
      [
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(v))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(b))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            }),
            Keyboard.textButton({ 
            label: `üé∞ ${kovbaska(Math.trunc(n))}üçå`, 
            color: Keyboard.SECONDARY_COLOR,
            })
      ]
     ])
     .inline(true)
	})
})





// üçìüåΩüçåüçç

// COMMANDS //

updates.hear(/–ø–æ–º–æ—â—å|–ø–æ–º–∞—â—å|–∫–∞–º–∞–Ω–¥—ã|–∫–æ–º–∞–Ω–¥—ã|help$/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}


return context.send(`${nick}, –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
üìí –ü—Ä–æ—Ñ–∏–ª—å
üçå –ë–∞–ª–∞–Ω—Å
üêí –õ–∞–∑–∞—Ç—å
üå≤ –ü–æ—Ö–æ–¥
üëÆ –í–æ—Ä–æ–≤–∞—Ç—å
üíé –ë–æ–Ω—É—Å
üéÆ –ù–∏–∫ [–Ω–∏–∫/–≤–∫–ª/–≤—ã–∫–ª]
üì¶ –°–∫–ª–∞–¥ [—Å—É–º–º–∞/—Å–Ω—è—Ç—å —Å—É–º–º–∞]
üí∏ –ü—Ä–æ–¥–∞—Ç—å [–ø—Ä–µ–¥–º–µ—Ç]

üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫:
‚†Ä‚†Äüå¥ –ü–∞–ª—å–º–∞ - –±–∞–Ω–∞–Ω–æ–≤–∞—è –ø–∞–ª—å–º–∞

üöÄ –ò–≥—Ä—ã:
‚†Ä‚†Äüé∞ –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]
‚†Ä‚†Äüé≤ –ö—É–±–∏–∫ [—á–∏—Å–ª–æ 1-6]
‚†Ä‚†Äü•õ –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞]
‚†Ä‚†Äüñº –†–∏—Å—É–Ω–æ–∫
‚†Ä‚†Äüì¶ –°—É–Ω–¥—É–∫–∏

üì± –ö–Ω–æ–ø–∫–∏ [–≤–∫–ª/–≤—ã–∫–ª] - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
üÜò –†–µ–ø–æ—Ä—Ç [—Ñ—Ä–∞–∑–∞] - –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è`)



})


/// COMMANDS ///

/// SHOP ///

updates.hear(/–ø—Ä–æ–¥–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä/i, (context) => {
let command = `–ø—Ä–æ–¥–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.computerid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–∫–æ–º–ø—å—é—Ç–µ—Ä—ã>> ${sad}`)
let task = user.computerid
for(let o in cars){
if(computers[o].id == task) {
	user.computerid = Number(0)
	user.computername = ``
	let price = computers[o].cost
	price /= Number(2)
	price = Math.floor(price)
	user.bananas += Number(price)
	return context.send(`${nick}, –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä: <<${computers[o].name}>> –∑–∞ ${kovbaska(price)}üçå`)
}
}	



})

updates.hear(/–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É|–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω–∞/i, (context) => {
let command = `–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω–∞` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.carid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–º–∞—à–∏–Ω—ã>> ${sad}`)
if(user.carid == 28) {
	user.dcoins += Number(250)
	user.carname = ``
	user.carid = 0
	user.fuel = 0

	return context.send(`${nick}, –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –º–∞—à–∏–Ω—É: <<${cars[27].name}>> –∑–∞ 250üè∑ DCOINS`) 
}
let task = user.carid
for(let o in cars){
if(cars[o].id == task) {
	user.carid = Number(0)
	user.carname = ``
	let price = cars[o].cost
	price /= Number(2)
	price = Math.floor(price)
	user.bananas += Number(price)
	return context.send(`${nick}, –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –º–∞—à–∏–Ω—É: <<${cars[o].name}>> –∑–∞ ${kovbaska(price)}üçå`)
}
}	



})

updates.hear(/–º–∞—à–∏–Ω–∞ ([0-9]+)/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(context.$match[1] == 28) {
if(user.dcoins < 500) return context.send({message:`${nick}, —Ç–µ–±–µ –Ω—É–∂–Ω–æ 500üè∑Ô∏è DCOINS, –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã ${sad}`, attachment: `product-189321788_4169734`})
user.dcoins -= Number(500)
user.carid = 28
user.carname = cars[27].name
user.fuel = cars[27].fuel
return context.send(`${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É <<${cars[27].name}>> –∑–∞ 500üè∑Ô∏è, –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ <<–º–∞—à–∏–Ω–∞>>üöó\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë –≤ –≥–æ–Ω–∫–∞—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –±–∞–Ω–∞–Ω–æ–≤ –∏ –æ–ø—ã—Ç–∞! ${happy}`)
}
if(user.carid > 0) return context.send(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ (${user.carname})! ${happy}
—á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É¬ª`)
if(context.$match[1] < 1 || context.$match[1] > 27) return context.send(`${nick}, —Ç–∞–∫–æ–π –º–∞—à–∏–Ω—ã –Ω–µ—Ç ${sad}`)
let task = context.$match[1]
let err = `–¥–∞–Ω–Ω—É—é –º–∞—à–∏–Ω—É`
for(let o in cars){
if(cars[o].id == task){
	if(user.xp < cars[o].xp) return context.send(`${nick}, –≤–∞–º –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å ${kovbaska(cars[o].xp)} –æ–ø—ã—Ç–∞, —á—Ç–æ–±—ã –∏–º–µ—Ç—å ${err} ${sad}\n‚ô® –í–∞—à –æ–ø—ã—Ç: ${kovbaska(user.xp)}`)
	if(user.bananas < Number(cars[o].cost)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–Ω–∞–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã ${sad}`)
	user.bananas -= Number(cars[o].cost)
	user.carid = cars[o].id
	user.carname = cars[o].name
	user.fuel = cars[o].fuel
	return context.send(`${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É <<${cars[o].name}>> –∑–∞ ${kovbaska(cars[o].cost)}üçå, –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ <<–º–∞—à–∏–Ω–∞>>üöó\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë –≤ –≥–æ–Ω–∫–∞—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –±–∞–Ω–∞–Ω–æ–≤ –∏ –æ–ø—ã—Ç–∞! ${happy}`)

}
}



})


updates.hear(/–∫–æ–º–ø—å—é—Ç–µ—Ä ([0-9]+)/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.computerid > 0) return context.send(`—É –í–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä (${user.computername})! ${happy}
—á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ—ë –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´–ü—Ä–æ–¥–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä`)
if(context.$match[1] < 1 || context.$match[1] > 27) return context.send(`${nick}, —Ç–∞–∫–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –Ω–µ—Ç ${sad}`)
let task = context.$match[1]
let err = `–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä`
for(let o in computers){
if(computers[o].id == task){
	if(user.xp < computers[o].xp) return context.send(`${nick}, –≤–∞–º –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å ${kovbaska(computers[o].xp)} –æ–ø—ã—Ç–∞, —á—Ç–æ–±—ã –∏–º–µ—Ç—å ${err} ${sad}\n‚ô® –í–∞—à –æ–ø—ã—Ç: ${kovbaska(user.xp)}`)
	if(user.bananas < Number(computers[o].cost)) return context.send(`${nick}, —É –í–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–Ω–∞–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã ${sad}`)
	user.bananas -= Number(computers[o].cost)
	user.computerid = computers[o].id
	user.computername = computers[o].name
	user.fuel = computers[o].fuel
	return context.send(`${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä <<${computers[o].name}>> –∑–∞ ${kovbaska(computers[o].cost)}üçå ${happy}`)

}
}



})

updates.hear(/–º–∞—à–∏–Ω—ã$/i, (context) => {
let command = `–º–∞—à–∏–Ω—ã`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let text = ``
for(let o in cars){
     if(cars[o].id < 28){
	text += `\nüî∏ ${cars[o].id}.${cars[o].name} - ${kovbaska(cars[o].cost)}üçå`
}
}
text += `\nüî∏ 28.${cars[27].name} - 500üè∑Ô∏è DCOINS.`
return context.send(`${nick}, –º–∞—à–∏–Ω—ã: ${text}\n\nüêí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–º–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]¬ª`)


})

updates.hear(/–∫–æ–º–ø—å—é—Ç–µ—Ä—ã$/i, (context) => {
let command = `–∫–æ–º–ø—å—é—Ç–µ—Ä—ã`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let text = ``
for(let o in computers){
	text += `\nüî∏ ${computers[o].id}.${computers[o].name} - ${kovbaska(computers[o].cost)}üçå`
}
return context.send(`${nick}, –∫–æ–º–ø—å—é—Ç–µ—Ä—ã: ${text}\n\nüêí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ ¬´–∫–æ–º–ø—å—é—Ç–µ—Ä [–Ω–æ–º–µ—Ä]¬ª`)


})


updates.hear(/–º–∞—à–∏–Ω–∞$/i, (context) => {
let command = `–º–∞—à–∏–Ω–∞`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.carid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–º–∞—à–∏–Ω—ã>> ${sad}`)
let tfuel = ``
for(let o in cars){
	if(cars[o].id == user.carid) {
		tfuel = `‚õΩ –ë–µ–Ω–∑–∏–Ω–∞: ${(Number(user.fuel) / Number(cars[o].fuel) * Number(100)).toFixed(2)}% (${user.fuel}/${cars[o].fuel}–ª)`
		if(cars[o].fuel > 0) {
			if(user.fuel < Number(cars[o].fuel)) {
				tfuel += `\nüçî –ó–∞–ø—Ä–∞–≤–∏—Ç—å –º–∞—à–∏–Ω—É –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–±–µ–Ω–∑–∏–Ω>>`
			}
		}
		if(cars[o].fuel < 1) {
			tfuel = `‚õΩ –í–∞—à–µ–º—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É –Ω–µ –Ω—É–∂–µ–Ω –±–µ–Ω–∑–∏–Ω.`
		}

	}
}
return context.send({message: `${nick}, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–π –º–∞—à–∏–Ω–µ: <<${user.carname}>>\n${tfuel}\nüèÖ –í—Å–µ–≥–æ –ø–æ–±–µ–¥ –≤ –≥–æ–Ω–∫–∞—Ö: ${user.carwins}`, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: 'üöò –ì–æ–Ω–∫–∞', 
            color: Keyboard.PRIMARY_COLOR
            })            
      ],
      [      Keyboard.textButton({ 
            label: '‚õΩ –ë–µ–Ω–∑–∏–Ω', 
            color: Keyboard.NEGATIVE_COLOR
            })    
       ]        
   ]).inline(true)
  }) 
})

updates.hear(/–≥–æ–Ω–∫–∞$/i, (context) => {
let command = `–≥–æ–Ω–∫–∞`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`üöò`) && !context.text.includes(`/`) && !context.text.includes(`üèÅ`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.carid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–º–∞—à–∏–Ω—ã>> ${sad}`)
let maxfuel = 0
for(let o in cars){
	if(cars[o].id == user.carid) {
		maxfuel = Number(cars[o].fuel)
	}
}
if(user.fuel < 1 && maxfuel !== 0) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –±–µ–Ω–∑–∏–Ω–∞, –∫—É–ø–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: ¬´–±–µ–Ω–∑–∏–Ω¬ª ${sad}`)
if(user.gonka > 0) return context.send(`${nick}, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≥–æ–Ω–∫–∞ ${sad}`)
let send = getRandomInRange(1, 3)
let sticker = rand([12680,12689,12695,12702,12705,12707,12708,12709])
let gonka = getRandomInRange(1, 3)
setTimeout(() => user.gonka = Number(1000), 1000)
let benzin = ``
if(maxfuel > 0) {
let zatrata = getRandomInRange(1, 25)
if(zatrata > user.fuel){
zatrata = user.fuel
}
if(zatrata < 1) zatrata = Number(0)
user.fuel -= Number(zatrata)
benzin = `‚õΩ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –±–µ–Ω–∑–∏–Ω–∞: ${zatrata} –ª.`
}

if(gonka == 1){
let gonkaphoto = `photo-189321788_457239036`
let km = getRandomInRange(5, 50)
km *= Number(user.carid)
let vragkm = getRandomInRange(80, 220)
let checker = 0
if(km > vragkm) {
checker = km
checker -= Number(vragkm)
}
if(vragkm > km){
checker = vragkm
checker -= Number(km)
}
context.send({message: `üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...\nü§∏ –í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: –ê–ª–∏—à–µ—Ä –ú–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω\nüöò –ú–∞—à–∏–Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: Mercedes-Benz E200`, attachment: gonkaphoto})
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`), 1500)
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—ã...`), 3000)
if(send == 1) {
setTimeout(() => context.sendSticker(sticker), 4500)
}
if(send !== 1){
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...`), 4500)
}
setTimeout(() => user.gonka = 0, 6000)

if(vragkm > km){
setTimeout(() => context.send(`üèÅ –ê–ª–∏—à–µ—Ä –ú–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω –ø–æ–±–µ–¥–∏–ª ${nick}\n${benzin}`), 7000)
}
if(km > vragkm){
user.carwins += Number(1)
let pluskarma = getRandomInRange(1, 25)
pluskarma *= Number(user.carid)
user.karma += Number(pluskarma)
let plusbananas = getRandomInRange(100, 5000)
plusbananas *= Number(user.carid)
user.bananas += Number(plusbananas)
let plusxp = getRandomInRange(1, 7)
plusxp *= Number(user.carid)
user.xp += Number(plusxp)
setTimeout(() => context.send(`üèÅ ${nick} –ø–æ–±–µ–¥–∏–ª –ê–ª–∏—à–µ—Ä–∞ –ú–æ—Ä–≥–µ–Ω—à—Ç–µ—Ä–Ω–∞\nüéñÔ∏è–ü—Ä–∏–∑—ã: +${kovbaska(pluskarma)}üç•, +${kovbaska(plusbananas)}üçå, +${kovbaska(plusxp)}‚≠ê –æ–ø—ã—Ç–∞.\n${benzin}`), 7000)
}
}
if(gonka == 2){
let gonkaphoto = `photo-189321788_457239037`
let km = getRandomInRange(5, 50)
km *= Number(user.carid)
let vragkm = getRandomInRange(45, 180)
let checker = 0
if(km > vragkm) {
checker = km
checker -= Number(vragkm)
}
if(vragkm > km){
checker = vragkm
checker -= Number(km)
}
context.send({message: `üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...\nü§∏ –í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: –ì—É—Å–µ–π–Ω –ì–∞—Å–∞–Ω–æ–≤\nüöò –ú–∞—à–∏–Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: Mercedes-Benz G-Class G 350 BlueTEC`, attachment: gonkaphoto})
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`), 1500)
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—ã...`), 3000)
if(send == 1) {
setTimeout(() => context.sendSticker(sticker), 4500)
}
if(send !== 1){
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...`), 4500)
}
setTimeout(() => user.gonka = 0, 6000)

if(vragkm > km){
setTimeout(() => context.send(`üèÅ –ì—É—Å–µ–π–Ω –ì–∞—Å–∞–Ω–æ–≤ –ø–æ–±–µ–¥–∏–ª ${nick}\n${benzin}`), 7000)
}
if(km > vragkm){
user.carwins += Number(1)
let pluskarma = getRandomInRange(1, 20)
pluskarma *= Number(user.carid)
user.karma += Number(pluskarma)
let plusbananas = getRandomInRange(100, 5000)
plusbananas *= Number(user.carid)
user.bananas += Number(plusbananas)
let plusxp = getRandomInRange(1, 5)
plusxp *= Number(user.carid)
user.xp += Number(plusxp)
setTimeout(() => context.send(`üèÅ ${nick} –ø–æ–±–µ–¥–∏–ª –ì—É—Å–µ–π–Ω –ì–∞—Å–∞–Ω–æ–≤–∞\nüéñÔ∏è–ü—Ä–∏–∑—ã: +${kovbaska(pluskarma)}üç•, +${kovbaska(plusbananas)}üçå, +${kovbaska(plusxp)}‚≠ê –æ–ø—ã—Ç–∞.\n${benzin}`), 7000)
}
}
if(gonka == 3){
let rcar = getRandomInRange(1, 28)
km = getRandomInRange(1, 50)
km *= Number(user.carid)
let vragkm = getRandomInRange(1, 50)
vragkm *= Number(rcar)
vragcar = ``
for(let o in cars){
if(cars[o].id == rcar){
vragcar = cars[o].name
}
}
let checker = 0
if(km > vragkm) {
checker = km
checker -= Number(vragkm)
}
if(vragkm > km){
checker = vragkm
checker -= Number(km)
}
let coolname = rand([`–ì–æ–Ω—â–∏–∫ –ù–µ–ª–µ–≥–∞–ª—å–Ω—ã–π`,`–í–æ–¥–∏—Ç–µ–ª—å –ú—É—Å–æ—Ä–æ–≤–æ–∑–∞`,`–í–∞—Ä—Ñ–∞–ª–æ–º–µ–π –¶—É–∫–µ—Ä–º–∞–Ω`,`–ü—å—è–Ω—ã–π –í–æ–¥–∏—Ç–µ–ª—å`,`–¢–∞—Ä–∞—Å –ë—É–ª—å–±–∞`,`–ü–æ–¥–ø–∏—Å—á–∏–∫ –ò–≤–∞–Ω–≥–∞—è`,`–ù—É–±–∏–∫ –ú–∞–π–∫–Ω—Ä–∞—Ñ—Ç`])
context.send({message: `üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...\nü§∏ –í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: ${coolname}\nüöò –ú–∞—à–∏–Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: ${vragcar}`})
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...`), 1500)
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—ã...`), 3000)
if(send == 1) {
setTimeout(() => context.sendSticker(sticker), 4500)
}
if(send !== 1){
setTimeout(() => context.send(`üèÅ –ì–æ–Ω–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...`), 4500)
}
setTimeout(() => user.gonka = 0, 6000)

if(vragkm > km){
setTimeout(() => context.send(`üèÅ ${coolname} –ø–æ–±–µ–¥–∏–ª ${nick}\n${benzin}`), 7000)
}
if(km > vragkm){
user.carwins += Number(1)
let pluskarma = getRandomInRange(1, 5)
pluskarma *= Number(rcar)
pluskarma *= Number(user.carid)
user.karma += Number(pluskarma)
let plusbananas = getRandomInRange(100, 500)
plusbananas *= Number(rcar)
plusbananas *= Number(user.carid)
user.bananas += Number(plusbananas)
let plusxp = getRandomInRange(1, 2)
plusxp *= Number(rcar)
plusxp *= Number(user.carid)
user.xp += Number(plusxp)
setTimeout(() => context.send(`üèÅ ${nick} –ø–æ–±–µ–¥–∏–ª ¬´${coolname}¬ª\nüéñÔ∏è–ü—Ä–∏–∑—ã: +${kovbaska(pluskarma)}üç•, +${kovbaska(plusbananas)}üçå, +${kovbaska(plusxp)}‚≠ê –æ–ø—ã—Ç–∞.\n${benzin}`), 7000)
}
}
})

updates.hear(/–±–µ–Ω–∑–∏–Ω$/i, (context) => {
let command = `–±–µ–Ω–∑–∏–Ω`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`‚õΩ`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.carid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–º–∞—à–∏–Ω—ã>> ${sad}`)
let maxfuel = 0
let fuel = user.fuel
for(let o in cars) {
if(cars[o].id ==user.carid){
if(cars[o].fuel < 1) return context.send(`${nick}, –≤–∞—à–µ–º—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É –Ω–µ –Ω—É–∂–µ–Ω –±–µ–Ω–∑–∏–Ω ${sad}`)
maxfuel = cars[o].fuel
}
}
if(fuel == maxfuel) return context.send(`${nick}, –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–ø—Ä–∞–≤–ª–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ ${happy}`)
let need = maxfuel
need -= Number(fuel)
if(need < 1) return context.send(`${nick}, –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–ø—Ä–∞–≤–ª–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ ${happy}`)
let price = Number(need)
price *= Number(2500)
nexvataet = user.bananas
nexvataet -= Number(price)
if(user.bananas < price) return context.send(`${nick}, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ${kovbaska(nexvataet)}üçå –±–∞–Ω–∞–Ω–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ ‚õΩ ${need} –ª–∏—Ç—Ä–æ–≤ –±–µ–Ω–∑–∏–Ω–∞ ${sad}`)
user.bananas -= Number(price)
user.fuel = Number(maxfuel)
return context.send(`${nick}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—Ä–∞–≤–∏–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –Ω–∞ ${need} –ª–∏—Ç—Ä–æ–≤ –∑–∞ ${kovbaska(price)}üçå –±–∞–Ω–∞–Ω–æ–≤ ${happy}`)


})

updates.hear(/–ø—Ä–æ–¥–∞—Ç—å (.*)/i, (context) => {
let platform = false
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let text = `${nick}, –ø—Ä–µ–¥–º–µ—Ç <<${context.$match[1]}>> - –Ω–µ –Ω–∞–π–¥–µ–Ω ${sad}`
let task = ``
let req = context.$match[1]
if(req.includes(`–ø–∞–ª—å–º`)) task += `/–ø–∞–ª—å–º—ã`
if(req.includes(`–±–∏—Ç–∫`) || req.includes(`–±—Ä–∏–ª–ª`) || req.includes(`–±–∞–Ω`)) task += `/–±–∞–Ω–∞–Ω—ã`
if(req.includes(`–º–∞—à`)) task += `/–º–∞—à–∏–Ω–∞`
if(req.includes(`–∫–æ–º`)) task += `/–∫–æ–º–ø—å—é—Ç–µ—Ä`
if(task !== ``) {
	task = task.replace(`/`,``)
	text += `\n\nüßê –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–æ–¥–∞—Ç—å —ç—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: ${task}`
}
return context.send(`${text}`)

})

updates.hear(/–±–µ–Ω–∑–∏–Ω$/i, (context) => {
let command = `–±–µ–Ω–∑–∏–Ω`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.carid < 1) return context.send(`${nick}, —É –í–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: <<–º–∞—à–∏–Ω—ã>> ${sad}`)

})

updates.hear(/—Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞$/i, (context) => {
let command = `—Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`‚ùé`) && !context.text.includes(`@`) && !context.text.includes(`/`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.designlvl == Number(0) || user.designlvl == Number(1)) return
let gg = user.designlvl
user.designlvl = Number(1)
return context.send({message: `${nick}, —Ç–µ–º–∞: ¬´${gg}¬ª -> –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùé\n‚úçÔ∏è –û—Ç–ø—Ä–∞–≤—å: ¬´—Ä–∏—Å—É–Ω–æ–∫¬ª, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É.`, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: 'üìº —Ä–∏—Å—É–Ω–æ–∫', 
            color: Keyboard.POSITIVE_COLOR
            })            
      ]
   ]).inline(true)
  }) 
})

updates.hear(/([1-5])‚≠ê$/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 4) return
if(context.chatId !== adminchat) return
if(context.messagePayload.type == `design`) {
let d = context.messagePayload.id
let rate = context.$match[1]
let o = context.messagePayload.quest
if(!design.wait[d]) return context.send(`${nick}, —Ç—ã –æ–ø–æ–∑–¥–∞–ª, —ç—Ç–æ—Ç —Ä–∏—Å—É–Ω–æ–∫ —É–∂–µ –æ—Ü–µ–Ω–∏–ª –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π üêí`)
mnog = rate
if(rate < 2) mnog = 0
let karma = getRandomInRange(1, 25)
let bananas = getRandomInRange(1, 500)
let dcoin = getRandomInRange(0, 2)
karma *= Number(mnog)
bananas *= Number(mnog)
dcoin *= Number(mnog)
let task = base.bs[design.wait[d].senderid]
task.karma += Number(karma)
task.dcoins += Number(dcoin)
task.bananas += Number(bananas)
vk.api.messages.send({user_id: design.wait[d].sender, message: `${nick}, –≤–∞—à —Ä–∏—Å—É–Ω–æ–∫ –ø–æ —Ç–µ–º–µ: ¬´${o}¬ª –±—ã–ª –æ—Ü–µ–Ω—ë–Ω –Ω–∞ ${rate}/5‚≠ê, –≤—ã –ø–æ–ª—É—á–∏–ª–∏: +${kovbaska(bananas)}üçå, +${kovbaska(karma)}üç•, +${kovbaska(dcoin)}üéüÔ∏è`})
delete design.wait[d]
return context.send(`${nick}, –æ—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞! ${happy}`)
}


})
updates.hear(/—Ä–∏—Å—É–Ω–æ–∫$/i, (context) => {
 let command = `—Ä–∏—Å—É–Ω–æ–∫`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && !context.text.includes(`üìº`) && !context.text.includes(`@`) && !context.text.includes(`/`) && !context.text.includes(`üñº`)) return

if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let task = user.designlvl
if(task == 0){
user.designlvl = Number(1)
return context.send({message: `${nick}, –ø—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–∂–∏–º: <<—Ö—É–¥–æ–∂–Ω–∏–∫–∞>> –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ? ü§î\nüñºÔ∏è –≠—Ç–æ –∫–æ–≥–¥–∞ —è - –ø—Ä–∏—Å—ã–ª–∞—é —Ç–µ–±–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞–∫–æ–µ –Ω–∏–±—É–¥—å –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ (–≤ –≤–∫) –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é —Ç–µ–º—É.\nüç≥  –ó–∞ —Å–≤–æ–∏ —Ä–∏—Å—É–Ω–∫–∏ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –±–∞–Ω–∞–Ω—ã, –æ–ø—ã—Ç, –∫–∞—Ä–º—É –∏ –¥–∞–∂–µ –¥–æ–Ω–∞—Ç –≤–∞–ª—é—Ç—É! ü§Ø
üíª –ß–µ–º –ª—É—á—à–µ —É —Ç–µ–±—è –∫–æ–º–ø—å—é—Ç–µ—Ä , –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø–ª–∞–Ω—à–µ—Ç –∏ –¥—Ä—É–≥–∏–µ –≥–∞–¥–∂–µ—Ç—ã - —Ç–µ–º –±–æ–ª—å—à–µ –ø—Ä–∏–∑–æ–≤ üçå
üìº –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É: ¬´—Ä–∏—Å—É–Ω–æ–∫¬ª, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.`, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: 'üìº —Ä–∏—Å—É–Ω–æ–∫', 
            color: Keyboard.POSITIVE_COLOR
            })            
      ],
      [      Keyboard.textButton({ 
            label: 'üõí –ú–∞–≥–∞–∑–∏–Ω', 
            color: Keyboard.PRIMARY_COLOR
            })
       ]    
   ]).inline(true)
  }) 
}
if(user.designlvl == Number(1)){
let bb =  rand([`–°–∫–æ–≤–æ—Ä–æ–¥–∫–∞`,`–Ø–∏—á–Ω–∏—Ü–∞`,`–ö–æ–ª–±–∞—Å–∞`,`–¢–æ—Ä—Ç`,`–ö–∞–º–µ–Ω—å`,`–ú—è—á`,`–ú–µ—á`,`–ß–µ–ª–æ–≤–µ–∫`,`–ü—Ä–∏—Ä–æ–¥–∞`,`–ë–∞–Ω–∞–Ω`,`–ê—Ä–±—É–∑`,`–ì–æ—Ä–∏–ª–ª–∞`,`–ú–µ–¥—É–∑–∞`,`–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫`,`–ê–Ω–∞–Ω–∞—Å`,`–õ—É–Ω–∞`,`–°–æ–ª–Ω—Ü–µ`])
user.designlvl = `${bb}`
return context.send({message: `${nick}, —Ç–µ–±–µ –¥–∞–Ω–æ –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ! üêí\nüñºÔ∏è –ù–∞—Ä–∏—Å—É–π –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ç–µ–º–µ: ¬´${bb}¬ª\n‚úçÔ∏è –ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –∑–∞–¥–∞–Ω–Ω–∞—è —Ç–µ–º–∞, –æ—Ç–ø—Ä–∞–≤—å: ¬´—Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞¬ª 
\nü§î –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –Ω–∞ ¬´–≥—Ä–∞—Ñ—Ñ–∏—Ç–∏¬ª (–ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ —ç—Ç–æ–º –¥–∏–∞–ª–æ–≥–µ) –Ω–∞—Ä–∏—Å—É–π –µ–≥–æ, –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞ ¬´—Ä–∏—Å—É–Ω–æ–∫¬ª, –ø—Ä–∏–∫—Ä–µ–ø–∏ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–æ–π –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å üëè`, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: '‚ùé —Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞', 
            color: Keyboard.NEGATIVE_COLOR
            })            
      ]
   ]).inline(true)
  }) 




}
if(!context.payload.message.attachments[0]) return context.send(`${nick}, —Ç—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ –ø–æ —Ç–µ–º–µ: ¬´${user.designlvl} ${sad}¬ª\n‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ: ¬´—Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–µ–ª–∞—Ç—å —Ä–∏—Å—É–Ω–æ–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ üñºÔ∏è`)
if(context.payload.message.attachments[0].type == `graffiti`) {
if(context.isChat) return context.send(`${nick}, –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –±–µ—Å–µ–¥–∞—Ö, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ${cool}`)
design.id += Number(1)
design.wait[design.id] = {
"sender": context.senderId,
"senderid": base.id[context.senderId].id
}
let o = user.designlvl
user.designlvl = Number(1)

context.send({forward_messages: context.id, message: `${nick} ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–ª —Ä–∏—Å—É–Ω–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Ç–µ–º–µ: ¬´${o}¬ª! üñºÔ∏è\nü§î –ü—Ä–æ—Å—å–±–∞: –æ—Ü–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Ä–∏—Å—É–Ω–æ–∫ , –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏`, peer_id: 2000000001, keyboard: Keyboard.keyboard([  
      [ 
            Keyboard.textButton({ 
            label: '1‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 1,
            "quest": o
             },
            color: Keyboard.NEGATIVE_COLOR
            }),
           Keyboard.textButton({ 
            label: '2‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 2,
            "quest": o
             },
            color: Keyboard.NEGATIVE_COLOR
            })
      ],
      [      
           Keyboard.textButton({ 
            label: '3‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 3,
            "quest": o
             },
            color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({ 
            label: '4‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 3,
            "quest": o
             },
            color: Keyboard.PRIMARY_COLOR
            })
       ],
      [
           Keyboard.textButton({ 
            label: '5‚≠ê', 
            payload: {
            "type": "design",
            "id": design.id,
            "rate": 4,
            "quest": o
             },
            color: Keyboard.POSITIVE_COLOR
            })
      ]  
   ]).inline(true)
  }) 
return context.send(`${nick}, –≤–∞—à —Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–∫–æ—Ä–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∑–∞ –Ω–µ–≥–æ –ø—Ä–∏–∑—ã üñºÔ∏è\n‚úçÔ∏è –ú–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å: ¬´—Ä–∏—Å—É–Ω–æ–∫¬ª –∏ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –Ω–æ–≤–æ–º—É —Ä–∏—Å—É–Ω–∫—É.`)
}
return context.send(`${nick}, —Ç—ã –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–∏–ª –≥—Ä–∞—Ñ—Ñ–∏—Ç–∏ –ø–æ —Ç–µ–º–µ: ¬´${user.designlvl} ${sad}¬ª\n‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ: ¬´—Ä–∏—Å—É–Ω–æ–∫ –æ—Ç–º–µ–Ω–∞¬ª, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–µ–ª–∞—Ç—å —Ä–∏—Å—É–Ω–æ–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ üñºÔ∏è`)

})


updates.hear(/–ø–æ—Ö–æ—Ä–æ–Ω–∏—Ç—å (.*)$/i, async (context) => {
	let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
let chit = context.$match[1]


	if (context.forwards[0]) {

			context.send(`–°–µ–∫—É–Ω–¥–æ—á–∫—É, –¥–µ–ª–∞—é —Ñ–æ—Ç–æ...`)
			const use_id = context.forwards[0].senderId;
			const Image = Canvas.Image;
			const [ava_info] = await vk.api.users.get({
				user_id: use_id,
				fields: "photo_200"
			});

			const [user_info] = await vk.api.users.get({
				user_id: use_id
			});

			const img = new Image();
			img.src = 'nadg.png';
			ctx.drawImage(img, 0, 0);

			ctx.font = '30px Sans';
			ctx.fillStyle = "#F4ECD2";
			ctx.fillText(`${user_info.first_name}`, 220, 310);

			ctx.font = '30px Sans';
			ctx.fillStyle = "#D8A903";
			ctx.fillText(`${chit}`, 220, 310);
			ctx.fillText(`¬´${chit.match(/.{1,15}/g).join("\n")}¬ª`, 220, 310);
			const mychit = await loadImage(ava_info.photo_200);
			ctx.drawImage(mychit, 215, 60);

			return context.sendPhotos(canvas.toBuffer());
		}
		if (context.replyMessage) {

			context.send(`–°–µ–∫—É–Ω–¥–æ—á–∫—É, –¥–µ–ª–∞—é —Ñ–æ—Ç–æ...`)
			const use_id = context.replyMessage.senderId;
			const Image = Canvas.Image;
			const [ava_info] = await vk.api.users.get({
				user_id: use_id,
				fields: "photo_200"
			});

			const [user_info] = await vk.api.users.get({
				user_id: use_id
			});

			const img = new Image();
			img.src = 'nadg.png';
			ctx.drawImage(img, 0, 0);

	//		ctx.font = '30px Sans';
		//	ctx.fillStyle = "#F4ECD2";
		//	ctx.fillText(`${chit}`, 220, 310);

			ctx.font = '30px Sans';
			ctx.fillStyle = "#D8A903";
			ctx.fillText(`¬´${chit.match(/.{1,15}/g).join("\n")}¬ª`, 220, 310);

			const mychit = await loadImage(ava_info.photo_200);
			ctx.drawImage(mychit, 215, 60);

			return context.sendPhotos(canvas.toBuffer());
		}
	});

updates.hear(/—Ü–∏—Ç–∞–Ω–∏$/i, async(context) => {
		if(context.forwards[0]){
			context.send(`–°–µ–∫—É–Ω–¥–æ—á–∫—É, –¥–µ–ª–∞—é —Ñ–æ—Ç–æ.`)

			const { createCanvas, loadImage } = require('canvas');
			const canvas = createCanvas(800, 200);
			const ctx = canvas.getContext('2d');

			const chit = context.forwards[0].text;
			const use_id = context.forwards[0].senderId;

			const [ava_info] = await vk.api.users.get({
				user_id: use_id,
				fields: "photo_200"
			});

			const [user_info] = await vk.api.users.get({
				user_id: use_id
			});

			if(chit.length < 46){
				for(var i = 0; i < chit.length; ++i){
					if(chit[i] < 46 && chit[i] == " "){

					}
				}
			}

			ctx.fillStyle = "#000000";
			ctx.fillRect(0, 0, 1000, 1000);
			ctx.fillStyle = "#FFFFFF";

			ctx.font = '20px Roboto';
			ctx.fillText(`–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–∏—Ö –ª—é–¥–µ–π:`, 220, 20);

			ctx.font = '23px Roboto';
			ctx.fillText(`¬´${chit.match(/.{1,45}/g).join("\n")}¬ª`, 220, 80);

			        //ctx.textAlign = "right";
			        ctx.font = '22px Roboto';
			        ctx.fillText(`¬© ${user_info.first_name} ${user_info.last_name}`, 530, 180);

			        const mychit = await loadImage(ava_info.photo_200); 
			        ctx.drawImage(mychit, 0, 0); 

			        return context.sendPhoto({
			        	value: canvas.toBuffer(),
			        	options:{
			        		filename: 'cit.png'
			        	}
			        });   
			    }  
			    if(context.replyMessage){
			    	context.send(`–°–µ–∫—É–Ω–¥–æ—á–∫—É, –¥–µ–ª–∞—é —Ñ–æ—Ç–æ.`)

			    	const { createCanvas, loadImage } = require('canvas');
			    	const canvas = createCanvas(800, 200);
			    	const ctx = canvas.getContext('2d');

			    	const chit = context.replyMessage.text;
			    	const use_id = context.replyMessage.senderId;

			    	const [ava_info] = await vk.api.users.get({
			    		user_id: use_id,
			    		fields: "photo_200"
			    	});

			    	const [user_info] = await vk.api.users.get({
			    		user_id: use_id
			    	});

			    	if(chit.length < 46){
			    		for(var i = 0; i < chit.length; ++i){
			    			if(chit[i] < 46 && chit[i] == " "){

			    			}
			    		}
			    	}

			    	ctx.fillStyle = "#000000";
			    	ctx.fillRect(0, 0, 1000, 1000);
			    	ctx.fillStyle = "#FFFFFF";

			    	ctx.font = '20px Roboto';
			    	ctx.fillText(`–¶–∏—Ç–∞—Ç—ã –≤–µ–ª–∏–∫–∏—Ö –ª—é–¥–µ–π:`, 220, 20);

			    	ctx.font = '23px Roboto';
			    	ctx.fillText(`¬´${chit.match(/.{1,45}/g).join("\n")}¬ª`, 220, 80);

			        //ctx.textAlign = "right";
			        ctx.font = '22px Roboto';
			        ctx.fillText(`¬© ${user_info.first_name} ${user_info.last_name}`, 530, 180);

			        const mychit = await loadImage(ava_info.photo_200); 
			        ctx.drawImage(mychit, 0, 0); 

			        return context.sendPhoto({
			        	value: canvas.toBuffer(),
			        	options:{
			        		filename: 'cit.png'
			        	}
			        });   
			    }
			});


updates.hear(/lvl/i, (context) => {

let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

user.xp += Number(100)
})


updates.hear(/—á–∏—Å–ª–æ (.*)/i, (context) => {
let res = context.$match[1]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(res.includes(`–≤—Å–µ`) || res.includes(`–≤—Å—ë`) || res.includes(`all`)){
	res = user.bananas
	
	}

return context.send(kovbaska(res))

})


// ADM COMMANDS 
updates.hear(/–≤—ã–¥–∞—Ç—å ([0-9]+) (.*)/i, (context) => {
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å ${sad}`)
let res = context.$match[2]
while(res.includes(`–∫`)){
	res = res.replace(`–∫`,`000`)
}
while(res.includes(`k`)){
	res = res.replace(`k`,`000`)
}
while(res.includes(`.`)){
	res = res.replace(`.`,``)
}
while(res.includes(`-`)){
	res = res.replace(`-`,``)
}
while(res.includes(`,`)){
	res = res.replace(`,`,``)
}
if(base.id[context.senderId].id == context.$match[1]) {
	let o = user.bananas
	user.bananas += Number(res)
	let b = user.bananas
	b -= Number(o)
	return context.send(`${nick}, –∑–∞—á–∏—Å–ª—è—é —Ç–µ–±–µ ${kovbaska(b)}üçå\n–ë—ã–ª–æ: ${kovbaska(o)}üçå\n–°—Ç–∞–ª–æ: ${kovbaska(user.bananas)}üçå`)
}
if(!base.bs[context.$match[1]]) return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ${sad}`)
let limit = Number(user.givelimit)
limit += Number(res)
let maxlimit = 5000000000000
if(user.rank > 4) maxlimit = 50000000000000
if(user.givelimit == maxlimit) return context.send(`${nick}, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤—ã–¥–∞—á–∏ –±–∞–Ω–∞–Ω–æ–≤, –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${nols(Math.trunc(user.givetime / 60))}:00:00`)
if(user.givelimit > maxlimit) return context.send(`${nick}, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤—ã–¥–∞—á–∏ –±–∞–Ω–∞–Ω–æ–≤, –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ ${nols(Math.trunc(user.givetime / 60))}:00:00`)
let backlimit = maxlimit
backlimit -= Number(user.givelimit)
if(limit > Number(maxlimit)) {
	res = Number(backlimit)
}
user.givelimit += Number(res)

if(base.bs[context.$match[1]].notifications == true) vk.api.messages.send({user_id: base.bs[context.$match[1]].id, message: `${nick} -> –í—ã–¥–∞–ª –≤–∞–º ${kovbaska(res)}üçå`}) 
let o = base.bs[context.$match[1]].bananas
base.bs[context.$match[1]].bananas += Number(res)
let b = base.bs[context.$match[1]].bananas
b -= Number(o)
return context.send(`${nick}, –∑–∞—á–∏—Å–ª—è—é *id${base.bs[context.$match[1]].id} (${base.bs[context.$match[1]].nick}) ${kovbaska(b)}üçå\n–ë—ã–ª–æ: ${kovbaska(o)}üçå\n–°—Ç–∞–ª–æ: ${kovbaska(user.bananas)}üçå`)

})

updates.hear(/–±–∞–Ω—Ä–µ–ø ([0-9]+)$/i, (context) => {
if(context.isChat) platform = true
let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}
if(user.rank < 4) return context.send(`${nick}, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç–µ–±–µ –Ω—É–∂–µ–Ω Deluxe —Å—Ç–∞—Ç—É—Å ${sad}`)
let repid = context.$match[1]
if(!base.bs[repid]) return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–ø—É—Ç–∞–ª–∏ –∏–¥ —Ä–µ–ø–æ—Ä—Ç–∞ —Å –∏–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ${sad}`)
if(reports.reps[repid]) return context.send(`${nick}, –Ω–∞–π–¥–µ–Ω id —Ä–µ–ø–æ—Ä—Ç–∞ <<${repid}>>, –≤–æ–∑–º–æ–∂–Ω–æ –≤—ã –ø–µ—Ä–µ–ø—É—Ç–∞–ª–∏ –∏–¥ —Ä–µ–ø–æ—Ä—Ç–∞ —Å –∏–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ${sad}`)
let ok = base.bs[repid]
if(ok.reportban == false){
	ok.reportban = true
	vk.api.messages.send({chat_id: adminchat, message: `${nick} - –û—Ç–∫–ª—é—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ <<—Ä–µ–ø–æ—Ä—Ç>> –∏–≥—Ä–æ–∫—É: *id${ok.id} (${ok.nick}) ${cool}`})
	return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${ok.id} (${ok.nick}) - –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç ${cool}`)
}
if(ok.reportban == true){
	ok.reportban = false
	vk.api.messages.send({chat_id: adminchat, message: `${nick} - –í–∫–ª—é—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ <<—Ä–µ–ø–æ—Ä—Ç>> –∏–≥—Ä–æ–∫—É: *id${ok.id} (${ok.nick}) ${cool}`})
	return context.send(`${nick}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é *id${ok.id} (${ok.nick}) - –≤–∫–ª—é—á–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç ${cool}`)
}


})



// ADM COMMANDS

updates.hear(/—Å—É–Ω–¥—É–∫–∏|—Å—É–Ω–¥—É–∫|–∫–µ–π—Å—ã|–∫–µ–π—Å$/i, (context) => {
let command = `—Å—É–Ω–¥—É–∫–∏`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `—Å—É–Ω–¥—É–∫` && quest !== `–∫–µ–π—Å—ã` && quest !== `–∫–µ–π—Å` && !context.text.includes(`@`) && !context.text.includes(`/`) && !context.text.includes(`üì¶`)) return

let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let task = ``
if(user.crates.wooden > 0) task += `üì¶ –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –°—É–Ω–¥—É–∫ (${kovbaska(user.crates.wooden)} —à—Ç.)\nüìú –û—Ç–∫—Ä—ã—Ç—å: <<—Å—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç—å 1¬ª\n`
if(user.crates.silver > 0) task += `üì¶ –°–µ—Ä–µ–±—Ä—è–Ω–Ω—ã–π –°—É–Ω–¥—É–∫ (${kovbaska(user.crates.silver)} —à—Ç.)\nüìú –û—Ç–∫—Ä—ã—Ç—å: <<—Å—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç—å 2¬ª\n`
if(user.crates.premium > 0) task += `üì¶ –ü—Ä–µ–º–∏—É–º –°—É–Ω–¥—É–∫ (${kovbaska(user.crates.premium)} —à—Ç.)\nüìú –û—Ç–∫—Ä—ã—Ç—å: <<—Å—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç—å 3¬ª\n`
if(user.crates.donate > 0) task += `üì¶ –î–æ–Ω–∞—Ç –°—É–Ω–¥—É–∫ (${kovbaska(user.crates.donate)} —à—Ç.)\nüìú –û—Ç–∫—Ä—ã—Ç—å: <<—Å—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç—å 4¬ª\n`
if(user.crates.present > 0) task += `üì¶ –ü–æ–¥–∞—Ä–æ—á–Ω—ã–π –°—É–Ω–¥—É–∫ (${kovbaska(user.crates.present)} —à—Ç.)\nüìú –û—Ç–∫—Ä—ã—Ç—å: <<—Å—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç—å 5¬ª\n`
if(task !== ``) task = `üëú –£ –í–∞—Å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:\n\n${task}`
return context.send(`${nick}, —Å—É–Ω–¥—É–∫–∏: 

‚É£ –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –°—É–Ω–¥—É–∫: 150.000.000.000üçå 
üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "—Å—É–Ω–¥—É–∫ –∏–Ω—Ñ–æ 1" 
üõí –ö—É–ø–∏—Ç—å: "—Å—É–Ω–¥—É–∫ 1 [–∫–æ–ª-–≤–æ]" 

‚É£ –°–µ—Ä–µ–±—Ä—è–Ω–Ω—ã–π –°—É–Ω–¥—É–∫: 10.000.000.000.000üçå  
üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: "—Å—É–Ω–¥—É–∫ –∏–Ω—Ñ–æ 2" 
üõí –ö—É–ø–∏—Ç—å: "—Å—É–Ω–¥—É–∫ 2 [–∫–æ–ª-–≤–æ]" 

${task}`)



})

updates.hear(/–ø—Ä–æ—Ñ–∏–ª—å$/i, async (context) => {
	let command = `–ø—Ä–æ—Ñ`
	let quest = context.text.toLowerCase()
if(quest !== `${command}` && quest !== `–ø—Ä–æ—Ñ–∏–ª—å` && !context.text.includes(`@`) && !context.text.includes(`/`)) return

let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}


let im = ``
if(base.bs[base.id[context.senderId].id].carid > 0) im += `\n‚†Äüöó –ú–∞—à–∏–Ω–∞: ${base.bs[base.id[context.senderId].id].carname}`
if(base.bs[base.id[context.senderId].id].computerid > 0) im += `\n‚†Äüñ• –ö–æ–º–ø—å—é—Ç–µ—Ä: ${base.bs[base.id[context.senderId].id].computername}`
if(base.bs[base.id[context.senderId].id].palms > 0) im += `\n‚†Äüå¥ ${base.bs[base.id[context.senderId].id].palmname} (x${kovbaska(base.bs[base.id[context.senderId].id].palms)})`

if(im !== ``) im = `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:${im}`

let text = `${nick}, —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:
üîé ID: ${base.id[context.senderId].id}
üçå –ë–∞–Ω–∞–Ω–æ–≤: ${kovbaska(base.bs[base.id[context.senderId].id].bananas)}
üì¶ –ù–∞ —Å–∫–ª–∞–¥–µ: ${kovbaska(base.bs[base.id[context.senderId].id].bank)}
üíé –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã—Ö: ${kovbaska(base.bs[base.id[context.senderId].id].dbananas)}
üëë –†–µ–π—Ç–∏–Ω–≥: ${kovbaska(base.bs[base.id[context.senderId].id].rating)}
üåü –£—Ä–æ–≤–µ–Ω—å: ${kovbaska(base.bs[base.id[context.senderId].id].lvl)}
üèÜ –û–ø—ã—Ç: ${kovbaska(base.bs[base.id[context.senderId].id].xp)}
${im}
`
if(base.bs[base.id[context.senderId].id].reg !== ``) text += `\nüìö –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${base.bs[base.id[context.senderId].id].reg}`
return context.send(text)
})


updates.hear(/abadfafaf$/i, async (context) => {

let user = base.bs[base.id[context.senderId].id]
let nick = ``
if(user.nicknotify == false) {
	nick = `${base.bs[base.id[context.senderId].id].nick}`
}
if(user.nicknotify == true) {
	nick = `*id${context.senderId} (${base.bs[base.id[context.senderId].id].nick})`
}

let unick = `${base.bs[base.id[context.senderId].id].nick}`
const { registerFont, createCanvas, loadImage } = require('canvas');
const canvas = createCanvas(821, 540); 
const ctx = canvas.getContext('2d'); 
const use_id = context.senderId; 
const Image = Canvas.Image; 
const [ava_info] = await vk.api.users.get({
user_id: use_id,
fields: "photo_50"
});
const mychit = await loadImage(ava_info.photo_50);
ctx.drawImage(mychit, 30, 35); 
let reg = `${user.reg}`
if(reg.length < 3) reg = `???`
if(nick.length < 2) nick = `???`
const img = new Image(); 
img.src = 'profile.jpg'; 
ctx.drawImage(img, 0, 0) 
let xp = Number(user.xp)
let minus = 100
let o = user.lvl
o -= Number(1)
minus *= Number(o)
if(user.lvl > 1) {
	xp -= Number(minus)
}
let kord = 96
while(xp > 1) {
const img = new Image(); 
img.src = 'xp_pixel.png'; 
ctx.drawImage(img, kord, 39) 
xp -= Number(1)
kord += Number(3)
}

ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#808080"; 
ctx.fillText(`ID: ${base.id[context.senderId].id}`, 66, 290); 
ctx.fillText(`–ë–∞–Ω–∞–Ω–æ–≤: ${kovbaska(user.bananas)}`, 66, 322); 
ctx.fillText(`–ù–∞ —Å–∫–ª–∞–¥–µ: ${kovbaska(user.bank)}`, 66, 352); 
ctx.fillText(`–ë—Ä–∏–ª–ª.–±–∞–Ω–∞–Ω–æ–≤: ${kovbaska(user.dbananas)}`, 66, 384); 
ctx.fillText(`–†–µ–π—Ç–∏–Ω–≥: ${kovbaska(user.rating)}`, 66, 410); 
ctx.fillText(`–†–µ–≥–∏—Å—Ç—Ä: ${reg}`, 66, 435); 
ctx.fillText(`–ú–∞—à–∏–Ω–∞:`, 520, 356); 
ctx.fillText(`–ö–æ–º–ø—å—é—Ç–µ—Ä:`, 520, 390); 
ctx.fillText(`–°—É–Ω–¥—É–∫–æ–≤:`, 520, 420); 
ctx.fillText(`${unick}`, 87, 85); 
ctx.fillText(`¬´–ò–º—É—â–µ—Å—Ç–≤–æ¬ª, –¥–ª—è \n–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ–≥–æ –∏–º—É—â–µ—Å—Ç–≤–∞`, 520, 451); 
ctx.fillText(`–£—Ä–æ–≤–µ–Ω—å: ${user.lvl}`, 520, 291); 
ctx.fillText(`–û–ø—ã—Ç–∞: ${kovbaska(user.xp)}`, 520, 321); 


ctx.font = 'bold 27px "Sans"'; 
ctx.fillStyle = "#ffa500";
ctx.fillText(`üçå`, 30, 322); 
ctx.fillStyle = "#42aaff";
ctx.fillText(`üÜî`, 30, 290); 
ctx.fillStyle = "#FF4500";
ctx.fillText(`üì¶`, 30, 352); 
ctx.fillStyle = "#42aaff";
ctx.fillText(`üíé`, 30, 385); 
ctx.fillStyle = "#ffcf48";
ctx.fillText(`üëë`, 30, 410); 
ctx.fillStyle = "#ff0000";
ctx.fillText(`üìï`, 30, 435); 

ctx.fillStyle = "#ffcf48";
ctx.fillText(`üåü`, 489, 292); 
ctx.fillStyle = "#42aaff";
ctx.fillText(`üÜô`, 489, 321); 
ctx.fillStyle = "#ff2400";
ctx.fillText(`üöô`, 489, 356);
ctx.fillStyle = "#000000";
ctx.fillText(`üíª`, 489, 390);
ctx.fillStyle = "#470027";
ctx.fillText(`üëú`, 489, 418); 

ctx.fillStyle = "#008000";
ctx.fillText(`üìï`, 489, 451); 




ctx.font = 'bold 17px "Sans"'; 
ctx.fillStyle = "#000000"; 
ctx.fillText(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è`, 118, 244); 
ctx.fillText(`–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ`, 581, 244); 



let cases = 0
if(cases < 1) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#ff0000"; 
ctx.fillText(`–ù–µ—Ç`, 625, 420);
}
if(cases > 0) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#008000"; 
ctx.fillText(`${kovbaska(cases)}`, 625, 420);
}

if(user.carid < 1) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#ff0000"; 
ctx.fillText(`–ù–µ—Ç`, 611, 356);
}
if(user.computerid < 1) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#ff0000"; 
ctx.fillText(`–ù–µ—Ç`, 642, 390);
}
if(user.carid > 0) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#008000"; 
ctx.fillText(`${user.carname}`, 611, 356);
}
if(user.computerid > 0) {
ctx.font = 'bold 19px "Sans"'; 
ctx.fillStyle = "#008000"; 
ctx.fillText(`${user.computername}`, 642, 390);
}
context.sendPhotos({
                        value: canvas.toBuffer()
                    }, {
                        message: `üìù –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:`,
                        random_id: getRandomInRange(1, 2048)
                    })
})


/// SHOP ///
setInterval(function (){
for(let a in base.bs){
base.bs[a].givetime -= 1;
if(base.bs[a].givetime < 1){
base.bs[a].givetime = 1440
base.bs[a].givelimit = 0
}
}
}, 60000);



setInterval(function() {
updateWidget()
console.log(chalk.yellow(`> –ë–∞–Ω–∞–Ω–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω :)`))
}, 60000)
function updateWidget() {
	var tops = []
	for(let i in base.bs){
		if(base.bs[i].topenabled === true && base.bs[i].rank < 4){
			tops.push({
				id: i,
				idvk: base.bs[i].id,
				lvl: base.bs[i].rating
			});
		}
	}
	tops.sort(function(a, b) {
		if (b.lvl > a.lvl) return 1
		if (b.lvl < a.lvl) return -1
		return 0
	})

	var script = {
		title: `–õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏ :–∑`,
		head: [
			{
				text: '–ù–∏–∫ –∏–≥—Ä–æ–∫–∞'
			},
			{
				text: '–ë–∞–Ω–∞–Ω–æ–≤',
				align: 'right'
			},
			{
				text: '–†–µ–π—Ç–∏–Ω–≥',
				align: 'right'
			}
		],
		body: []
	}

	for (var g = 0; g < 10; g++) {
		if (tops.length > g) {
			let ups = g;
			ups += 1;
			if (g <= 8) ups = `${ups}`
			if (g == 9) ups = `10`
			script.body.push([
				{
					icon_id: `id${tops[g].idvk}`,
					text: `${base.bs[tops[g].id].nick}`,
					url: `vk.com/id${tops[g].idvk}`
				},
				{
					text: `${kovbaska(base.bs[tops[g].id].bananas)}üçå`
				},
				{
					text: `üèÜ${kovbaska(tops[g].lvl)}`
				},
			])
		}
	}

	request.post({ 
		url: 'https://api.vk.com/method/appWidgets.update', 
		form: { 
			v: '5.103', 
			type: 'table', 
			code: `return ${JSON.stringify(script)};`, 
			access_token: '0f3f770bde612df48995ae64695d5dd9caaf443968d6b84dd8bc96b0f4830042376c0ad31f003081d9157' // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ app_widgets 
	}},
	function(err, resp, body) {
	});
}


function splitString(stringToSplit, separator) {
  var arrayOfStrings = stringToSplit.split(separator);
  return arrayOfStrings
}



async function run() {
    await vk.updates.startPolling();
    console.log(chalk.red(">_ Started"));
}
 
run().catch(console.error);
// –ü–æ–ª—É—á–∞–µ–º UnixDate –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
function getUnix() {
    return Math.floor(Date.now() / 1000);
}