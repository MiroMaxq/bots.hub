console.log('[Prog] started bot..');
const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
let user = new VK();
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");

const bot_owner = 478493336;

const pks = [
	{
		name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
		cost: 500,
		min: 10,
		max: 20,
		id: 1
	},
	{
		name: '–¢–µ–ª–µ—Ñ–æ–Ω',
		cost: 1000,
		min: 10,
		max: 30,
		id: 2
	},
	{
		name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä',
		cost: 3000,
		min: 30,
		max: 90,
		id: 3
	},
	{
		name: '–ë–∞–±—É—à–∫–∏–Ω_–Ω–æ—É—Ç–±—É–∫',
		cost: 500,
		min: 90,
		max: 200,
		id: 4
	},
	{
		name: '–ù–æ—É—Ç–±—É–∫',
		cost: 20000,
		min: 200,
		max: 500,
		id: 5
	},
	{
		name: '–ö–æ–º–ø—å—é—Ç–µ—Ä',
		cost: 100000,
		min: 1000,
		max: 2000,
		id: 6
	},
	{
		name: '–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞',
		cost: 500000,
		min: 5000,
		max: 20000,
		id: 7
	}
];

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	},
	time: () => {
		return parseInt(new Date().getTime()/1000)
	}
}



let btc = 6000;

let users = require('./users.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('saved');
}, 30000);



setInterval(async () => {
	users.map(user => {
		for(var i = 0; i < user.business.length; i++)
		{
			const biz = businesses[user.business[i].id - 1][user.business[i].upgrade - 1];
			user.business[i].moneys += Math.floor(biz.earn / biz.workers * user.business[i].workers)
		}
	});
}, 3600000);

function clearTemp()
{
	users.map(user => {
		user.timers.hasWorked = false;
		user.timers.bonus = false;
   user.timers.text = false;
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: '52e6e3611f150c6f904eefbc098acd43e5a54006213fedcc88f57f98cfc414faea104f72a89070b46dc30', pollingGroupId: 188352532 });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[public179803283  \|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[public179803283  \|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

		users.push({
			id: message.senderId,
			uid: users.length,
			admin: false,
            vip: false,
            pk: 0,
			balance: 1000,
			nc: 0,
		    dc: 0,
           admins: 0,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			timers: {
				hasWorked: false,
				bonus: false,
       text: false
			},
			tag: user_info.first_name,
			blocked: false

		});
	}

	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return;

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	const command = commands.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.exp >= 24)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`Executed: ${message.text}`)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}

//–Æ–ó–ï–†
cmd.hear(/^(?:–ü–æ–º–æ—â—å)$/i, async (message, bot) => {
	message.user.foolder += 1;

	return bot(`–¢–µ–ø–µ—Ä—å —Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç. –¢–≤–æ—è –∑–∞–¥–∞—á–∞: –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–∫–∞–∑—ã, –∏ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–æ–≤–æ–ª—å–Ω—ã–º–∏! –°–≤–æ—é —Ä—É–ø—É—Ç–∞—Ü–∏—é —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ¬´–ø—Ä–æ—Ñ–∏–ª—å¬ª üíø

  üì± –î–ª—è –Ω–∞—á–∞–ª–∞ –∫—É–ø–∏ —Å–≤–æ–µ –ø–µ—Ä–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ (–∫–æ–º–∞–Ω–¥–∞: ¬´–º–∞–≥–∞–∑–∏–Ω¬ª). –ü–æ–¥–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω–µ–≥ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ¬´—Ä–∞–±–æ—Ç–∞—Ç—å¬ª üòÉ

  üìï –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º–æ–∂–µ—à—å –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ! –ü–∏—à–∏ –∏ –ø—Ä–æ–¥–∞–≤–∞–π —Å–≤–æ–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã ¬´–Ω–∞–ø–∏—Å–∞—Ç—å¬ª üòé

–í—Å–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã , —Å–º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –≤–≤–µ–¥—è ¬´–∫–æ–º–∞–Ω–¥—ã¬ªüòâ`);
});
cmd.hear(/^(?:–ö–æ–º–∞–Ω–¥—ã)$/i, async (message, bot) => {
	message.user.foolder += 1;

	return bot(`–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
üìó ¬ª –ù–∏–∫ - –ø–æ–º–µ–Ω—è—Ç—å –Ω–∏–∫.
üí∞ ¬ª –ë–∞–ª–∞–Ω—Å - –ø—Ä–æ—Å–º–æ—Ç—Ä –±–∞–ª–∞–Ω—Å–∞.
üí© ¬ª –ü—Ä–æ—Ñ–∏–ª—å - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è.
üëë ¬ª –ú–∞–≥–∞–∑–∏–Ω - –ø–æ–∫—É–ø–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.
‚úè  ¬ª –ù–∞–ø–∏—Å–∞—Ç—å - –Ω–∞–ø–∏—Å–∞—Ç—å –∏ –ø—Ä–æ–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É.
‚å®Ô∏è ¬ª –†–∞–±–æ—Ç–∞—Ç—å - —Ä–∞–±–æ—Ç–∞—Ç—å.
üíé ¬ª –ö–∞–∑–∏–Ω–æ - –∫–∞–∑–∏–Ω–æ.
üîÉ ¬ª –ü–µ—Ä–µ–¥–∞—Ç—å - –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏.
üôá ¬ª –ë–µ—Å–µ–¥–∞ - —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É —Å –±–æ—Ç–æ–º.
üóÉÔ∏è ¬ª –ë–æ–Ω—É—Å - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å.
‚ùì ¬ª –ü–æ–º–æ—â—å - –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É.`);
});

cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
	return bot(`—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:

‚úèÔ∏è UID: ${message.user.uid}
üëç –î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: ${message.user.dc}
üëé –ù–µ–¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤: ${message.user.nc}
üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}`
    );
});  

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å|balance|money|–¥–µ–Ω—å–≥–∏)$/i, async (message, bot) => {
	return bot(`–ù–∞ —Ä—É–∫–∞—Ö: ${message.user.balance}$üí∞`
    );
});  
cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {


	if(message.user.timers.hasWorked) return bot(`–í—ã —É–∂–µ —Ö–æ—Ä–æ—à–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏.\n–û—Ç–¥–æ—Ö–Ω–∏ 2 –º–∏–Ω—É—Ç—ã..üòò`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 86400000);

	message.user.timers.hasWorked = true;

	const earn = utils.random(10, 25);

	message.user.balance += earn;


	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ωüòò
\n–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`);
});

cmd.hear(/^(?:–±–æ–Ω—É—Å)$/i, async (message, bot) => {


	if(message.user.timers.hasWorked) return bot(`–ü–æ—Ö–æ–∂–µ –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å.\n–î–∞–≤–∞–π —Ç—ã –∑–∞–±–µ—Ä—ë—à—å —Å–≤–æ–π –±–æ–Ω—É—Å –µ—â—ë —Ä–∞–∑, —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞ ?üòò`);

	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 120000);

	message.user.timers.hasWorked = true;

	const earn = utils.random(500, 1500);

	message.user.balance += earn;

	return bot(`–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –±–æ–Ω—É—Å –∏ –Ω–∞—à–ª–∏ ${utils.sp(earn)}$‚ùó`);
});

cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω|shop)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤:

1. ‚å®Ô∏è –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
 –¶–µ–Ω–∞: 500$
 –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 10-20$

2.üì± –¢–µ–ª–µ—Ñ–æ–Ω
  –¶–µ–Ω–∞: 1.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 10-30$

 3.üì∫ –¢–µ–ª–µ–≤–∏–∑–æ—Ä
  –¶–µ–Ω–∞: 3.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 30-90$

4. üìü –ë–∞–±—É—à–∫–∏–Ω_–Ω–æ—É—Ç–±—É–∫
  –¶–µ–Ω–∞: 5.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 90-200$

5. üíª –ù–æ—É—Ç–±—É–∫
  –¶–µ–Ω–∞: 20.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 200-500$

6. ‚å® –ö–æ–º–ø—å—é—Ç–µ—Ä
  –¶–µ–Ω–∞: 100.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 1.000-2.000$

7. üì∫ –ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞
  –¶–µ–Ω–∞: 500.000$
  –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞: 5.000-20.000$

üí∞ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏: –º–∞–≥–∞–∑–∏–Ω <—Ü–∏—Ñ—Ä–∞ —Ç–æ–≤–∞—Ä–∞>

‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥? –ü–∏—à–∏ ¬´—Ä–∞–±–æ—Ç–∞—Ç—å¬ª`);

const sell = pks.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.pk) return bot(`–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.\nüìó–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å "–ü—Ä–æ–¥–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.pk = sell.id;

		return bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–ù–∞–ø–∏—Å–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.pk) return bot(`–£ —Ç–µ–±—è –Ω–µ—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è! –ö—É–ø–∏—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ. üìå`);
	if(message.user.timers.text) return bot(`–ü–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ –º–∏–Ω—É—Ç—É. –û—Ç–¥–æ—Ö–Ω–∏!`);

	setTimeout(() => {
		message.user.timers.text = false;
	}, 60000);

	message.user.timers.text = true;

 const pk = pks.find(x=> x.id === message.user.pk);
	const earn = utils.random(pk.min, pk.max);
	if(utils.random(0, 150) < 75)
	{
		message.user.balance += earn;
   message.user.dc += 1;
		bot(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É, –∏ –æ–Ω–∞ –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞! üì∞
–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª: ${utils.sp(earn)}$`);
	}
	else
	{
		message.user.nc += 1;
		bot(`–¢—ã –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É, –∏ –æ–Ω–∞ –Ω–µ –æ—á–µ–Ω—å –ø–æ—Ä–∞–¥–æ–≤–∞–ª–∞ –∫–ª–∏–µ–Ω—Ç–∞! üí∏
`);
	}
});


cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!\n
üí∞ –í–∞—à –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	else if(message.args[2] <= message.user.balance)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);

		if(user.uid === message.user.uid) return bot(`–ò–≥–æ–ª–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);

		message.user.balance -= message.args[2];
		user.balance += message.args[2];

		await bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ¬ª ${utils.sp(message.args[2])}$`);

	}
});



//–ò–≥—Ä—ã

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`–£ –í–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([2, 0, 0.5, 0, 2, 0.5]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply)}$`}`}
		üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});



cmd.hear(/^(?:–Ω–∏–∫)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length >= 16) return bot(`–î–ª–∏–Ω–∞ –ù–∏–∫–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 16 –±—É–∫–≤.`);

	message.user.tag = message.args[1];
	return bot(`—É—Å–ø–µ—à–Ω–æ.`);
});

cmd.hear(/^(?:—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|rep|–∂–∞–ª–æ–±–∞)\s([^]+)$/i, async (message, bot) => {
	if(message.isChat) return bot(`–£–≤—ã, –Ω–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–° —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!`);

	vk.api.messages.send({ user_id: 478493336, forward_messages: message.id, message: `Player id: ${message.user.uid}` }).then(() => {
		return bot(`–†–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`);
	}).catch((err) => {
		return bot(`–ß—Ç–æ—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.`);
	});
});

//–∞–¥–º–∏–Ω
cmd.hear(/^(?:–Ω–∞–∫—Ä—É—Ç–∏)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
if(message.user.admin == false) return;
	if(message.args[2] <= 0) return;

	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
		if(user.uid === message.user.uid) return bot(`–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
		message.user.balance += Number(message.args[1])
		await bot(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
	}
});

cmd.hear(/^(?:—Ä–µ—Å)$/i, async (message, bot) => {
	if(message.senderId !== 478493336) return;
	await bot(`–±–æ—Ç —É—Ö–æ–¥–∏—Ç –≤ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.`);

	await saveUsers();
	process.exit(-1);
});

cmd.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s([^]+)$/i, async (message, bot) => {
message.user.foolder += 1;
	if(message.user.admin == false) return;
 			 users.filter(x=> x.id !== 1).map(zz => { 
  vk.api.messages.send({ user_id: zz.id, message: `${message.args[1]}`}); 
 }); 
 			let people = 0;
        for(let id in users) {
            vk.api.call('messages.send', {
             chat_id: id,
              message: `${message.args[1]}` });
        }
        return message.send(`üì£ –†–∞—Å—Å—ã–ª–æ—á–∫–∞\n\n"${message.args[1]}"`);
 
})

cmd.hear(/^(?:–ø–æ—Å—Ç—Ä–∞—Å—Å—ã–ª–∫–∞)\s([^]+)$/i, async (message, bot) => {
message.user.foolder += 1;
	if(message.user.admin == false) return;
 			 users.filter(x=> x.id !== 1).map(zz => { 
  vk.api.messages.send({ user_id: zz.id, message: `—Ç–µ—Å—Ç:`, attachment: `${message.args[1]}`}); 
 }); 
 			let people = 0;
        for(let id in users) {
            vk.api.call('messages.send', {
             chat_id: id,
              message: `üì£ –†–∞—Å—Å—ã–ª–æ—á–∫–∞:`,
              attachment: `${message.args[1]}` });
        }
        return message.send(`–£—Å–ø–µ—à–Ω–æ.`);
 
})

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
		if(message.user.admin == false) return;
	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;
	vk.api.messages.send({ user_id: user.id, message: `–û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–ø–æ—Ä—Ç`
	${message.args[2]}` });
});


//–°—Å—ã–ª–∫–∏
cmd.hear(/^(?:–ë–µ—Å–µ–¥–∞)$/i, async (message, bot) => {
	return bot(`\n1. https://vk.me/join/AJQ1d/Qw5QwiVXAhbPqe2HrF`
    );
});  

//–•
