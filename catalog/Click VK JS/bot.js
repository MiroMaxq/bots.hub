const rq = require("prequest");
const fs = require("fs");  
const { VK, Keyboard } = require('vk-io');
const vk = new VK();  
const str = new VK();  
const { updates } = vk;   
const bot = vk.updates;
let user = new VK(); 

user.setOptions({ 
token: '5a9cf27657d3a05a633a4e3fc0a3209575dfd3f311983d197467cd6fe4a4e2dab883af729887384da258e' 
});
/*----------------------------------------------------------------------------------------------------------*////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
const acc = require("./base/acc.json");  
const f = require("./plugins/functions.js") //Functions
/*----------------------------------------------------------------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
setInterval(async () => {
	fs.writeFileSync("./base/acc.json", JSON.stringify(acc, null, "\t"))   
}, 1500);
/*----------------------------------------------------------------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
vk.setOptions({ 
	token: '5a9cf27657d3a05a633a4e3fc0a3209575dfd3f311983d197467cd6fe4a4e2dab883af729887384da258e', // 
	apiMode: 'parallel',  
	pollingGroupId: 175184730// 
});  
/*----------------------------------------------------------------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////


var limits = {}
 
/*------------------------------------- Message handling----------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////

vk.updates.use(async (message, next) => {     

	if (message.is("message") && message.isOutbox) { return; } 
	message.user = message.senderId; 
	message.text = message.payload.text; 
	if (!message.text) { return; } 
 	const info = await vk.api.users.get({ user_id: message.user });
    if(!acc.users.find(a => a.vk === message.user)){ 
    	acc.number++; 
    	acc.users.push(
    		{
				id: acc.number, 
				vk: message.user,
				balance: 0,
				admin: 	0,
				vip: 	0,
				ban: 	false,
				prefix: info[0].first_name,
				modules:    	
				{
					"1": 		{
						price: 	50,
						count:  0,
						profit: 1
					},
					"2": 		{
						price: 	1400,
						count:  0,
						profit: 2
					},
					"3": 		{
						price: 	2500,
						count:  0,
						profit: 3
					},
					"4": 		{
						price: 	5000,
						count:  0,
						profit: 4
					},
					"5": 		{
						price: 	10250,
						count:  0,
						profit: 6
					},
					"6": 		{
						price: 	15000,
						count:  0,
						profit: 8
					},
					"7": 		{
						price: 	40000,
						count:  0,
						profit: 10
					}
				}
			}
    	)
    	return message.send(`[@id${message.user}(${info[0].first_name})] => –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ [club123|MinerBot]`)////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
    } 

	if (/\[club123\|(.*)\]/i.test(message.text)) { message.text = message.text.replace(/\[club123\|(.*)\]/ig, '').trim(); }  ////DEVELOPER - TEMA DOBRIY (FPSKIN)///// 
 	  
 	 
   	if (!limits[message.user]) {
		limits[message.user] = {   
			block_bonus: 	0
		}
	} 
	
	const user = acc.users.find(a => a.vk === message.user);

	if (message.text) {   
		user.balance += 1;
		if(user.balance % 100 == 0){
			message.send(`@id${message.user}([${user.prefix})] => –í–∞—à –±–∞–ª–∞–Ω—Å: ${user.balance} COIN`);////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
		}
	}

	if (user.ban == true) return;
	try { await next(); } catch (err) { console.error(err) }

});

 

////////////////////////////////////////////////////////////////////////
///////////////////////////–î–û–ù–ê–¢///////////////////////////////
//////////////////////////////////////////////////////////////////////// 
bot.hear(/^(?:–î–æ–Ω–∞—Ç)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(
		`–ó–¥–µ—Å—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–∞–π—Å –Ω–∞ –¥–æ–Ω–∞—Ç!!!!!!`
	);	
});
//////////////////////////////////////–î–û–ù–ê–¢///////////

bot.hear(/^(?:–ø–æ–∏—Å–∫)\s?(.*)?/i, (message) => { 
	let args = message.$match; 

	vk.api.call("utils.resolveScreenName", {
			screen_name: args[1]
	}).then((res) => { 
		var id = res.object_id;

		let user = acc.users.find(a => a.vk === id); 
		if(!user) return message.send(`‚úâ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω...\n‚úâ –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: '–ø–æ–∏—Å–∫ https://vk.com/direnyov' `) 

		return message.send(`
			üîπ –ò–≥—Ä–æ–∫: ${user.prefix}
			üîπ VK: vk.com/id${user.vk}
			üîπ ID: ${user.id}
			üîπ –ë–∞–ª–∞–Ω—Å: ${user.balance}
		`);
	})
});  

bot.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|–ø–µ—Ä–µ–≤–æ–¥)\s?([0-9]+)?\s?(.*)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match;  
	if(!args[2] || !Number(args[2]) || args[2] < 0) return message.send(`üí∏ –ü—Ä–∏–º–µ—Ä: "–ü–µ—Ä–µ–¥–∞—Ç—å ID –°–£–ú–ú–ê"`);

	args[2] = args[2].replace(/(\.|\,)/ig, '');
	args[2] = args[2].replace(/(–∫|k)/ig, '000');
	args[2] = args[2].replace(/(–º|m)/ig, '000000');
	args[2] = args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, user.balance); 

	if(user.balance < args[2]) return message.send(`üí∏ –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	if(args[1] == user.id) return message.send(`üí∏ –í—ã —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π ID`);

	let u = acc.users.find(a => a.id === Number(args[1])); 
	if(!u) return message.send(`üí∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.balance -= Number(args[2]);
	u.balance += Number(args[2]);
	return message.send(`${f.time()}\nüí∏ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ${args[2]} coins –∏–≥—Ä–æ–∫—É ${u.prefix}`);

});

bot.hear(/^(?:–ò–Ω—Ñ–æ|üìù –∏–Ω—Ñ–æ)/i, (message) => {  

	return message.send(
		`
		üìÆ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å COIN 
		üë¶ –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å 50 –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞—à–µ–º—É –±–æ—Ç—É.
		‚úâ –ó–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1 BOT COINS.
		üí∏ –ó–∞ COIN –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å —É—Å–∫–æ—Ä–µ–Ω–∏—è ('—É—Å–∫–æ—Ä–µ–Ω–∏–µ')
		üí∞ –ö–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±—É–¥—É—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –≤–∞–º –ø—Ä–∏–±—ã–ª—å!

		üèÜ –ß–µ–º –±–æ–ª—å—à–µ —É –≤–∞—Å BOT COIN - —Ç–µ–º –≤—ã—à–µ –≤—ã –≤ —Ç–æ–ø–µ!

		`,
		
		{
			keyboard:JSON.stringify(
		{
			"one_time": false,
			"buttons": [
			[{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"1\"}",
				"label": "–ö–õ–ò–ö"
		},
			"color": "positive"
		},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"2\"}",
				"label": "–ü—Ä–æ—Ñ–∏–ª—å"
		},
			"color": "positive"
			},
		{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"3\"}",
				"label": "–¢–û–ü"
		},
			"color": "positive"
			},
			{
				"action": {
				"type": "text",
				"payload": "{\"button\": \"4\"}",
				"label": "–ò–ù–§–û"
			},
				"color": "positive"
			}]
		]
			})
		});
		}
		);		

vk.updates.hear(/^(?:–æ–±–º–µ–Ω—è—Ç—å)\s?([1-9]+)?/i, message => {
 	
 		return message.send(
		    `
 			–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç!
 			`
	    );
 	}); 
		
bot.hear(/^(?:–ë–∞–ª–∞–Ω—Å)/i, (message) => {  
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(
		`üí¥ –í–∞—à –±–∞–ª–∞–Ω—Å: ${f.spaces(user.balance)} coins`
	);	
});

bot.hear(/^(?:–ø–æ–º–æ—â—å)/i, (message) => {  

			return message.send(
				`
				–û—Å–Ω–æ–≤–Ω—ã–µ:
				 üìù –ò–Ω—Ñ–æ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
				 üíº –ü—Ä–æ—Ñ–∏–ª—å 
				 ‚ôª –£—Å–∫–æ—Ä–µ–Ω–∏–µ
				 üéÅ –ë–æ–Ω—É—Å
				 üîù –¢–æ–ø
				 üîç –ü–æ–∏—Å–∫ [—Å—Å—ã–ª–∫–∞(–≤–∫)]
				 üí∞ –ü–µ—Ä–µ–¥–∞—Ç—å [—Å—Å—ã–ª–∫–∞(–≤–∫)] [—Å—É–º–º–∞]
				 üëë –î–æ–Ω–∞—Ç
				 üí¥ –ë–∞–ª–∞–Ω—Å
				 
				–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ:
				üîÆ –®–∞—Ä (—Ñ—Ä–∞–∑–∞)
				üíû –õ—Ç–µ—Å—Ç - —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤–∞—Å –ª—é–±—è—Ç
				‚ùì –ö–æ–≥–¥–∞ [—Ñ—Ä–∞–∑–∞] - –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ —Å–ª—É—á–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
				üîé –ö—Ç–æ —è - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –¢—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ...
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ö–õ–ò–ö"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ü—Ä–æ—Ñ–∏–ª—å"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–¢–û–ü"
				},
					"color": "positive"
					},
					{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ò–ù–§–û"
					},
						"color": "positive"
					}]
				]
					})
				});
				}
				);
		
		
		bot.hear(/^(?:–∫–æ–º–∞–Ω–¥—ã)/i, (message) => {  
		
			return message.send(
				`
				–û—Å–Ω–æ–≤–Ω—ã–µ:
				 üìù –ò–Ω—Ñ–æ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ
				 üíº –ü—Ä–æ—Ñ–∏–ª—å 
				 ‚ôª –£—Å–∫–æ—Ä–µ–Ω–∏–µ
				 üéÅ –ë–æ–Ω—É—Å
				 üîù –¢–æ–ø
				 üîç –ü–æ–∏—Å–∫ [—Å—Å—ã–ª–∫–∞(–≤–∫)]
				 üí∞ –ü–µ—Ä–µ–¥–∞—Ç—å [—Å—Å—ã–ª–∫–∞(–≤–∫)] [—Å—É–º–º–∞]
				 üëë –î–æ–Ω–∞—Ç
				 üí¥ –ë–∞–ª–∞–Ω—Å
				 
				–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ:
				üîÆ –®–∞—Ä (—Ñ—Ä–∞–∑–∞)
				üíû –õ—Ç–µ—Å—Ç - —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –≤–∞—Å –ª—é–±—è—Ç
				‚ùì –ö–æ–≥–¥–∞ [—Ñ—Ä–∞–∑–∞] - –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ —Å–ª—É—á–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ
				üîé –ö—Ç–æ —è - —É–∑–Ω–∞—Ç—å –∫—Ç–æ –¢—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ...
		
				`,
				{
					keyboard:JSON.stringify(
				{
					"one_time": false,
					"buttons": [
					[{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"1\"}",
						"label": "–ö–õ–ò–ö"
				},
					"color": "positive"
				},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"2\"}",
						"label": "–ü—Ä–æ—Ñ–∏–ª—å"
				},
					"color": "positive"
					},
				{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"3\"}",
						"label": "–¢–û–ü"
				},
					"color": "positive"
					},
					{
						"action": {
						"type": "text",
						"payload": "{\"button\": \"4\"}",
						"label": "–ò–ù–§–û"
					},
						"color": "positive"
					}]
				]
					})
				});
				}
				);
  
bot.hear(/^(?:–±–æ–Ω—É—Å|üéÅ –±–æ–Ω—É—Å)/i, (message) => {  

	let user = acc.users.find(a => a.vk === message.user); 
	
	min = limits[message.user].bonus_min; 
	if (limits[message.user].bonus == true) return message.send(`[@id${message.user}(${user.prefix})] => –ë—Ä–∞—Ç—å –±–æ–Ω—É—Å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑: ${min} –º–∏–Ω—É—Ç `); 
	limits[message.user].bonus = true;
 
	limits[message.user].bonus_min = 60

	setTimeout(() => {
		limits[message.user].bonus = false;
	}, 3600000);

	let ss = f.rand(100,2000);
	if(user.vip >= 1){
		ss += f.rand(200,600)
	}
	user.balance += ss;
	return message.send(`
	[@id${message.user}(${user.prefix})] => –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${f.spaces(Math.round(ss))} coins
	`);
});
  
bot.hear(/^(?:—É—Å–∫–æ—Ä–µ–Ω–∏–µ|—É—Å–∫–æ—Ä–µ–Ω–∏—è|—É–ª—É—á—à–µ–Ω–∏—è|‚ôª —É—Å–∫–æ—Ä–µ–Ω–∏–µ|‚ôª —É—Å–∫–æ—Ä–µ–Ω–∏—è|‚ôª —É–ª—É—á—à–µ–Ω–∏—è)\s?([0-9]+)?/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let args = message.$match; 

	if (!args[1]) {
		return message.send(
			`
			‚û° - - –ü–æ–∫—É–ø–∫–∞ —É—Å–∫–æ—Ä–µ–Ω–∏–π - - ‚¨Ö
			üîî  –ù–∞–∑–≤–∞–Ω–∏–µ | –¶–µ–Ω–∞ | –î–æ—Ö–æ–¥ üîî

			1&#8419;. –ö—É—Ä—Å–æ—Ä | ${user.modules["1"].price} | +1/—Å–µ–∫ 
			2&#8419;. –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ | ${user.modules["2"].price} | +2/—Å–µ–∫
			3&#8419;. –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç | ${user.modules["3"].price} | +3/—Å–µ–∫
			4&#8419;. –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä | ${user.modules["4"].price} | +4/—Å–µ–∫
			5&#8419;. –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ | ${user.modules["5"].price} | +6/—Å–µ–∫
			6&#8419;. –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä | ${user.modules["6"].price} | +8/—Å–µ–∫
			7&#8419;. –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä | ${user.modules["7"].price} | +10/—Å–µ–∫

			‚û° - -  –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–£—Å–∫–æ—Ä–µ–Ω–∏–µ (–Ω–æ–º–µ—Ä)" - - ‚¨Ö
			‚û° - -  –ü—Ä–∏–º–µ—Ä: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ 1" - - ‚¨Ö
			`
		);	
	}
	let i = args[1];
	
	if (!Number(i) || i < 0 || i > 7) return message.send(`[@id${message.user}(${user.prefix})] => –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä —É—Å–∫–æ—Ä–µ–Ω–∏—è!`, {keyboard: menu});
	if (user.balance < user.modules[Number(i)].price) return message.send(`[@id${message.user}(${user.prefix})] => –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ COINS`);

	user.balance -= Number(user.modules[Number(i)].price);
	user.modules[Number(i)].price += (Math.round(user.modules[Number(i)].price * 0.5));
	user.modules[Number(i)].count += 1;

	return message.send(`[@id${message.user}(${user.prefix})] => –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–µ–æ–±—Ä–µ–ª–∏ —É—Å–∫–æ—Ä–µ–Ω–∏–µ!\n‚ùó –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ '–ø—Ä–æ—Ñ–∏–ª—å'`);
	 
});



bot.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|–ø—Ä–æ—Ñ|üíº –ø—Ä–æ—Ñ–∏–ª—å| üíº –ø—Ä–æ—Ñ)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	return message.send(`
	üÜî ID: ${user.id}

	üí∞ –ë–∞–ª–∞–Ω—Å: ${f.spaces(user.balance)} coins
	
	‚è≥ –í–∞—à–∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è ‚è≥ 
	üìï –ö—É—Ä—Å–æ—Ä [${user.modules["1"].count}] +${user.modules["1"].count*1}/—Å–µ–∫
	üìó –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞  [${user.modules["2"].count}] +${user.modules["2"].count*2}/—Å–µ–∫
	üìò –°—Ç–æ–π–∫–∞ –í–∏–¥–µ–æ–∫–∞—Ä—Ç  [${user.modules["3"].count}] +${user.modules["3"].count*3}/—Å–µ–∫
    üìô –°—É–ø–µ—Ä–∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["4"].count}] +${user.modules["4"].count*4}/—Å–µ–∫
    üìî –°–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ [${user.modules["5"].count}] +${user.modules["5"].count*6}/—Å–µ–∫
	üìì –ö–≤–∞–Ω—Ç–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä  [${user.modules["6"].count}] +${user.modules["6"].count*8}/—Å–µ–∫
	üñ• –î–∞—Ç–∞—Ü–µ–Ω—Ç—Ä [${user.modules["7"].count}] +${user.modules["7"].count*10}/—Å–µ–∫

	üíø –°—É–º–º–∞—Ä–Ω–æ: ${(user.modules["1"].count*1)+(user.modules["2"].count*2)+(user.modules["3"].count*3)+(user.modules["4"].count*4)+(user.modules["5"].count*6)+(user.modules["6"].count*8)+(user.modules["7"].count*10)}/—Å–µ–∫
	`);
	 
});       

bot.hear(/^(?:—Ç–æ–ø|üîù —Ç–æ–ø)/i, (message) => { 

	let text = ``; var tops = []
	 
	for (i=0; i<acc.users.length; i++) { 
		tops.push({
			id: acc.users[i].id,
			vk: acc.users[i].vk, 
			balance: acc.users[i].balance,
			prefix: acc.users[i].prefix
		}) 
	}
	 
	tops.sort(function(a, b) {
		if (b.balance > a.balance) return 1
		if (b.balance < a.balance) return -1
		return 0
	})
	var yo = []
 
	for (var g = 0; g < 10; g++) {
		if (tops.length > g) {
			let ups = g; 
			ups += 1;
			if(g <= 8) ups = `${ups}&#8419;` 
			if(g == 9) ups = `&#128287;`
			yo.push({ id: tops[g].id, vk: tops[g].vk, balance: tops[g].balance, prefix: tops[g].prefix, smile: `${ups}` })
		}
	}
	text = "üí¥ –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ üí¥ \n" + yo.map(a => a.smile + `. ${a.prefix} >> vk.com/id${a.vk} >> ${Math.round(a.balance)} Coins`).join("\n") 
 

	for (i=0;i<tops.length;i++) {
		if(message.user == tops[i].vk) {
			return message.send(text + `\n- - - - - -\n~ –í—ã –Ω–∞ ${i+1} –º–µ—Å—Ç–µ ~`)
		}
	} 
});


bot.hear(/^(?:–∫–ª–∏–∫)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let ss = f.rand(100,200);
	if(user.vip >= 1){ 
	ss += f.rand(200,300) 
	} 
	
	user.balance += ss; 
	return message.send(` 
	@id${message.user}(${user.prefix}), –∫—Ä—É—Ç–æ –∫–ª–∏–∫–∞–µ—à—åüòÉ!\nüí∞–¢—ã –Ω–∞–∫–ª–∏–∫–∞–ª(–∞): ${f.spaces(Math.round(ss))} coins `,
	{
		keyboard:JSON.stringify(
	{
		"one_time": false,
		"buttons": [
		[{
			"action": {
			"type": "text",
			"payload": "{\"button\": \"1\"}",
			"label": "–ö–õ–ò–ö"
	},
		"color": "positive"
	},
	{
			"action": {
			"type": "text",
			"payload": "{\"button\": \"2\"}",
			"label": "–ü—Ä–æ—Ñ–∏–ª—å"
	},
		"color": "positive"
		},
	{
			"action": {
			"type": "text",
			"payload": "{\"button\": \"3\"}",
			"label": "–¢–û–ü"
	},
		"color": "positive"
		},
		{
			"action": {
			"type": "text",
			"payload": "{\"button\": \"4\"}",
			"label": "–ö–û–ú–ê–ù–î–´"
		},
			"color": "positive"
		}]
	]
		})
	});
	}
	);


//—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ 

bot.hear(/^(?:–∫—Ç–æ —è)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let rez = [true, false].random();
	if(rez == false){
	}else{ 
		let count = ['–ò–≤–∞–Ω–≥–∞–π','–¢–æ–ø—á–∏–∫','—Ç–µ–ª–∫–∞','–ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ—Ä','—á–º–æ','–∫—Ä—É—Ç–æ–π','–ø—Ä–∏–Ω—Ü','—Ç–µ–ª–∫–∞ –∞–¥–º–∏–Ω–∞','—á–µ–ª–æ–≤–µ–∫','–ø–µ—Å','–æ–≤—Ü–∞','–ª–æ—Ö','—ä–µ—ä','–∫–∏—Å—è','–ü–∞–Ω–∏–Ω','–¥–µ–±–∏–ª','–±–æ–≥–∞—Ç—ã–π','–º–∏–ª–ª–∏–æ–Ω–µ—Ä','–∞—É–µ—à–Ω–∏–∫','–ø–ª–æ—Ö–æ–π —á–µ–ª–æ–≤–µ–∫','—Å–Ω–µ–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫','–ø—É–∫–∞–Ω','—Å—ã–Ω –º–∞–º–∏–Ω–æ–π –ø–æ–¥—Ä—É–≥–∏','–æ—Ç–µ—Ü 7-—Ö –∫–æ–∑–ª—è—Ç','–∫–∞–∫–∞—à–∫–∞ –µ–¥–∏–Ω–æ—Ä–æ–≥–∞','–ö–∞–ø–∏—Ç–∞–Ω','–≥–æ–≤–Ω–æ','—É–ø–æ—Ä–æ—Ç—ã–π','–∞–ª–∫–∞—à','—Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä','–ø—á–µ–ª–∫–∞','—Ñ–µ—è','–ê–Ω–∂–µ–ª–ª–∞','–†–∏–∫–∞—Ä–¥–æ –ú–∏–ª–æ—Å',' —Ñ–ª–µ–∫—Å–µ—Ä','–ü—É—Ç–∏–Ω','–ù–∞–≤–∞–ª—å–Ω—ã–π','–æ—Ñ–Ω–∏–∫','—Å–ø—É–ª–∞–µ –º—É–ª–∞–µ',' –≥–æ–Ω—â–∏–∫ –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã–π','–±–æ–± —Å—Ç—Ä–æ–∏—Ç–µ–ª—å','—Ü–µ–ª–∫–∞','—à–ª—é—à–∫–∞','—Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞'].random();
		return message.send(`–î—É–º–∞—é —á—Ç–æ —Ç—ã ${count} :)`);
	}
}); 
bot.hear(/^(?:—à–∞—Ä)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let rez = [true].random();
	if(rez == false){
	}else{ 
		let count = ['–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ', '—Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å', '–ø–æ–∫–∞ –Ω–µ —è—Å–Ω–æ', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–î–∞"', '–∑–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - "–ù–µ—Ç"', '–º–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º', '–º–æ–π –æ—Ç–≤–µ—Ç - "–Ω–µ—Ç"', '–º–æ–π –æ—Ç–≤–µ—Ç - "–¥–∞"', '–±–µ—Å—Å–ø–æ—Ä–Ω–æ', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–î–∞"', '–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è - "–ù–µ—Ç"'].random();
		return message.send(`üòÉ ${count}`);
	}
}); 
bot.hear(/^(?:–∫–æ–≥–¥–∞)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let rez = [true].random();
	if(rez == false){
	}else{ 

		return message.reply(`üòÉ –î—É–º–∞—é —á—Ç–æ —á–µ—Ä–µ–∑ ${rand(1,360)} –¥–Ω–µ–π`);
	}
}); 
bot.hear(/^(?:–ª—Ç–µ—Å—Ç)/i, (message) => { 
	let user = acc.users.find(a => a.vk === message.user); 
	let rez = [true].random();
	if(rez == false){
	}else{ 

		return message.reply(`üë©‚Äç‚öïüíñ –¢–µ—Å—Ç –ø–æ–∫–∞–∑–∞–ª, –≤–∞—Å –ª—é–±—è—Ç  ${rand(1,397)} —á–µ–ª–æ–≤–µ–∫`);
	}
});

/*----------------------------------------------------------------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////
////DEVELOPER - TEMA DOBRIY (FPSKIN)/////////DEVELOPER - TEMA DOBRIY (FPSKIN)/////////DEVELOPER - TEMA DOBRIY (FPSKIN)/////////DEVELOPER - TEMA DOBRIY (FPSKIN)

bot.hear(/^(?:eval)\s?([^]+)?/i, (message) => { 
	let args = message.$match; 
	if(message.user != 167888509) return;
	return message.send(`${eval(args[1])}`);
});

function rand(min, max) {return Math.round(Math.random() * (max - min)) + min} 
var parserInt = (str) => parseInt(str.replace(/k|–∫/ig, "000"));
function spaces(string) {
	if (typeof string !== "string") string = string.toString();
	return string.split("").reverse().join("").match(/[0-9]{1,3}/g).join(".").split("").reverse().join("");
};
Array.prototype.random = function() {  
	return this[Math.floor(this.length * Math.random())];
}
/*----------------------------------------------------------------------------------------------------------*/////DEVELOPER - TEMA DOBRIY (FPSKIN)/////

 setInterval(function(){
	for (i=0;i<acc.users.length;i++) {
	 	let u = acc.users[i];
		if (u) {
			u.balance += Number(u.modules['1'].profit * u.modules['1'].count);
		 	u.balance += Number(u.modules['2'].profit * u.modules['2'].count);
		 	u.balance += Number(u.modules['3'].profit * u.modules['3'].count);
		 	u.balance += Number(u.modules['4'].profit * u.modules['4'].count);
		 	u.balance += Number(u.modules['5'].profit * u.modules['5'].count);
		 	u.balance += Number(u.modules['6'].profit * u.modules['6'].count);

		 	if (u.vip == 1) { u.balance += 20 }
		 	if (u.vip == 2) { u.balance += 40 }
		 	if (u.vip == 3) { u.balance += 60 }
		} 
	 }
}, 1000);

setInterval(function () { 

	user.api.status.set({ 
	group_id: 181324393, 
	text: `üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${acc.number}`}); 
	
	}, 60000);
/*----------------------------------------------------------------------------------------------------------*/
async function run() {
	await vk.updates.startPolling(); 
}
run().then(() => {
	    console.log('[START] --> ' + f.time());
})
.catch((error) => {
	    console.error('[ERROR] | '+error);
});

/*----------------------------------------------------------------------------------------------------------*/
 
 






