console.log(' –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ , –ø–æ–¥–æ–∂–¥–∏—Ç–µ! ');
const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
let user = new VK();
user.setOptions({
	token: 'a5dbc6cf7ad4af41354be284632aefab94bf1c1585a3981e51fbdbd9d6c02b0eea7332ea28f58429a3d80'
});
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");

const cars = [
	{
		name: '–°–∞–º–æ–∫–∞—Ç',
		cost: 500,
		id: 1
	},
	{
		name: '–í–µ–ª–æ—Å–∏–ø–µ–¥',
		cost: 2500,
		id: 2
	},
	{
		name: '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä',
		cost: 5000,
		id: 3
	},
	{
		name: '–°–µ–≥–≤–µ–π',
		cost: 7500,
		id: 4
	},
	{
		name: '–ú–æ–ø–µ–¥',
		cost: 25000,
		id: 5
	},
	{
		name: '–ú–æ—Ç–æ—Ü–∏–∫–ª',
		cost: 50000,
		id: 6
	},
	{
		name: '–í–ê–ó 2109',
		cost: 75000,
		id: 7
	},
	{
		name: '–ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª',
		cost: 80000,
		id: 8
	},
	{
		name: '–ë–∞–≥–≥–∏',
		cost: 135000,
		id: 9
	},
	{
		name: '–í–µ–∑–¥–µ—Ö–æ–¥',
		cost: 200000,
		id: 10
	},
	{
		name: '–õ–∞–¥–∞ Xray',
		cost: 350000,
		id: 11
	},
	{
		name: 'Audi Q7',
		cost: 750000,
		id: 12
	},
	{
		name: 'BMW X6',
		cost: 1000000,
		id: 13
	},
	{
		name: 'Toyota FT-HS',
		cost: 1750000,
		id: 14
	},
	{
		name: 'BMW Z4 M',
		cost: 2500000,
		id: 15
	},
	{
		name: 'Subaru WRX STI',
		cost: 2750000,
		id: 16
	},
	{
		name: 'Lamborghini Veneno',
		cost: 3000000,
		id: 17
	},
	{
		name: 'Tesla Roadster',
		cost: 4500000,
		id: 18
	},
	{
		name: 'Yamaha YZF R6',
		cost: 5000000,
		id: 19
	},
	{
		name: 'Bugatti Chiron',
		cost: 6500000,
		id: 20
	},
	{
		name: 'Thrust SSC',
		cost: 35000000,
		id: 21
	},
	{
		name: 'Ferrari LaFerrari',
		cost: 39000000,
		id: 22
	},
	{
		name: 'Koenigsegg Regear',
		cost: 50000000,
		id: 23
	},
	{
		name: 'Tesla Semi',
		cost: 75000000,
		id: 24
	},
	{
		name: 'Venom GT',
		cost: 125000000,
		id: 25
	},
	{
		name: 'Rolls-Royce',
		cost: 200000000,
		id: 26
	}
];

const yachts = [
	{
		name: '–í–∞–Ω–Ω–∞',
		cost: 10000,
		id: 1
	},
	{
		name: 'Nauticat 331',
		cost: 10000000,
		id: 2
	},
	{
		name: 'Nordhavn 56 MS',
		cost: 15000000,
		id: 3
	},
	{
		name: 'Princess 60',
		cost: 25000000,
		id: 4
	},
	{
		name: 'Azimut 70',
		cost: 35000000,
		id: 5
	},
	{
		name: 'Dominator 40M',
		cost: 50000000,
		id: 6
	},
	{
		name: 'Moonen 124',
		cost: 60000000,
		id: 7
	},
	{
		name: 'Wider 150',
		cost: 65000000,
		id: 8
	},
	{
		name: 'Palmer Johnson 42M SuperSport',
		cost: 80000000,
		id: 9
	},
	{
		name: 'Wider 165',
		cost: 85000000,
		id: 10
	},
	{
		name: 'Eclipse',
		cost: 150000000,
		id: 11
	},
	{
		name: 'Dubai',
		cost: 300000000,
		id: 12
	},
	{
		name: 'Streets of Monaco',
		cost: 750000000,
		id: 13
	}
];

const airplanes = [
	{
		name: '–ü–∞—Ä–∞–ø–ª–∞–Ω',
		cost: 100000,
		id: 1
	},
	{
		name: '–ê–ù-2',
		cost: 350000,
		id: 2
	},
	{
		name: 'Cessna-172E',
		cost: 700000,
		id: 3
	},
	{
		name: 'Supermarine Spitfire',
		cost: 1000000,
		id: 4
	},
	{
		name: 'BRM NG-5',
		cost: 1400000,
		id: 5
	},
	{
		name: 'Cessna T210',
		cost: 2600000,
		id: 6
	},
	{
		name: 'Beechcraft 1900D',
		cost: 5500000,
		id: 7
	},
	{
		name: 'Cessna 550',
		cost: 8000000,
		id: 8
	},
	{
		name: 'Hawker 4000',
		cost: 22400000,
		id: 9
	},
	{
		name: 'Learjet 31',
		cost: 45000000,
		id: 10
	},
	{
		name: 'Airbus A318',
		cost: 85000000,
		id: 11
	},
	{
		name: 'F-35A',
		cost: 160000000,
		id: 12
	},
	{
		name: 'Boeing 747-430 Custom',
		cost: 225000000,
		id: 13
	},
	{
		name: 'C-17A Globemaster III',
		cost: 350000000,
		id: 14
	},
	{
		name: 'F-22 Raptor',
		cost: 400000000,
		id: 15
	},
	{
		name: 'Airbus 380 Custom',
		cost: 600000000,
		id: 16
	},
	{
		name: 'B-2 Spirit Stealth Bomber',
		cost: 1359000000,
		id: 17
	}
];

const helicopters = [
	{
		name: '–®–∞—Ä–∏–∫ —Å –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–º',
		cost: 2,
		id: 1
	},
	{
		name: 'RotorWay Exec 162F',
		cost: 300000,
		id: 2
	},
	{
		name: 'Robinson R44',
		cost: 450000,
		id: 3
	},
	{
		name: 'Hiller UH-12C',
		cost: 1300000,
		id: 4
	},
	{
		name: 'AW119 Koala',
		cost: 2500000,
		id: 5
	},
	{
		name: 'MBB BK 117',
		cost: 4000000,
		id: 6
	},
	{
		name: 'Eurocopter EC130',
		cost: 7500000,
		id: 7
	},
	{
		name: 'Leonardo AW109 Power',
		cost: 10000000,
		id: 8
	},
	{
		name: 'Sikorsky S-76',
		cost: 15000000,
		id: 9
	},
	{
		name: 'Bell 429WLG',
		cost: 19000000,
		id: 10
	},
	{
		name: 'NHI NH90',
		cost: 35000000,
		id: 11
	},
	{
		name: 'Kazan Mi-35M',
		cost: 60000000,
		id: 12
	},
	{
		name: 'Bell V-22 Osprey',
		cost: 135000000,
		id: 13
	}
];

const homes = [
	{
		name: '–ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞',
		cost: 250,
		id: 1
	},
	{
		name: '–ü–æ–¥–≤–∞–ª',
		cost: 3000,
		id: 2
	},
	{
		name: '–ü–∞–ª–∞—Ç–∫–∞',
		cost: 3500,
		id: 3
	},
	{
		name: '–î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ',
		cost: 5000,
		id: 4
	},
	{
		name: '–ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º',
		cost: 10000,
		id: 5
	},
	{
		name: '–î–æ–º –≤ –ª–µ—Å—É',
		cost: 25000,
		id: 6
	},
	{
		name: '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º',
		cost: 37500,
		id: 7
	},
	{
		name: '–î–∞—á–∞',
		cost: 125000,
		id: 8
	},
	{
		name: '–ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º',
		cost: 80000,
		id: 9
	},
	{
		name: '–ö–æ—Ç—Ç–µ–¥–∂',
		cost: 450000,
		id: 10
	},
	{
		name: '–û—Å–æ–±–Ω—è–∫',
		cost: 1250000,
		id: 11
	},
	{
		name: '–î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ',
		cost: 5000000,
		id: 12
	},
	{
		name: '–õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–±',
		cost: 7000000,
		id: 13
	},
	{
		name: '–û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º',
		cost: 12500000,
		id: 14
	},
	{
		name: '–ë–µ–ª—ã–π –¥–æ–º',
		cost: 20000000,
		id: 15
	}
];

const apartments = [
	{
		name: '–ß–µ—Ä–¥–∞–∫',
		cost: 15000,
		id: 1
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏',
		cost: 55000,
		id: 2
	},
	{
		name: '–û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 175000,
		id: 3
	},
	{
		name: '–î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 260000,
		id: 4
	},
	{
		name: '–ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 500000,
		id: 5
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã',
		cost: 1600000,
		id: 6
	},
	{
		name: '–î–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
		cost: 4000000,
		id: 7
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º',
		cost: 6000000,
		id: 8
	}
];

const phones = [
	{
		name: 'Nokia 108',
		cost: 250,
		id: 1
	},
	{
		name: 'Nokia 3310 (2017)',
		cost: 500,
		id: 2
	},
	{
		name: 'ASUS ZenFone 4',
		cost: 2000,
		id: 3
	},
	{
		name: 'BQ Aquaris X',
		cost: 10000,
		id: 4
	},
	{
		name: 'Sony Xperia XA',
		cost: 15000,
		id: 5
	},
	{
		name: 'Samsung Galaxy S8',
		cost: 30000,
		id: 6
	},
	{
		name: 'Xiaomi Mi Mix',
		cost: 50000,
		id: 7
	},
	{
		name: 'Torex FS1',
		cost: 75000,
		id: 8
	},
	{
		name: 'iPhone X',
		cost: 100000,
		id: 9
	},
	{
		name: '–ú–µ–≥–∞—Ñ–æ–Ω –°1',
		cost: 250000,
		id: 10
	}
];

const farms = [
	{
		name: '6U Nvidia',
		cost: 1050000000,
		id: 1
	},
	{
		name: 'AntminerS9',
		cost: 50000000000,
		id: 2
	},
	{
		name: 'FM2018-BT200',
		cost: 150000000000,
		id: 3
	}
]

const businesses = [
	[
	    {
			name: 'üåØ –®–∞—É—Ä–º–∏—á–Ω–∞—è',
			cost: 50000,
			earn: 400,
			id: 1,
			icon: 'ü•ñ'
		},
		{ // –ü–µ—Ä–≤–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: 'üåØ5 —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 250000,
			earn: 2000,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // –í—Ç–æ—Ä–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: 'üåØ –ù–µ–±–æ–ª—å—à–∞—è —Å–µ—Ç—å —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 1000000,
			earn: 8500,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // 3 —É–ª—É—á—à–µ–Ω–∏–µ
			name: 'üåØ –°—Ä–µ–¥–Ω—è—è —Å–µ—Ç—å —à–∞—É—Ä–º–µ—á–Ω—ã—Ö',
			cost: 3000000,
			earn: 30000,
			id: 1,
			icon: 'ü•ñ'
		},

		{ // –ü–æ—Å–ª–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ
			name: 'üåØ –õ—É—á—à–∞—è —à–∞—É—Ä–º–∞ –≤ —Å—Ç—Ä–∞–Ω–µ',
			cost: 10000000,
			earn: 85000,
			id: 1,
			icon: 'ü•ñ'
		}
	],
    [
		{
			name: 'üçè –õ–∞—Ä—ë–∫',
			cost: 100000,
			earn: 700,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '5 –ª–∞—Ä—å–∫–æ–≤',
			cost: 500000,
			earn: 3700,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–°—Ä–µ–¥–Ω—è—è —Å–µ—Ç—å –ª–∞—Ä—å–∫–æ–≤',
			cost: 1500000,
			earn: 10000,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–õ–∞—Ä—å–∫–∏ –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö —Å—Ç—Ä–∞–Ω—ã',
			cost: 5500000,
			earn: 45000,
			id: 2,
			icon: 'üè™'
		},

		{
			name: '–õ–∞—Ä—å–∫–∏ –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–µ',
			cost: 15000000,
			earn: 125000,
			id: 2,
			icon: 'üè™'
		}
	],
    [
 	    {
			name: 'üèÆ –†–µ—Å—Ç–æ—Ä–∞–Ω',
			cost: 500000,
			earn: 3500,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: 'üèÆ –ë–æ–ª—å—à–æ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω',
			cost: 2000000,
			earn: 12500,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: 'üèÆ –ù–µ–±–æ–ª—å—à–∞—è —Å–µ—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω',
			cost: 4500000,
			earn: 25000,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: 'üèÆ –†–µ—Å—Ç–æ—Ä–∞–Ω—ã –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ',
			cost: 15000000,
			earn: 85000,
			id: 3,
			icon: 'üç∑'
		},

		{
			name: 'üèÆ –°–µ—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –º–∏—Ä–µ',
			cost: 50000000,
			earn: 350000,
			id: 3,
			icon: 'üç∑'
		}
	],
	[
		{
			name: 'üõí –ú–∞–≥–∞–∑–∏–Ω',
			cost: 2000000,
			earn: 12000,
			id: 4,
			icon: 'üè´'
		},
		{
			name: 'üõí –ú–∏–Ω–∏–º–∞—Ä–∫–µ—Ç',
			cost: 5000000,
			earn: 25000,
			id: 4,
			icon: 'üè´'
		},

		{
			name: 'üõí –°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç',
			cost: 2000000,
			earn: 110000,
			id: 4,
			icon: 'üè´'
		},

		{
			name: 'üõí –°–µ—Ç—å –º–∞–≥–∞–∑–∏–Ω–æ–≤',
			cost: 35000000,
			earn: 185000,
			id: 4,
			icon: 'üè´'
		},

		{
			name: 'üõí –°–µ—Ç—å —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–æ–≤',
			cost: 80000000,
			earn: 400000,
			id: 4,
			icon: 'üè´'
		}
	],
	[
		{
			name: '‚öô –ó–∞–≤–æ–¥',
			cost: 1500000,
			earn: 15000,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '‚öô –°—Ä–µ–¥–Ω–∏–π –∑–∞–≤–æ–¥',
			cost: 5000000,
			earn: 45000,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '‚öô –°–µ—Ç—å –∑–∞–≤–æ–¥–æ–≤',
			cost: 25000000,
			earn: 150000,
			id: 5,
			icon: 'üè≠'
		},

		{
			name: '‚öô –ì–ª–∞–≤–Ω—ã–µ –∑–∞–≤–æ–¥—ã —Å—Ç—Ä–∞–Ω—ã',
			cost: 100000000,
			earn: 500000,
			id: 5,
			icon: 'üè≠'
		}
	],
    [
		{
			name: '‚öô ‚õè –®–∞—Ö—Ç–∞',
			cost: 25000000,
			earn: 95000,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '‚õè –ó–æ–ª–æ—Ç–∞—è —à–∞—Ö—Ç–∞',
			cost: 50000000,
			earn: 200000,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '‚õè –ê–ª–º–∞–∑–Ω–∞—è —à–∞—Ö—Ç–∞',
			cost: 80000000,
			earn: 350000,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '‚õè –î–µ–º–æ–Ω–∏—Ç–æ–≤—ã–π –∫–∞—Ä—å–µ—Ä',
			cost: 150000000,
			earn: 750000,
			id: 6,
			icon: '‚õè'
		},

		{
			name: '‚õè –®–∞—Ö—Ç–∞ - Zond21',
			cost: 250000000,
			earn: 1450000,
			id: 6,
			icon: '‚õè'
		}
	],
	[
		{
			name: 'üìä –û—Ñ–∏—Å',
			cost: 80000000,
			earn: 220000,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: 'üìä –°—Ä–µ–¥–Ω–∏–π –æ—Ñ–∏—Å',
			cost: 240000000,
			earn: 329175,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: 'üìä –ë–æ–ª—å—à–æ–π –æ—Ñ–∏—Å',
			cost: 240000000,
			earn: 614675,
			id: 7,
			icon: 'üè¢'
		},

		{
			name: 'üìä –û—Ñ–∏—Å - Future ',
			cost: 1000000000,
			earn: 1227275,
			id: 7,
			icon: 'üè¢'
		}
	],
	[
		{
			name: 'üíª Unity Game',
			cost: 150000000,
			earn: 300000,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: 'üíª –ò–Ω–¥–∏ GameDev',
			cost: 200000000,
			earn: 379500,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: 'üíª Python Game',
			cost: 750000000,
			earn: 1024500,
			id: 8,
			icon: 'üïπ'
		},

		{
			name: 'üíª Java Game',
			cost: 5000000000,
			earn: 6749500,
			id: 8,
			icon: 'üïπ'
		}
	],
	[
		{
			name: '‚õΩ –ù–µ—Ñ—Ç–µ–≤—ã—à–∫–∞',
			cost: 500000000,
			earn: 700000,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '‚õΩ –ù–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ –º–æ—Ä–µ',
			cost: 750000000,
			earn: 1019000,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '‚õΩ –ù–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ –æ–∫–µ–∞–Ω–µ',
			cost: 1250000000,
			earn: 4049000,
			id: 9,
			icon: 'üèú'
		},

		{
			name: '‚õΩ 5 –Ω–µ—Ñ—Ç–µ–ø–ª–∞—Ç—Ñ–æ—Ä–º –≤ –æ–∫–µ–∞–Ω–µ',
			cost: 5000000000,
			earn: 15249000,
			id: 9,
			icon: 'üèú'
		}
	],
	[
		{
			name: 'üîã –ê—Ç–æ–º–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è',
			cost: 800000000,
			earn: 10000000,
			id: 10,
			icon: 'üí°'
		},

		{
			name: 'üîã –°—Ä–µ–¥–Ω—è—è –ê–≠–°',
			cost: 1200000000,
			earn: 1496200,
			id: 10,
			icon: 'üí°'
		},

		{
			name: 'üîã –ê–≠–° —Å 5 —ç–Ω–µ—Ä–≥–æ–±–ª–æ–∫–∞–º–∏',
			cost: 4250000000,
			earn: 3088700,
			id: 10,
			icon: 'üí°'
		},

		{
			name: 'üîã –ö—Ä—É–ø–Ω–µ–π—à–∞—è –ê–≠–°',
			cost: 10000000000,
			earn: 34843700,
			id: 10,
			icon: 'üí°'
		}
	],
	[
		{
			name: 'üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			cost: 50000000000,
			earn: 350000000,
			id: 11,
			icon: 'üó∫'
		},
		{
			name: 'üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			cost: 150000000000,
			earn: 550000000,
			id: 11,
			icon: 'üó∫'
		},
		{
			name: 'üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			cost: 250000000000,
			earn: 900000000,
			id: 11,
			icon: 'üó∫'
		},
		{
			name: 'üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			cost: 650000000000,
			earn: 1700000000,
			id: 11,
			icon: 'üó∫'
		},
		{
			name: 'üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ',
			cost: 900000000000,
			earn: 2500000000,
			id: 11,
			icon: 'üó∫'
		}
	]
];

const works = [
	{
		name: '–î–≤–æ—Ä–Ω–∏–∫ –≤ –î—É–±–∞–µ',
		requiredLevel: 1,
		min: 12000,
		max: 13000,
		id: 1
	},
	{
		name: '–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ –≤ –î—É–±–∞–µ',
		requiredLevel: 3,
		min: 23750,
		max: 24000,
		id: 2
	},
	{
		name: '–≠–ª–µ–∫—Ç—Ä–∏–∫ –≤ –î—É–±–∞–µ',
		requiredLevel: 5,
		min: 34000,
		max: 34500,
		id: 3
	},
	{
		name: '–°–ª–µ—Å–∞—Ä—å –≤ –î—É–±–∞–µ',
		requiredLevel: 8,
		min: 45000,
		max: 45500,
		id: 4
	},
	{
		name: '–Æ—Ä–∏—Å—Ç –ø—Ä–µ—Å—Ç–∏–∂–Ω–æ–≥–æ –ê–≥–µ–Ω—Å—Ç–≤–∞',
		requiredLevel: 10,
		min: 120000,
		max: 90000,
		id: 5
	},
	{
		name: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä',
		requiredLevel: 14,
		min: 210000,
		max: 190000,
		id: 6
	},
	{
		name: '–ë–∞—Ä–º–µ–Ω –≤ —ç–ª–∏—Ç–Ω–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ',
		requiredLevel: 22,
		min: 360000,
		max: 340000,
		id: 7
	},
	{
		name: '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –∫–ª–µ—Ä–∫',
		requiredLevel: 25,
		min: 720000,
		max: 690000,
		id: 8
	},
	{
		name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç',
		requiredLevel: 49,
		min: 10000000,
		max: 9900000,
		id: 9
	},
	{
		name: '–ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä',
		requiredLevel: 100,
		min: 100000000,
		max: 10000000,
		id: 10
	}
];

const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 18) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω', '–∫–≤–¥—Ä–ª', '–∫–≤–Ω—Ç–ª'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–æ—Ö–µ—Ä–∞!');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±'
}

let btc = 6000;

let users = require('./users.json');
let promo = require('./promo.json');
let buttons = [];

setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
	console.log('');
}, 60000);

setInterval(async () => {
	users.filter(x=> x.misc.farm !== 0).map(x=> {
		if(x.misc.farm === 1)
		{
			x.farm_btc += 2;
		}

		if(x.misc.farm === 2)
		{
			x.farm_btc += 10;
		}

		if(x.misc.farm === 3)
		{
			x.farm_btc += 100;
		}
	});
}, 3600000);

setInterval(async () => {
	users.map(user => {
		if(user.business)
		{
			const biz = businesses.find(x=> x.id === user.business);
			if(!biz) return;

			user.biz += biz.earn;
		}
	});
}, 3600000);

setInterval(async () => { 
	users.map(user => { 
	for(var i = 0; i < user.business.length; i++) 
	{ 
	const biz = businesses[user.business[i].id - 1][user.business[i].upgrade - 1]; 
	user.business[i].moneys += Math.floor(biz.earn) 
	} 
	}); 
}, 3600000);


function getUnix() {
	return Date.now();
}

function SetDate(count) {
	let date = new Date(count),
		mont = date.getMonth() + 1,
		year = date.getFullYear() < 10 ? "0"+date.getFullYear() : date.getFullYear(),
		month = mont < 10 ? "0"+mont : mont,
		day = date.getDate() < 10 ? "0"+date.getDate() : date.getDate(),
		hour = date.getHours() < 10 ? "0"+date.getHours() : date.getHours(),
		mins = date.getMinutes() < 10 ? "0"+date.getMinutes() : date.getMinutes(),
		secs = date.getSeconds() < 10 ? "0"+date.getSeconds() : date.getSeconds();

	return `${day}.${month}.${year}, ${hour}:${mins}:${secs}`;
}

function clearTemp()
{
	users.map(user => {
	});
}

clearTemp();

async function saveUsers()
{
	require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
	require('fs').writeFileSync('./promo.json', JSON.stringify(promo, null, '\t'));
	return true;
}

vk.setOptions({ token: '0e3f6eb65a7756dfbdf43d0ea1985f7f809460d9f0b99f3612814a1df9a5933c4cf52fe67f6b10fa1d471', pollingGroupId: 179751437 });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[club179751437\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club179751437\|(.*)\]/ig, '').trim();

	if(!users.find(x=> x.id === message.senderId))

	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		users.push({
			RIGHT: 1,
			id: message.senderId,
			uid: users.length,
			balance: 10000,
			bank: 0,
			btc: 0,
			farm_btc: 0,
			rating: 0,
			referalss: 0,
			regDate: getUnix(),
			mention: true,
			ban: false,
			timers: {
				hasWorked: false,
				translation: false,
				obva: false,
				krik: false,
				bonus: false
			},
			tag: user_info.first_name,
			work: 0,
			business: [],
			notifications: true,
			exp: 1,
			level: 1,
			referal: null,
			transport: {
				car: 0,
				yacht: 0,
				airplane: 0,
				helicopter: 0
			},
			realty: {
				home: 0,
				apartment: 0
			},
			misc: {
			phone: 0,
			farm: 0,
			farm_count: 0
			},
			marriage: {
				partner: 0,
				requests: []
			}
		});
	}

	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return;

	const bot = (text, params) => {
		return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
	}

	const command = commands.find(x=> x[0].test(message.text));
	if(!command) return;

	if(message.user.exp >= 10)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`USER: ${message.text}`)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}


cmd.hear(/^(?:Eval|!|admin|zz|administrator)\s([^]+)$/i, async (message, bot) => {
if(message.senderId !== 376231311 && message.senderId !== 517521841 && message.senderId !== 416199577) return;
	try {
		const result = eval(message.args[1]);

		if(typeof(result) === 'string')
		{
			return bot(`string: ${result}`);
		} else if(typeof(result) === 'number')
		{
			return bot(`number: ${result}`);
		} else {
			return bot(`${typeof(result)}: ${JSON.stringify(result, null, '&#12288;\t')}`);
		}
	} catch (e) {
		console.error(e);
		return bot(`–æ—à–∏–±–∫–∞:
		${e.toString()}`);
	}
});


cmd.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|–º–µ–Ω—é|help|commands|cmds|menu|–Ω–∞—á–∞—Ç—å|start)$/i, async (message, bot) => {
	await bot(`–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
‚ùì –ü–æ–º–æ—â—å [–∫–æ–º–∞–Ω–¥–∞] - –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã

üöÄ –ò–≥—Ä—ã:
‚†Ä‚†Äüé≤ –ö—É–±–∏–∫ [1-6]
‚†Ä‚†Äüé∞ –ö–∞–∑–∏–Ω–æ [—Å—É–º–º–∞]
‚†Ä‚†Äüìà –¢—Ä–µ–π–¥ [–≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑] [—Å—É–º–º–∞]
  üí• –ú–æ–Ω–µ—Ç–∫–∞ [—Å—É–º–º–∞] [–æ—Ä–µ–ª/—Ä–µ—à–∫–∞]
‚†Ä‚†Äü•õ –°—Ç–∞–∫–∞–Ω—á–∏–∫ [1-3] [—Å—É–º–º–∞]
‚†Ä‚†Äüî¶ –°–µ–π—Ñ [—Å–ª—É—á–∞–π–Ω—ã–µ 2 —Ü–∏—Ñ—Ä—ã] 
üëî –†–∞–±–æ—Ç–∞ - —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç
‚†Äüî® –†–∞–±–æ—Ç–∞—Ç—å
‚†Ä‚ùå –£–≤–æ–ª–∏—Ç—å—Å—è
üíº –ë–∏–∑–Ω–µ—Å:
‚†Ä‚†Äüìà –ë–∏–∑–Ω–µ—Å 1/2 - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚†Ä‚†Äüíµ –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å 1/2 - —Å–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á—ë—Ç–∞

üî•–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: –ü–æ–ª–µ–∑–Ω–æ–µ:
üì† –†–µ—à–∏ [–ø—Ä–∏–º–µ—Ä]
üìä –ö—É—Ä—Å

üí° –†–∞–∑–Ω–æ–µ:
üìí –ü—Ä–æ—Ñ–∏–ª—å
üí≤ –ë–∞–ª–∞–Ω—Å
üí∞ –ë–∞–Ω–∫ [—Å—É–º–º–∞/—Å–Ω—è—Ç—å —Å—É–º–º–∞]
üëë –†–µ–π—Ç–∏–Ω–≥ - –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥
‚úí –ù–∏–∫ [–Ω–∏–∫/–≤–∫–ª/–≤—ã–∫–ª]
üõí –ú–∞–≥–∞–∑–∏–Ω
‚ûñ –ü—Ä–æ–¥–∞—Ç—å [–ø—Ä–µ–¥–º–µ—Ç]
üîã –§–µ—Ä–º–∞ - –±–∏—Ç–∫–æ–∏–Ω —Ñ–µ—Ä–º–∞
ü§ù –ü–µ—Ä–µ–¥–∞—Ç—å [id] [—Å—É–º–º–∞]
üèÜ –¢–æ–ø
üíé –ë–æ–Ω—É—Å - –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
üë™ –ë—Ä–∞–∫ [id] - —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
‚†Ä ‚†Ä–ë—Ä–∞–∫–∏ - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
üíî –†–∞–∑–≤–æ–¥
‚åö –î–∞—Ç–∞ [id] - –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
üë´ –†–µ—Ñ–µ—Ä–∞–ª - –¥–µ–Ω—å–≥–∏ –∑–∞ –¥—Ä—É–∑–µ–π
üíµ –î–æ–Ω–∞—Ç - –∫—É–ø–∏—Ç—å –∏–≥—Ä–æ–≤—É—é –≤–∞–ª—é—Ç—É
üíµ –í–∏–ø –∏–Ω—Ñ–æ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤–∏–ø–∞
üíµ –ê–¥–º–∏–Ω –∏–Ω—Ñ–æ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞
üíµ –ì–ª –∏–Ω—Ñ–æ - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã –ì–ª–∞–≤–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üÜò –†–µ–ø–æ—Ä—Ç [—Ñ—Ä–∞–∑–∞] - –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è`);
});

cmd.hear(/^(?:–±–æ–Ω—É—Å|bonus)$/i, async (message, bot) => {
	if(message.user.timers.bonus) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ 1 —á–∞—Å–∞`);
	let prize = utils.pick([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);

	setTimeout(() => {
		message.user.timers.bonus = false;
	}, 3600000);

	message.user.timers.bonus = true;

	if(prize === 1)
	{
		message.user.btc += 10000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10.000‚Çø`);
	}
	if(prize === 2)
	{
		message.user.btc += 1000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000‚Çø`);
	}
	if(prize === 3)
	{
		message.user.btc += 2000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 2.000‚Çø`);
	}
	if(prize === 4)
	{
		message.user.btc += 15000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000‚Çø`);
	}
	if(prize === 5)
	{
		message.user.balance += 5000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000.000$`);
	}
	if(prize === 6)
	{
		message.user.balance += 50000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$`);
	}
	if(prize === 7)
	{
		message.user.balance += 500000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 500.000.000$`);
	}
	if(prize === 8)
	{
		message.user.balance += 1000000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1.000.000.000$`);
	}
	if(prize === 9)
	{
		message.user.bank += 5000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 5.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
	if(prize === 10)
	{
		message.user.bank += 10000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
	if(prize === 11)
	{
		message.user.bank += 50000000;
		return bot(`–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 50.000.000$ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`);
	}
});

cmd.hear(/^(?:–æ–±–Ω—É–ª–∏—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.RIGHT < 4 || message.user.RIGHT === 2 || message.user.RIGHT === 3) return bot(`—É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!`);
	
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
    else if(user)
	{
		bot(`–í—ã –æ–±–Ω—É–ª–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag})!`);
            user.RIGHT = 1;
			user.balance = 10000;
			user.bank = 0;
			user.btc = 0;
			user.farm_btc = 0;
			user.farm_count = 0;
			user.rating = 0;
			user.referalss = 0;
			user.mention = true;
			user.ban = false;
				hasWorked = false
				translation = false
				obva = false
				krik = false
				bonus = false
			user.work = 0;
			user.business = [];
			user.notifications = true;
			user.exp = 1;
			user.level = 1;
			user.referal = null;
	}
});

cmd.hear(/^(?:–ø–æ–∏—Å–∫)(\shttps\:\/\/vk\.com\/)?(id)?([^]+)?$/i, async (message, bot) => { 
if(message.user.RIGHT < 2) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –í–∏–ø–∞`); 
if(!message.args[3]) return bot(`–£–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ`)
const [user_info] = await vk.api.call("users.get", {user_ids: message.args[3] });
let userid = user_info.id;
let user = users.find(x=> x.id === Number(userid)); 
if (!user.id) return message.send(`–ù–µ –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ | –ò–≥—Ä–æ–∫–∞ –Ω–µ—Ç`); 
return message.send(` 
–ò–≥—Ä–æ–∫: ${user.tag} 
ID: ${user.uid} 
`); 
});
cmd.hear(/^(?:—Ä–∞—Å—Å—ã–ª–∫–∞)\s([^]+)$/i, async (message, bot) => {
if(message.user.RIGHT < 4) return;
users.filter(x=> x.id !== 1).map(zz => { 
vk.api.messages.send({ user_id: zz.id, message: `${message.args[1]}`}); 
}); 
let people = 0;
bot(`—Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`);
for(let id in users) {
vk.api.call('messages.send', {
chat_id: id,
message: `${message.args[1]}` });
}
return;
});

function getRandomElement(array) { 
return array[getRandomInt(array.length - 1)]; 
} 

function getRandomInt(x, y) { 
return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x); 
} 

function spaces(string) { 
if (typeof string !== "string") string = string.toString(); 
return string.split("").reverse().join("").match(/[0-9]{1,3}/g).join(".").split("").reverse().join(""); 
}; 
Array.prototype.random = function() { 
return this[Math.floor(this.length * Math.random())]; 
} 

var parserInt = (str) => parseInt(str.replace(/k|–∫/ig, "000"));



Array.prototype.random = function() { 
return this[Math.floor(this.length * Math.random())]; 
} 

function rand(min, max) { 
return Math.round(Math.random() * (max - min)) + min 
} 

function spaces(string) { 
if (typeof string !== "string") string = string.toString(); 
return string.split("").reverse().join("").match(/[0-9]{1,3}/g).join(".").split("").reverse().join(""); 
};

cmd.hear(/^(?:–ø–æ–≥–æ–¥–∞|weather)/i, async (message, bot) => {
let args = message.text.match(/^(?:–ø–æ–≥–æ–¥–∞|weather)\s?(.*)/i);
if(args[1].toLowerCase() == "") return message.send(nope)
rq("http://api.openweathermap.org/data/2.5/weather?q=" + encodeURIComponent(args[1]) + "&appid=fe198ba65970ed3877578f728f33e0f9&units=metric")
.then((res) => {
let Utils = {
filter: (text) => { 
text = text.replace(/^(RU)/i, '–†–æ—Å—Å–∏—è')
text = text.replace(/^(UA)/i, '–£–∫—Ä–∞–∏–Ω–∞')
text = text.replace(/^(BY)/i, '–ë–µ–ª–∞—Ä—É—Å—å')
text = text.replace(/^(KZ)/i, '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω')
text = text.replace(/^(AE)/i, '–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –ê—Ä–∞–±—Å–∫–∏–µ –≠–º–∏—Ä–∞—Ç—ã')
return text;
}};
function TempTo () {
if(res.main.temp < -10) return '–æ—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ'
else if(res.main.temp < -5) return '—Ö–æ–ª–æ–¥–Ω–æ'
else if(res.main.temp < 5) return '—Ö–æ–ª–æ–¥–Ω–æ–≤–∞—Ç–æ'
else if(res.main.temp < 20) return '–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ'
else if(res.main.temp < 25) return '—Ç–µ–ø–ª–æ'
else if(res.main.temp < 30) return '–∂–∞—Ä–∫–æ'
else if(res.main.temp < 50) return '–û—á–µ–Ω—å –∂–∞—Ä–∫–æ'
};
function Timer () {
let now = new Date(res.dt*1000).getHours();
if(now > 18) return 'üåÜ'
else if(now > 22) return 'üåÉ'
else if(now > 0) return 'üåÉ'
else if(now < 6) return 'üåÖ'
else if(now < 12) return 'üèû'
};
var sunrise = new Date(res.sys.sunrise*1000);
var sunset = new Date(res.sys.sunset*1000);
function sunmin () {
if(sunrise.getMinutes() < 10) "0" + sunrise.getMinutes();
return sunset.getMinutes();
};
function sunsmin () {
if(sunset.getMinutes() < 10) "0" + sunset.getMinutes();
return sunset.getMinutes();
};
function daterh () {
if(date.getHours() < 10) "0" + date.getHours();
return date.getHours()
};
function daterm () {
if(date.getMinutes() < 10) "0" + date.getMinutes();
return date.getMinutes();
};
var date = new Date(res.dt*1000);
return message.reply(`${Timer()} ${res.name}, ${Utils.filter(res.sys.country)}

‚ûñ –°–µ–π—á–∞—Å —Ç–∞–º ${TempTo()}: ${res.main.temp}¬∞–°
‚ûñ –†–∞—Å—Å–≤–µ—Ç: ${sunrise.getHours()}:${sunmin()}
‚ûñ –ó–∞–∫–∞—Ç: ${sunset.getHours()}:${sunsmin()}
‚ûñ –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${res.wind.speed} –º/—Å`)})
});


cmd.hear(/^(?:–≥–∏—Ñ|gif)/i, async (message, bot) => {
       vk.api.call('docs.search', {q: utils.pick(['—Ä–∂–∞–∫–∞', '–∏–≥—Ä—ã', '–∫–∞–≤–∞–∏', '–ª–∞–π—Ñ—Ö–∞–∫–∏', '—Ç—è–Ω', '–∫—Ä–∞—Ñ—Ç', '–ª—é–±–æ–≤—å', '–∞–Ω–∏–º–µ', '–∂–∏–≤–æ—Ç–Ω—ã–µ', '5 minute', '–ø–∏–∑–¥–µ—Ü', '—Å–º–µ—à–Ω–æ', '–º–µ–º', '–∫–ª–∞—Å—Å–Ω–æ', '–Ω—è', '–ø–∏–∫—á–∞', '–∞–≤–∞—Ä–∏—è']) + '.gif', count: 1})
        .then(response => {
            let items = response.items.map(x => `doc${x.owner_id}_${x.id}`).join(',');
            let item = utils.pick(response.items);
            message.send({attachment: items})
        })
});

cmd.hear(/^(?:–ø—Ä–µ–≤–µ–ª–µ–≥–∏—è|–ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–ø|—Ä–∏–≤–µ–ª–µ–≥–∏—è|—Å—Ç–∞—Ç—É—Å|right)$/i, async (message, bot) => {
	bot(`üî•–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: ${message.user.RIGHT.toString().replace(/1/gi, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").replace(/2/gi, "-VIP-").replace(/3/gi, "–ê–¥–º–∏–Ω").replace(/4/gi, "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä").replace(/5/gi, "–°–æ–∑–¥–∞—Ç–µ–ª—å")}\n`);
});

cmd.hear(/^(?:–ø—Ä–æ—Ñ–∏–ª—å|–ø—Ä–æ—Ñ|–ø—Ä—Ñ|)$/i, async (message, bot) => {
	let text = ``;
	text += `üî•–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è: ${message.user.RIGHT.toString().replace(/1/gi, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").replace(/2/gi, "-VIP-").replace(/3/gi, "–ê–¥–º–∏–Ω").replace(/4/gi, "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä").replace(/5/gi, "–°–æ–∑–¥–∞—Ç–µ–ª—å")}\n`;
	
	text += `üîé ID: ${message.user.uid}\n`;
	text += `üí∞ –î–µ–Ω–µ–≥: ${utils.sp(message.user.balance)}$\n`;
	if(message.user.bank) text += `üí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$\n`;
	if(message.user.btc) text += `üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}\n`;
	text += `üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}\n`;
	if(message.user.work) text += `üëî –†–∞–±–æ—Ç–∞: ${works[message.user.work - 1].name}\n`;
	if(message.user.marriage.partner) text += `üë¨ –ü–∞—Ä—Ç–Ω–µ—Ä: ${users[message.user.marriage.partner].tag}\n`;
	text += `üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.level} [${message.user.exp}/24]\n`;
	text += `üì¢–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${users.filter(x=> x.referal === message.user.uid).length}\n`;

	if(message.user.transport.car || message.user.transport.yacht || message.user.transport.airplane || message.user.transport.helicopter ||
		message.user.realty.home || message.user.realty.apartment ||
		message.user.misc.phone || message.user.misc.farm || message.user.business)
	{
		text += `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;

		if(message.user.transport.car) text += `‚†Äüöó –ú–∞—à–∏–Ω–∞: ${cars[message.user.transport.car - 1].name}\n`;
		if(message.user.transport.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${yachts[message.user.transport.yacht - 1].name}\n`;
		if(message.user.transport.airplane) text += `‚†Äüõ© –°–∞–º–æ–ª—ë—Ç: ${airplanes[message.user.transport.airplane - 1].name}\n`;
		if(message.user.transport.helicopter) text += `‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç: ${helicopters[message.user.transport.helicopter - 1].name}\n`;
		
		if(message.user.realty.home) text += `‚†Äüè† –î–æ–º: ${homes[message.user.realty.home - 1].name}\n`;
		if(message.user.realty.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${apartments[message.user.realty.apartment - 1].name}\n`;

		if(message.user.misc.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phones[message.user.misc.phone - 1].name}\n`;
		if(message.user.misc.farm) text += `‚†Äüîã –§–µ—Ä–º–∞: ${farms[message.user.misc.farm - 1].name} -- ${message.user.misc.farm_count} –∫–æ–ª-–≤–æ -- \n`;
		if(message.user.business.length != 0)
		{
			for(var i = 0; i < message.user.business.length; i++)
			{
				text += `‚†Ä${ businesses[message.user.business[i].id - 1][message.user.business[i].upgrade - 1].icon } ${businesses[message.user.business[i].id - 1][message.user.business[i].upgrade - 1].name}\n`;
			}
		}
	}

	text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${SetDate(message.user.regDate)}`;
	return bot(`—Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n${text}`);
});
cmd.hear(/^(?:–í—ã—á–µ—Å–ª–∏—Ç—å|–í—ã—á–∏—Å–ª–∏—Ç—å)$/i, async (message, bot) => {
if(message.user.RIGHT < 2) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –í–∏–ø–∞`); 
const [user_info] = await vk.api.call("users.get", { id_senderId });
let userid = user_info.id;
if(user){ 
	let text = ``;
	text += `üî• ${user.RIGHT.toString().replace(/1/gi, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").replace(/2/gi, "-VIP-").replace(/3/gi, "–ê–¥–º–∏–Ω").replace(/4/gi, "–°–æ–∑–¥–∞—Ç–µ–ª—å")}\n`;
	
	text += `üîé ID: ${user.uid}\n`;
	text += `üí∞ –î–µ–Ω–µ–≥: ${utils.sp(user.balance)}$\n`;
	if(user.bank) text += `üí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(user.bank)}$\n`;
	if(user.btc) text += `üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(user.btc)}\n`;
	text += `üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(user.rating)}\n`;
	if(user.work) text += `üëî –†–∞–±–æ—Ç–∞: ${works[user.work - 1].name}\n`;
	if(user.marriage.partner) text += `üë¨ –ü–∞—Ä—Ç–Ω–µ—Ä: ${users[user.marriage.partner].tag}\n`;
	text += `üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.level} [${user.exp}/24]\n`;
	text += `üì¢–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${users.filter(x=> x.referal ===user.uid).length}\n`;

	if(user.transport.car || user.transport.yacht || user.transport.airplane || user.transport.helicopter ||
		user.realty.home || user.realty.apartment ||
		user.misc.phone || user.misc.farm || user.business)
	{
		text += `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;

		if(user.transport.car) text += `‚†Äüöó –ú–∞—à–∏–Ω–∞: ${cars[user.transport.car - 1].name}\n`;
		if(user.transport.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${yachts[user.transport.yacht - 1].name}\n`;
		if(user.transport.airplane) text += `‚†Äüõ© –°–∞–º–æ–ª—ë—Ç: ${airplanes[user.transport.airplane - 1].name}\n`;
		if(user.transport.helicopter) text += `‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç: ${helicopters[user.transport.helicopter - 1].name}\n`;
		
		if(user.realty.home) text += `‚†Äüè† –î–æ–º: ${homes[user.realty.home - 1].name}\n`;
		if(user.realty.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${apartments[user.realty.apartment - 1].name}\n`;

		if(user.misc.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phones[user.misc.phone - 1].name}\n`;
		if(user.misc.farm) text += `‚†Äüîã –§–µ—Ä–º–∞: ${farms[user.misc.farm - 1].name}  (${user.misc.farm_count}—à—Ç) \n`;
		if(user.business.length != 0)
		{
			for(var i = 0; i < message.user.business.length; i++)
			{
				text += `‚†Ä${ businesses[user.business[i].id - 1][user.business[i].upgrade - 1].icon } ${businesses[user.business[i].id - 1][user.business[i].upgrade - 1].name}\n`;
			}
		}
	}

	text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${SetDate(user.regDate)}`;
return bot(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag})!\n${text}`)};
if(!user){ 
return bot(`–ò–∑–≤–∏–Ω–∏ , –Ω–æ —è –Ω–µ –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`); 
} 
});


cmd.hear(/^(?:–ù–∞–π—Ç–∏)\s([0-9]+)$/i, async (message, bot) => { 
if(message.user.RIGHT < 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç VIP'a`); 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(user){ 
	let text = ``;
	text += `üî• ${user.RIGHT.toString().replace(/1/gi, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å").replace(/2/gi, "-VIP-").replace(/3/gi, "–ê–¥–º–∏–Ω").replace(/4/gi, "–°–æ–∑–¥–∞—Ç–µ–ª—å")}\n`;
	
	text += `üîé ID: ${user.uid}\n`;
	text += `üí∞ –î–µ–Ω–µ–≥: ${utils.sp(user.balance)}$\n`;
	if(user.bank) text += `üí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(user.bank)}$\n`;
	if(user.btc) text += `üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(user.btc)}\n`;
	text += `üëë –†–µ–π—Ç–∏–Ω–≥: ${utils.sp(user.rating)}\n`;
	if(user.work) text += `üëî –†–∞–±–æ—Ç–∞: ${works[user.work - 1].name}\n`;
	if(user.marriage.partner) text += `üë¨ –ü–∞—Ä—Ç–Ω–µ—Ä: ${users[user.marriage.partner].tag}\n`;
	text += `üåü –£—Ä–æ–≤–µ–Ω—å: ${message.user.level} [${user.exp}/24]\n`;
	text += `üì¢–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${users.filter(x=> x.referal ===user.uid).length}\n`;

	if(user.transport.car || user.transport.yacht || user.transport.airplane || user.transport.helicopter ||
		user.realty.home || user.realty.apartment ||
		user.misc.phone || user.misc.farm || user.business)
	{
		text += `\nüîë –ò–º—É—â–µ—Å—Ç–≤–æ:\n`;

		if(user.transport.car) text += `‚†Äüöó –ú–∞—à–∏–Ω–∞: ${cars[user.transport.car - 1].name}\n`;
		if(user.transport.yacht) text += `‚†Äüõ• –Ø—Ö—Ç–∞: ${yachts[user.transport.yacht - 1].name}\n`;
		if(user.transport.airplane) text += `‚†Äüõ© –°–∞–º–æ–ª—ë—Ç: ${airplanes[user.transport.airplane - 1].name}\n`;
		if(user.transport.helicopter) text += `‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª—ë—Ç: ${helicopters[user.transport.helicopter - 1].name}\n`;
		
		if(user.realty.home) text += `‚†Äüè† –î–æ–º: ${homes[user.realty.home - 1].name}\n`;
		if(user.realty.apartment) text += `‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä–∞: ${apartments[user.realty.apartment - 1].name}\n`;

		if(user.misc.phone) text += `‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phones[user.misc.phone - 1].name}\n`;
		if(user.misc.farm) text += `‚†Äüîã –§–µ—Ä–º–∞: ${farms[user.misc.farm - 1].name}  (${user.misc.farm_count}—à—Ç) \n`;
		if(user.business.length != 0)
		{
			for(var i = 0; i < message.user.business.length; i++)
			{
				text += `‚†Ä${ businesses[user.business[i].id - 1][user.business[i].upgrade - 1].icon } ${businesses[user.business[i].id - 1][user.business[i].upgrade - 1].name}\n`;
			}
		}
	}

	text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${SetDate(user.regDate)}`;
return bot(`–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ @id${user.id} (${user.tag})!\n${text}`)};
if(!user){ 
return bot(`–ò–∑–≤–∏–Ω–∏ , –Ω–æ —è –Ω–µ –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`); 
} 
});


cmd.hear(/^(?:—Ñ–µ—Ä–º—ã)\s?([0-9]+)?\s?(.*)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–ú–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º—ã: 
${message.user.misc.farm === 1 ? 'üîπ' : 'üî∏'} 1. 6U Nvidia 2.500‚Çø/—á–∞—Å (1.050.000.000$)
${message.user.misc.farm === 2 ? 'üîπ' : 'üî∏'} 2. AntminerS9 15.000‚Çø/—á–∞—Å (50.000.000.000$)
${message.user.misc.farm === 3 ? 'üîπ' : 'üî∏'} 3. FM2018-BT200 100.000‚Çø/—á–∞—Å (150.000.000.000$)


–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–§–µ—Ä–º—ã [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);

	const sell = farms.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	const count = Math.floor(message.args[2] ? Number(message.args[2]) : 1);
	if(count <= 0) return bot(`–Ω–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å 0 —Ñ–µ—Ä–º –∏–ª–∏ –º–µ–Ω—å—à–µ`);
	if(count + message.user.misc.farm_count > 1000) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–º–µ—Ç—å –±–æ–ª—å—à–µ 1000 —Ñ–µ—Ä–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ`);
	if(message.user.misc.farm != 0 && message.user.misc.farm != message.args[1]) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Ñ–µ—Ä–º—É –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞`);

	if(message.user.balance < sell.cost * count) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost * count)
	{
		message.user.balance -= sell.cost * count;
		message.user.misc.farm = sell.id;
		message.user.misc.farm_count += count;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" (${count} —à—Ç.) –∑–∞ ${utils.sp(sell.cost * count)}$`);
	}
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1])
	{
		var text = `–±–∏–∑–Ω–µ—Å—ã:\n`;
		for(var i = 0; i < businesses.length; i++)
		{
			text += `${(message.user.business.length == 1 && message.user.business[0].id == i + 1) || (message.user.business.length == 2 && message.user.business[1].id == i + 1) ? 'üî∏' : 'üîπ'} ${i + 1}. ${businesses[i][0].name} - ${utils.sp(businesses[i][0].cost)}$\n–ü—Ä–∏–±—ã–ª—å: ${utils.sp(businesses[i][0].earn)}$/—á–∞—Å\n`;
		}
		return bot(text);
	}
	/*return bot(`–±–∏–∑–Ω–µ—Å—ã:
${message.user.business[0].id == 1 || message.user.business[1].id == 1 ? 'üî∏' : 'üîπ'} 1. –®–∞—É—Ä–º–µ—á–Ω–∞—è - 50.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 400$/—á–∞—Å
${message.user.business[0].id == 2 || message.user.business[1].id == 2 ? 'üî∏' : 'üîπ'} 2. –õ–∞—Ä—ë–∫ - 100.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700$/—á–∞—Å
${message.user.business[0].id == 3 || message.user.business[1].id == 3 ? 'üî∏' : 'üîπ'} 3. –ó–∞–±–µ–≥–∞–ª–æ–≤–∫–∞ - 300.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 2.500$/—á–∞—Å
${message.user.business[0].id == 4 || message.user.business[1].id == 4 ? 'üî∏' : 'üîπ'} 4. –ú–∞–≥–∞–∑–∏–Ω - 500.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 3.800$/—á–∞—Å
${message.user.business[0].id == 5 || message.user.business[1].id == 5 ? 'üî∏' : 'üîπ'} 5. –ó–∞–≤–æ–¥ - 1.500.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 8.000$/—á–∞—Å
${message.user.business[0].id == 6 || message.user.business[1].id == 6 ? 'üî∏' : 'üîπ'} 6. –®–∞—Ö—Ç–∞ - 25.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 70.000$/—á–∞—Å
${message.user.business[0].id == 7 || message.user.business[1].id == 7 ? 'üî∏' : 'üîπ'} 7. –û—Ñ–∏—Å - 80.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 220.000$/—á–∞—Å
${message.user.business[0].id == 8 || message.user.business[1].id == 8 ? 'üî∏' : 'üîπ'} 8. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä - 150.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 300.000$/—á–∞—Å
${message.user.business[0].id == 9 || message.user.business[1].id == 9 ? 'üî∏' : 'üîπ'} 9. –ù–µ—Ñ—Ç–µ–≤—ã—à–∫–∞ - 500.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 700.000$/—á–∞—Å
${message.user.business[0].id == 10 || message.user.business[1].id == 10 ? 'üî∏' : 'üîπ'} 10. –ê—Ç–æ–º–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è - 800.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 1.000.000$/—á–∞—Å
${message.user.business[0].id == 11 || message.user.business[1].id == 11 ? 'üî∏' : 'üîπ'} 11. üõ∞ –ö–æ—Å–º–∏—á–µ—Å–∫–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ - 10.000.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 100.000.000$/—á–∞—Å
${message.user.business[0].id == 12 || message.user.business[1].id == 12 ? 'üî∏' : 'üîπ'} 12. üåë –ù–∞—É—á–Ω–∞—è –±–∞–∑–∞ –Ω–∞ –õ—É–Ω–µ - 120.000.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 1.000.000.000$/—á–∞—Å
${message.user.business[0].id == 13 || message.user.business[1].id == 13 ? 'üî∏' : 'üîπ'} 13. üåê –ù–∞—É—á–Ω–∞—è –±–∞–∑–∞ –Ω–∞ –ú–∞—Ä—Å–µ - 1.200.000.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 5.000.000.000$/—á–∞—Å
${message.user.business[0].id == 14 || message.user.business[1].id == 14 ? 'üî∏' : 'üîπ'} 14. üéÜ –ù–∞—É—á–Ω–∞—è –±–∞–∑–∞ –Ω–∞ –ü–ª—É—Ç–æ–Ω–µ - 50.000.000.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 20.000.000.000$/—á–∞—Å
${message.user.business[0].id == 15 || message.user.business[1].id == 15 ? 'üî∏' : 'üîπ'} 15. üåç –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –ü–ª–∞–Ω–µ—Ç–∞ - 100.000.000.000.000$
‚†Ä ‚†Ä ‚†Ä –ü—Ä–∏–±—ã–ª—å: 35.000.000.000$/—á–∞—Å
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ë–∏–∑–Ω–µ—Å—ã [–Ω–æ–º–µ—Ä]"`);*/

	if(message.user.business.length == 2) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å 2 –±–∏–∑–Ω–µ—Å–∞`);

	message.args[1] = Number(message.args[1]) - 1;
	const sell = businesses[message.args[1]][0];
	if(sell == null) return;
	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	message.user.balance -= sell.cost;
	message.user.business.push({
		"id": message.args[1] + 1,
		"upgrade": 1,
		"moneys": 0
	});

	return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
});

cmd.hear(/^(?:–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏)\s([^]+)$/i, async (message, bot) => {
	let text = ``;
	message.args[1].split('').map(x=> {
		if(rotateText[x])
		{
			text += rotateText[x];
		}
	});

	return bot(`–¥–µ—Ä–∂–∏ : "${text.split('').reverse().join('')}"`)
});

cmd.hear(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–º–∞—à–∏–Ω—ã: 
${message.user.transport.car === 1 ? 'üîπ' : 'üî∏'} 1. –°–∞–º–æ–∫–∞—Ç (500$)
${message.user.transport.car === 2 ? 'üîπ' : 'üî∏'} 2. –í–µ–ª–æ—Å–∏–ø–µ–¥ (2.500$)
${message.user.transport.car === 3 ? 'üîπ' : 'üî∏'} 3. –ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä (5.000$)
${message.user.transport.car === 4 ? 'üîπ' : 'üî∏'} 4. –°–µ–≥–≤–µ–π (7.500$)
${message.user.transport.car === 5 ? 'üîπ' : 'üî∏'} 5. –ú–æ–ø–µ–¥ (25.000$)
${message.user.transport.car === 6 ? 'üîπ' : 'üî∏'} 6. –ú–æ—Ç–æ—Ü–∏–∫–ª (50.000$)
${message.user.transport.car === 7 ? 'üîπ' : 'üî∏'} 7. –í–ê–ó 2109 (75.000$)
${message.user.transport.car === 8 ? 'üîπ' : 'üî∏'} 8. –ö–≤–∞–¥—Ä–æ—Ü–∏–∫–ª (80.000$)
${message.user.transport.car === 9 ? 'üîπ' : 'üî∏'} 9. –ë–∞–≥–≥–∏ (135.000$)
${message.user.transport.car === 10 ? 'üîπ' : 'üî∏'} 10. –í–µ–∑–¥–µ—Ö–æ–¥ (200.000$)
${message.user.transport.car === 11 ? 'üîπ' : 'üî∏'} 11. –õ–∞–¥–∞ Xray (350.000$)
${message.user.transport.car === 12 ? 'üîπ' : 'üî∏'} 12. Audi Q7 (750.000$)
${message.user.transport.car === 13 ? 'üîπ' : 'üî∏'} 13. BMW X6 (1.000.000$)
${message.user.transport.car === 14 ? 'üîπ' : 'üî∏'} 14. Toyota FT-HS (1.750.000$)
${message.user.transport.car === 15 ? 'üîπ' : 'üî∏'} 15. BMW Z4 M (2.500.000$)
${message.user.transport.car === 16 ? 'üîπ' : 'üî∏'} 16. Subaru WRX STI (2.750.000$)
${message.user.transport.car === 17 ? 'üîπ' : 'üî∏'} 17. Lamborghini Veneno (3.000.000$)
${message.user.transport.car === 18 ? 'üîπ' : 'üî∏'} 18. Tesla Roadster (4.500.000$)
${message.user.transport.car === 19 ? 'üîπ' : 'üî∏'} 19. Yamaha YZF R6 (5.000.000$)
${message.user.transport.car === 20 ? 'üîπ' : 'üî∏'} 20. Bugatti Chiron (6.500.000$)
${message.user.transport.car === 21 ? 'üîπ' : 'üî∏'} 21. Thrust SSC (35.000.000$)
${message.user.transport.car === 22 ? 'üîπ' : 'üî∏'} 22. Ferrari LaFerrari (39.000.000$)
${message.user.transport.car === 23 ? 'üîπ' : 'üî∏'} 23. Koenigsegg Regera (50.000.000$)
${message.user.transport.car === 24 ? 'üîπ' : 'üî∏'} 24. Tesla Semi (75.000.000$)
${message.user.transport.car === 25 ? 'üîπ' : 'üî∏'} 25. Venom GT (125.000.000$)
${message.user.transport.car === 26 ? 'üîπ' : 'üî∏'} 26. Rolls-Royce (200.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ú–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = cars.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.car) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ (${cars[message.user.transport.car - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.car = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—è—Ö—Ç—ã|—è—Ö—Ç–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—è—Ö—Ç—ã: 
${message.user.transport.yacht === 1 ? 'üîπ' : 'üî∏'} 1. –í–∞–Ω–Ω–∞ (10.000$)
${message.user.transport.yacht === 2 ? 'üîπ' : 'üî∏'} 2. Nauticat 331 (10.000.000$)
${message.user.transport.yacht === 3 ? 'üîπ' : 'üî∏'} 3. Nordhavn 56 MS (15.000.000$)
${message.user.transport.yacht === 4 ? 'üîπ' : 'üî∏'} 4. Princess 60 (25.000.000$)
${message.user.transport.yacht === 5 ? 'üîπ' : 'üî∏'} 5. Azimut 70 (35.000.000$)
${message.user.transport.yacht === 6 ? 'üîπ' : 'üî∏'} 6. Dominator 40M (50.000.000$)
${message.user.transport.yacht === 7 ? 'üîπ' : 'üî∏'} 7. Moonen 124 (60.000.000$)
${message.user.transport.yacht === 8 ? 'üîπ' : 'üî∏'} 8. Wider 150 (65.000.000$)
${message.user.transport.yacht === 9 ? 'üîπ' : 'üî∏'} 9. Palmer Johnson 42M SuperSport (80.000.000$)
${message.user.transport.yacht === 10 ? 'üîπ' : 'üî∏'} 10. Wider 165 (85.000.000$)
${message.user.transport.yacht === 11 ? 'üîπ' : 'üî∏'} 11. Eclipse (150.000.000$)
${message.user.transport.yacht === 12 ? 'üîπ' : 'üî∏'} 12. Dubai (300.000.000$)
${message.user.transport.yacht === 13 ? 'üîπ' : 'üî∏'} 13. Streets of Monaco (750.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–Ø—Ö—Ç–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = yachts.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.yacht) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —è—Ö—Ç–∞ (${yachts[message.user.transport.yacht - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —è—Ö—Ç—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.yacht = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Å–∞–º–æ–ª(?:–µ|—ë)—Ç|—Å–∞–º–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Å–∞–º–æ–ª–µ—Ç—ã: 
${message.user.transport.airplane === 1 ? 'üîπ' : 'üî∏'} 1. –ü–∞—Ä–∞–ø–ª–∞–Ω (100.000$)
${message.user.transport.airplane === 2 ? 'üîπ' : 'üî∏'} 2. –ê–ù-2 (350.000$)
${message.user.transport.airplane === 3 ? 'üîπ' : 'üî∏'} 3. Cessna-172E (700.000$)
${message.user.transport.airplane === 4 ? 'üîπ' : 'üî∏'} 4. Supermarine Spitfire (1.000.000$)
${message.user.transport.airplane === 5 ? 'üîπ' : 'üî∏'} 5. BRM NG-5 (1.400.000$)
${message.user.transport.airplane === 6 ? 'üîπ' : 'üî∏'} 6. Cessna T210 (2.600.000$)
${message.user.transport.airplane === 7 ? 'üîπ' : 'üî∏'} 7. Beechcraft 1900D (5.500.000$)
${message.user.transport.airplane === 8 ? 'üîπ' : 'üî∏'} 8. Cessna 550 (8.000.000$)
${message.user.transport.airplane === 9 ? 'üîπ' : 'üî∏'} 9. Hawker 4000 (22.400.000$)
${message.user.transport.airplane === 10 ? 'üîπ' : 'üî∏'} 10. Learjet 31 (45.000.000$)
${message.user.transport.airplane === 11 ? 'üîπ' : 'üî∏'} 11. Airbus A318 (85.000.000$)
${message.user.transport.airplane === 12 ? 'üîπ' : 'üî∏'} 12. F-35A (160.000.000$)
${message.user.transport.airplane === 13 ? 'üîπ' : 'üî∏'} 13. Boeing 747-430 Custom (225.000.000$)
${message.user.transport.airplane === 14 ? 'üîπ' : 'üî∏'} 14. C-17A Globemaster III (350.000.000$)
${message.user.transport.airplane === 15 ? 'üîπ' : 'üî∏'} 15. F-22 Raptor (400.000.000$)
${message.user.transport.airplane === 16 ? 'üîπ' : 'üî∏'} 16. Airbus 380 Custom (600.000.000$)
${message.user.transport.airplane === 17 ? 'üîπ' : 'üî∏'} 17. B-2 Spirit Stealth Bomber (1.359.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–°–∞–º–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"`);



	const sell = airplanes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.airplane) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç (${airplanes[message.user.transport.airplane - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–ª—ë—Ç"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.airplane = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç|–≤–µ—Ä—Ç–æ–ª(?:–µ|—ë)—Ç—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–≤–µ—Ä—Ç–æ–ª–µ—Ç—ã: 
${message.user.transport.helicopter === 1 ? 'üîπ' : 'üî∏'} 1. –®–∞—Ä–∏–∫ —Å –ø—Ä–æ–ø–µ–ª–ª–µ—Ä–æ–º (2$)
${message.user.transport.helicopter === 2 ? 'üîπ' : 'üî∏'} 2. RotorWay Exec 162F (300.000$)
${message.user.transport.helicopter === 3 ? 'üîπ' : 'üî∏'} 3. Robinson R44 (450.000$)
${message.user.transport.helicopter === 4 ? 'üîπ' : 'üî∏'} 4. Hiller UH-12C (1.300.000$)
${message.user.transport.helicopter === 5 ? 'üîπ' : 'üî∏'} 5. AW119 Koala (2.500.000$)
${message.user.transport.helicopter === 6 ? 'üîπ' : 'üî∏'} 6. MBB BK 117 (4.000.000$)
${message.user.transport.helicopter === 7 ? 'üîπ' : 'üî∏'} 7. Eurocopter EC130 (7.500.000$)
${message.user.transport.helicopter === 8 ? 'üîπ' : 'üî∏'} 8. Leonardo AW109 Power (10.000.000$)
${message.user.transport.helicopter === 9 ? 'üîπ' : 'üî∏'} 9. Sikorsky S-76 (15.000.000$)
${message.user.transport.helicopter === 10 ? 'üîπ' : 'üî∏'} 10. Bell 429WLG (19.000.000$)
${message.user.transport.helicopter === 11 ? 'üîπ' : 'üî∏'} 11. NHI NH90 (35.000.000$)
${message.user.transport.helicopter === 12 ? 'üîπ' : 'üî∏'} 12. Kazan Mi-35M (60.000.000$)
${message.user.transport.helicopter === 13 ? 'üîπ' : 'üî∏'} 13. Bell V-22 Osprey (135.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–í–µ—Ä—Ç–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]"`);

	const sell = helicopters.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.transport.helicopter) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç (${homes[message.user.transport.helicopter - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –≤–µ—Ä—Ç–æ–ª—ë—Ç"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.transport.helicopter = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:–¥–æ–º|–¥–æ–º–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–¥–æ–º–∞: 
${message.user.realty.home === 1 ? 'üîπ' : 'üî∏'} 1. –ö–æ—Ä–æ–±–∫–∞ –∏–∑-–ø–æ–¥ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ (250$)
${message.user.realty.home === 2 ? 'üîπ' : 'üî∏'} 2. –ü–æ–¥–≤–∞–ª (3.000$)
${message.user.realty.home === 3 ? 'üîπ' : 'üî∏'} 3. –ü–∞–ª–∞—Ç–∫–∞ (3.500$)
${message.user.realty.home === 4 ? 'üîπ' : 'üî∏'} 4. –î–æ–º–∏–∫ –Ω–∞ –¥–µ—Ä–µ–≤–µ (5.000$)
${message.user.realty.home === 5 ? 'üîπ' : 'üî∏'} 5. –ü–æ–ª—É—Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –¥–æ–º (10.000$)
${message.user.realty.home === 6 ? 'üîπ' : 'üî∏'} 6. –î–æ–º –≤ –ª–µ—Å—É (25.000$)
${message.user.realty.home === 7 ? 'üîπ' : 'üî∏'} 7. –î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –¥–æ–º (37.500$)
${message.user.realty.home === 8 ? 'üîπ' : 'üî∏'} 8. –î–∞—á–∞ (125.000$)
${message.user.realty.home === 9 ? 'üîπ' : 'üî∏'} 9. –ö–∏—Ä–ø–∏—á–Ω—ã–π –¥–æ–º (80.000$)
${message.user.realty.home === 10 ? 'üîπ' : 'üî∏'} 10. –ö–æ—Ç—Ç–µ–¥–∂ (450.000$)
${message.user.realty.home === 11 ? 'üîπ' : 'üî∏'} 11. –û—Å–æ–±–Ω—è–∫ (1.250.000$)
${message.user.realty.home === 12 ? 'üîπ' : 'üî∏'} 12. –î–æ–º –Ω–∞ –†—É–±–ª—ë–≤–∫–µ (5.000.000$)
${message.user.realty.home === 13 ? 'üîπ' : 'üî∏'} 13. –õ–∏—á–Ω—ã–π –Ω–µ–±–æ—Å–∫—Ä—ë–± (7.000.000$)
${message.user.realty.home === 14 ? 'üîπ' : 'üî∏'} 14. –û—Å—Ç—Ä–æ–≤ —Å –æ—Å–æ–±–Ω—è–∫–æ–º (12.500.000$)
${message.user.realty.home === 15 ? 'üîπ' : 'üî∏'} 15. –ë–µ–ª—ã–π –¥–æ–º (20.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–î–æ–º [–Ω–æ–º–µ—Ä]"`);

	const sell = homes.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.realty.home) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º (${homes[message.user.realty.home - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –¥–æ–º"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.realty.home = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Å—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É|—Å—Å—ã–ª–∫–∞|–±–µ—Å–µ–¥–∞ –æ—Ñ—Ñ)\s?([0-9]+)?$/i, async (message, bot) => {
         return bot(`—Å—Å—ã–ª–∫–∞ –Ω–∞ –±–µ—Å–µ–¥—É https://vk.me/join/AJQ1d/jkHxEcxa5DtH/sN3cB "`);
});
cmd.hear(/^(?:–∫–≤–∞—Ä—Ç–∏—Ä–∞|–∫–≤–∞—Ä—Ç–∏—Ä—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–∫–≤–∞—Ä—Ç–∏—Ä—ã: 
${message.user.realty.apartment === 1 ? 'üîπ' : 'üî∏'} 1. –ß–µ—Ä–¥–∞–∫ (15.000$)
${message.user.realty.apartment === 2 ? 'üîπ' : 'üî∏'} 2. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏ (55.000$)
${message.user.realty.apartment === 3 ? 'üîπ' : 'üî∏'} 3. –û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (175.000$)
${message.user.realty.apartment === 4 ? 'üîπ' : 'üî∏'} 4. –î–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (260.000$)
${message.user.realty.apartment === 5 ? 'üîπ' : 'üî∏'} 5. –ß–µ—Ç—ã—Ä–µ—Ö–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (500.000$)
${message.user.realty.apartment === 6 ? 'üîπ' : 'üî∏'} 6. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã (1.600.000$)
${message.user.realty.apartment === 7 ? 'üîπ' : 'üî∏'} 7. –î–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ (4.000.000$)
${message.user.realty.apartment === 8 ? 'üîπ' : 'üî∏'} 8. –ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å –ï–≤—Ä–æ—Ä–µ–º–æ–Ω—Ç–æ–º (6.000.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ö–≤–∞—Ä—Ç–∏—Ä–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = apartments.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.realty.apartment) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞ (${apartments[message.user.realty.apartment - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.realty.apartment = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});

cmd.hear(/^(?:—Ç–µ–ª–µ—Ñ–æ–Ω|—Ç–µ–ª–µ—Ñ–æ–Ω—ã)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`—Ç–µ–ª–µ—Ñ–æ–Ω—ã: 
${message.user.misc.phone === 1 ? 'üîπ' : 'üî∏'} 1. Nokia 108 (250$)
${message.user.misc.phone === 2 ? 'üîπ' : 'üî∏'} 2. Nokia 3310 (2017) (500$)
${message.user.misc.phone === 3 ? 'üîπ' : 'üî∏'} 3. ASUS ZenFone 4 (2.000$)
${message.user.misc.phone === 4 ? 'üîπ' : 'üî∏'} 4. BQ Aquaris X (10.000$)
${message.user.misc.phone === 5 ? 'üîπ' : 'üî∏'} 5. Sony Xperia XA (15.000$)
${message.user.misc.phone === 6 ? 'üîπ' : 'üî∏'} 6. Samsung Galaxy S8 (30.000$)
${message.user.misc.phone === 7 ? 'üîπ' : 'üî∏'} 7. Xiaomi Mi Mix (50.000$)
${message.user.misc.phone === 8 ? 'üîπ' : 'üî∏'} 8. Torex FS1 (75.000$)
${message.user.misc.phone === 9 ? 'üîπ' : 'üî∏'} 9. iPhone X (100.000$)
${message.user.misc.phone === 10 ? 'üîπ' : 'üî∏'} 10. –ú–µ–≥–∞—Ñ–æ–Ω –°1 (250.000$)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–¢–µ–ª–µ—Ñ–æ–Ω [–Ω–æ–º–µ—Ä]"`);

	const sell = phones.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.misc.phone) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω (${phones[message.user.misc.phone - 1].name}), –≤–≤–µ–¥–∏—Ç–µ "–ü—Ä–æ–¥–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω"`);

	if(message.user.balance < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.balance >= sell.cost)
	{
		message.user.balance -= sell.cost;
		message.user.misc.phone = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});
cmd.hear(/^(?:–º–µ–≥–∞—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
	 if(message.user.RIGHT < 2) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –í–∏–ø–∞`);

    if(message.args[1] < 1 || message.args[1] >= 999) return;

	const int = utils.random(1, 999);
	message.args[1] = Number(message.args[1]);

	if(int === message.args[1])
	{
		message.user.balance += 50000000000;
		return bot(`–≤–∞—É! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ - ${int}!!!
	    –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000.000.000$ üòé`);
	} else if(int !== message.args[1])
	{
		return bot(`–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ —á–∏—Å–ª–æ, —ç—Ç–æ - "${int}"
		‚ù§ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –≤–µ–¥—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.
		
		–ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –∫–æ–¥, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 50.000.000.000$`);
	}
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—É–ª—É—á—à–∏—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —É–ª—É—á—à–∏—Ç—å [1 –∏–ª–∏ 2]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	if(businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] == null) return bot(`–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	const cost = businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost;
	if(cost > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è`);
	message.user.balance -= cost;
	message.user.business[message.args[1]].upgrade++;

	return bot(`–≤—ã —É–ª—É—á—à–∏–ª–∏ –±–∏–∑–Ω–µ—Å #${message.args[1] + 1} –∑–∞ ${utils.sp(cost)}$`);
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(?:—Å–Ω—è—Ç—å)\s(.*)\s(.*)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å —Å–Ω—è—Ç—å [1 –∏–ª–∏ 2] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.business[message.args[1]].moneys);
	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));
	if(message.args[2] <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å —Å—Ç–æ–ª—å–∫–æ —Å–æ —Å—á—ë—Ç–∞ –±–∏–∑–Ω–µ—Å–∞`);
	if(message.args[2] > message.user.business[message.args[1]].moneys) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á—ë—Ç–µ —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);

	message.user.balance += message.args[2];
	message.user.business[message.args[1]].moneys -= message.args[2];

	return bot(`–≤—ã —Å–Ω—è–ª–∏ —Å–æ —Å—á—ë—Ç–∞ —Å–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ ${utils.sp(message.args[2])}$`);
});

cmd.hear(/^(?:–∞–Ω–µ–∫–¥–æ—Ç)$/i, async (message, bot) => {
		let filter = (text) => { 
			text = text.replace('&quot;', '"');
			text = text.replace('!&quot;', '"');
			text = text.replace('?&quot;', '"');
			text = text.replace(/(&quot;)/ig, '"');
			return text;
		}

    let anek = await getAnek();
    return bot(`–¥–µ—Ä–∂–∏:\n\n ${filter(anek)}\n\nü§§ >> –ü–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "–ê–Ω–µ–∫–¥–æ—Ç" –µ—â—ë —Ä–∞–∑!`);

function getAnek() {
    return rq('https://www.anekdot.ru/random/anekdot/').then(body => {
        		let res = body.match(/(?:<div class="text">([^]+)<\/div>)/i);
        		res = res[0].split('</div>');
        		return res[0].split(`<div class="text">`).join('').split('<br>').join('\n');
        	});
   
	}
});

cmd.hear(/^(?:—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
	if(message.args[1] < 1 || message.args[1] >= 100) return;

	const int = utils.random(1, 99);
	message.args[1] = Number(message.args[1]);

	if(int === message.args[1])
	{
		message.user.balance += 10000000000;
		return bot(`–≤–∞—É! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ - ${int}!!!
	    –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000.000$ üòé`);
	} else if(int !== message.args[1])
	{
		return bot(`–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –ü—Ä–∞–≤–∏–ª—å–Ω–æ —á–∏—Å–ª–æ, —ç—Ç–æ - "${int}"
		‚ù§ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –≤–µ–¥—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.
		
		–ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –∫–æ–¥, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10.000.000.000$`);
	}
});

cmd.hear(/^(?:—Ñ–µ—Ä–º–∞)$/i, async (message, bot) => {
	if(!message.user.misc.farm) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
	if(!message.user.farm_btc) return bot(`–Ω–∞ –≤–∞—à–µ–π —Ñ–µ—Ä–º–µ –ø—É—Å—Ç–æ, –Ω–æ–≤—ã–µ –±–∏—Ç–∫–æ–∏–Ω—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ —á–∞—Å`);

	const btc_ = message.user.farm_btc * message.user.misc.farm_count;

	message.user.btc += btc_;
	message.user.farm_btc = 0;

	return bot(`–≤—ã —Å–æ–±—Ä–∞–ª–∏ ${utils.sp(btc_)}‚Çø, —Å–ª–µ–¥—É—é—â–∏–µ –±–∏—Ç–∫–æ–∏–Ω—ã –ø–æ—è–≤—è—Ç—Å—è —á–µ—Ä–µ–∑ —á–∞—Å
	üåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`);
});

cmd.hear(/^(?:–∫–∞–∑–∏–Ω–æ)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		const multiply = utils.pick([0, 0, 0.5, 0.5, 0.5, 0.5, 1, 0, 1, 0, 2, 2, 0, 2, 2, 2, 0, 5, 0, 0, 0, 0, 6, 0, 0, 7, 0, 8, 9, 10]);

		message.user.balance += Math.floor(message.args[1] * multiply);
		return bot(`${multiply === 1 ? `–≤–∞—à–∏ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å` : `${multiply < 1 ? `–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] - message.args[1] * multiply)}$` : `–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${utils.sp(message.args[1] * multiply - message.args[1])}$`}`} (x${multiply})
		üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});

cmd.hear(/^(?:–±–∏–∑–Ω–µ—Å)\s(\d)$/i, async (message, bot) => {
	message.args[1] = Math.floor(Number(message.args[1]));
	if(message.args[1] < 1 || message.args[1] > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ë–∏–∑–Ω–µ—Å [1 –∏–ª–∏ 2]`);
	if(message.user.business.length < message.args[1]) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
	message.args[1]--;
	const biz = businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade - 1];

	return bot(`—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "${biz.name}":
	üí∏ –ü—Ä–∏–±—ã–ª—å: ${utils.sp(Math.floor(biz.earn))}$/—á–∞—Å
	
	üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.business[message.args[1]].moneys)}$

	${ (businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade] != null ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ! (" + utils.sp(businesses[message.user.business[message.args[1]].id - 1][message.user.business[message.args[1]].upgrade].cost) + "$)" : "") }`);
});

cmd.hear(/^(?:—Å—Ç–∞–∫–∞–Ω—á–∏–∫)\s([1-3])\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const multiply = utils.pick([0.95, 0.90, 0.85, 0.80, 3, 0.70, 2]);
		const cup = utils.random(1, 3);

		if(cup == message.args[1])
		{
			message.user.balance += message.args[2] + message.args[2] * multiply;
		return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ ${utils.sp(message.args[2] * multiply)}
			üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.balance)}$`);
		} else {
			return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, —ç—Ç–æ –±—ã–ª ${cup} —Å—Ç–∞–∫–∞–Ω—á–∏–∫
			üí∞ –ù–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.balance)}$`);
		}
	}
});

cmd.hear(/^(?:–º–æ–Ω–µ—Ç–∫–∞)\s(.*)\s([^]+)$/i, async (message, bot) => { message.user.foolder += 1;
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));
    let user = message.user;
    if(message.args[1] > message.user.balance || message.args[1] <= 0) return message.reply(message.args[1] <= 0 ? `–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏–ª–∏ —Ä–∞–≤–Ω–∞ 0` : `–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –±–∞–ª–∞–Ω—Å`);
	let a = rand(1,100);
    if(a > 50) {
    	if(message.args[2].toLowerCase() == '—Ä–µ—à–∫–∞'){
        message.user.balance += Math.floor(message.args[1]);
        return bot(`–≤–∞–º –≤—ã–ø–∞–ª–∞ '–†–µ—à–∫–∞' \n\n‚òò –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${spaces(message.args[1])}$\nüí≤ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
    	}
    	if(message.args[2].toLowerCase() == '–æ—Ä–µ–ª'){
        message.user.balance -= Math.floor(message.args[1]);
        return bot(`–≤–∞–º –≤—ã–ø–∞–ª–∞ '–†–µ—à–∫–∞' \n\n‚ûñ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: ${spaces(message.args[1])}$\nüí≤ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
    }
    }
    if(a < 50) {
       if(message.args[2].toLowerCase() == '—Ä–µ—à–∫–∞'){
        message.user.balance -= Math.floor(message.args[1]);
        return bot(`–≤–∞–º –≤—ã–ø–∞–ª '–û—Ä–µ–ª' \n\n‚ûñ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏: ${spaces(message.args[1])}$\nüí≤ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
    	}
    	if(message.args[2].toLowerCase() == '–æ—Ä–µ–ª'){
        message.user.balance += Math.floor(message.args[1]);
        return bot(`–≤–∞–º –≤—ã–ø–∞–ª '–û—Ä–µ–ª' \n\n‚òò –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${spaces(message.args[1])}$\nüí≤ –ë–∞–ª–∞–Ω—Å: ${spaces(user.balance)}`);
    		}
   		 }
	return message.reply(`[–ü–æ–¥—Å–∫–∞–∑–∫–∞] ¬ª –º–æ–Ω–µ—Ç–∫–∞ [—Å—Ç–∞–≤–∫–∞] [–æ—Ä–µ–ª/—Ä–µ—à–∫–∞]`);
});

cmd.hear(/^(?:—Ç—Ä–µ–π–¥)\s(–≤–≤–µ—Ä—Ö|–≤–Ω–∏–∑)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[2] <= message.user.balance)
	{
		message.user.balance -= message.args[2];

		const rand = utils.pick([0, 1]);
		const nav = Number(message.args[1].toLowerCase().replace(/–≤–≤–µ—Ä—Ö/, '1').replace(/–≤–Ω–∏–∑/, '2'));

		if(rand === nav)
		{
			const multiply = utils.pick([0.75, 0.80, 0.90, 0.95, 1.25, 1.5, 1.75, 2, 2.5]);
			message.user.balance += Math.floor(message.args[2] * multiply);

			return bot(`–∫—É—Ä—Å ${nav === 1 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚úÖ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ +${message.args[2] * multiply}$
			üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}$`);
		} else {
			return bot(`–∫—É—Ä—Å ${nav === 2 ? `–ø–æ–¥–æ—Ä–æ–∂–∞–ª‚§¥` : `–ø–æ–¥–µ—à–µ–≤–µ–ª‚§µ`} –Ω–∞ ${utils.random(100)}$
			‚ùå –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${message.args[2]}$ 
			üí∞ –ë–∞–ª–∞–Ω—Å: ${message.user.balance}`);
		}
	}
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞|work)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —ç—Ç–∏ 10 –º–∏–Ω—É—Ç` : ``}`);
	return bot(`–ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:
	üîπ 1.   –î–≤–æ—Ä–Ω–∏–∫ –≤ –°–®–ê  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~12.500$ 
				           (1 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 2    –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫ –≤ –°–®–ê  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~22.500$ 
				           (3 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 3.   –≠–ª–µ–∫—Ç—Ä–∏–∫ –≤ –°–®–ê  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~25.000$ 
				           (5 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 4.   –°–ª–µ—Å–∞—Ä—å –≤ –°–®–ê 
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~30.000$ 
				           (8 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 5.   –Æ—Ä–∏—Å—Ç –ø—Ä–µ—Å—Ç–∏–∂–Ω–æ–≥–æ –ê–≥–µ–Ω—Å—Ç–≤–∞ 
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~100.000$ 
				           (10 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 6    –ë—É—Ö–≥–∞–ª—Ç–µ—Ä  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~200.000$ 
				           (14 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 7.   –ë–∞—Ä–º–µ–Ω –≤ –≠–ª–∏—Ç–Ω–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~350.000$ 
				           (22 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 8.   –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –∫–ª–µ—Ä–∫  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~700.000$ 
				           (25 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 9.   –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~1.000.000$ 
				           (49 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
	üîπ 10.  –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä  
	            –∑–∞—Ä–ø–ª–∞—Ç–∞ ~100.000.000$ 
				           (100 LVL)
			‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî


	–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞ [–Ω–æ–º–µ—Ä]`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞—Ç—å)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ üò©
	–î–ª—è —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ "–†–∞–±–æ—Ç–∞"`);

	if(message.user.timers.hasWorked) return bot(` —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω.
	‚è≥ –í—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ 2 –º–∏–Ω—É—Ç—ã `);
	setTimeout(() => {
		message.user.timers.hasWorked = false;
	}, 120000);
	
	message.user.timers.hasWorked = true;

	const work = works.find(x=> x.id === message.user.work);
	const earn = utils.random(work.min, work.max);

	message.user.balance += earn;
	message.user.exp += 1;

	return bot(`—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω 
	üíµ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${utils.sp(earn)}$`);
});

cmd.hear(/^(?:–í—ã–¥–∞—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`);
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] < 1) return bot(`–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ 1$`);
	else if(message.args[1] >= 1)
	{

	message.user.balance = message.args[1];

	return bot(`–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –¥–µ–Ω–µ–≥! 
	üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`)};
});

cmd.hear(/^(?:–í—ã–¥–∞—Ç—å_–±–∏—Ç–∫–æ–∏–Ω)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`);
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] < 1) return bot(`–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ 1-–±–∏—Ç–∫–æ–∏–Ω–∞`);
	else if(message.args[1] >= 1)
	{

	message.user.btc = message.args[1];

	return bot(`–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –ë–∏—Ç–∫–æ–∏–Ω! 
	üí∞–í–∞—à –ë–∏—Ç–∫–æ–∏–Ω –±–∞–ª–∞–Ω—Å : ${utils.sp(message.user.btc)}`)};
});
cmd.hear(/^(?:–í—ã–¥–∞—Ç—å_—Ä–µ–π—Ç–∏–Ω–≥)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`);
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] < 1) return bot(`–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ 1-—Ä–µ–π—Ç–∏–Ω–≥–∞`);
	else if(message.args[1] >= 1)
	{

	message.user.rating = message.args[1];

	return bot(`–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ —Ä–µ–π—Ç–∏–Ω–≥! 
	üí∞–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥ –±–∞–ª–∞–Ω—Å : ${utils.sp(message.user.rating)}`)};
});
cmd.hear(/^(?:–í—ã–¥–∞—Ç—å_–±–∞–Ω–∫)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`);
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] < 1) return bot(`–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ 1-–¥–æ–ª–ª–∞—Ä–∞ –≤ –±–∞–Ω–∫`);
	else if(message.args[1] >= 1)
	{

	message.user.bank = message.args[1];

	return bot(`–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –≤ –±–∞–Ω–∫! 
	üí∞–í–∞—à –±–∞–Ω–∫ –±–∞–ª–∞–Ω—Å : ${utils.sp(message.user.bank)}`)};
});
cmd.hear(/^(?:fd)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	if(message.senderId !== 376231311 && message.senderId !== 517521841 && message.senderId !== 416199577) return;
	
	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] < 1) return bot(`–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω —É—Ä–æ–≤–µ–Ω—å 1`);
	else if(message.args[1] >= 1)
	{

	message.user.RIGHT = message.args[1];

	return bot(`–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –ø—Ä–∞–≤–∞! 
	üí∞–í–∞—à–∏ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ : ${utils.sp(message.user.RIGHT)}`)};
});




cmd.hear(/^(?:—É–≤–æ–ª–∏—Ç—å—Å—è)$/i, async (message, bot) => {
	if(!message.user.work) return bot(`–≤—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ`);
	
	message.user.work = 0;
	return bot(`–≤—ã —É–≤–æ–ª–∏–ª–∏—Å—å —Å–æ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã`);
});

cmd.hear(/^(?:–∫—É–±–∏–∫|–∫—É–±)\s([1-6])$/i, async (message, bot) => {
	const int = utils.pick([1, 2, 3, 4, 5, 6]);
	if(int == message.args[1])
	{
		message.user.balance += 2000000;
		return bot(`–≤—ã —É–≥–∞–¥–∞–ª–∏! –ü—Ä–∏–∑ 2.000.000$`);
	} else return bot(`–Ω–µ —É–≥–∞–¥–∞–ª–∏ 
	üé≤ –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ ${int}`);
});

cmd.hear(/^(?:–æ—Ç–≤–µ—Ç)\s([0-9]+)\s([^]+)$/i, async (message, bot) => {
	if(message.senderId !== 376231311 && message.senderId !== 517521841) return;

	const user = await users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return;

	vk.api.messages.send({ user_id: user.id, message: `‚úâ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:
	‚†Ä–Ø–∑—ã–∫: üá∑üá∫
	
	${message.args[2]}
	–° –£–≤–∞–∂–µ–Ω–∏–µ–º –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ë–æ—Ç–∞` });
});

cmd.hear(/^(?:—Ä–µ—à–∏)\s([0-9]+)\s(\+|\-|\/|\*)\s([0-9]+)$/i, async (message, bot) => {
	const result = eval(`${message.args[1]} ${message.args[2]} ${message.args[3]}`);
	return bot(`${message.args[1]} ${message.args[2]} ${message.args[3]}=${result}`);
});

cmd.hear(/^(?:—Ä–∞–±–æ—Ç–∞|work)\s([1-9]+)$/i, async (message, bot) => {
	if(message.user.work) return bot(`–≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è - ${works[message.user.work - 1].name}
	${message.user.timers.hasWorked ? `–í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª–∏ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 2 –º–∏–Ω—É—Ç—ã` : ``}`);

	const work = works.find(x=> x.id === Number(message.args[1]));
	if(!work) return console.log(message.args[1]);

	if(work.requiredLevel > message.user.level) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —ç—Ç—É —Ä–∞–±–æ—Ç—É!`);
	else if(work.requiredLevel <= message.user.level)
	{
		message.user.work = work.id;
		return bot(`–≤—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å - ${work.name}
		üëî –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–†–∞–±–æ—Ç–∞—Ç—å"`);
	}
});



cmd.hear(/^(?:report|rep|—Ä–µ–ø–æ—Ä—Ç|—Ä–µ–ø|–∂–∞–ª–æ–±–∞|–∂–∞–±)\s([^]+)$/i, async (message, bot) => {
	if(message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –õ–°.`);

       let zaprets1 = message.args[1].toLowerCase();
    var zapret = /(üë®‚Äç|üöÄÔ∏è|üë©‚Äç‚öñÔ∏è|üë®‚Äç‚öñÔ∏è|üéÖ|üë∏|ü§¥|üë∞|ü§µ|üëº|ü§∞|üôá‚Äç‚ôÄÔ∏è|üôá|üíÅ|üíÅ‚Äç‚ôÇÔ∏è|üôÖ|üôÖ‚Äç‚ôÇÔ∏è|üôÜ|üôÜ‚Äç‚ôÇÔ∏è|üôã|üôã‚Äç‚ôÇÔ∏è|ü§¶‚Äç‚ôÄÔ∏è|ü§¶‚Äç‚ôÇÔ∏è|ü§∑‚Äç‚ôÄÔ∏è|ü§∑‚Äç‚ôÇÔ∏è|üôé|üôé‚Äç‚ôÇÔ∏è|üôç|üôç‚Äç‚ôÇÔ∏è|üíá|üíá‚Äç‚ôÇÔ∏è|üíÜ|üíÜ‚Äç‚ôÇÔ∏è|üï¥|üíÉ|üï∫|üëØ|üëØ‚Äç‚ôÇÔ∏è|üö∂‚Äç‚ôÄÔ∏è|üö∂|üèÉ‚Äç‚ôÄÔ∏è|üèÉ|üë´|üë≠|üë¨|üíë|üíè|üë™|üëö|üëï|üëñ|üëî|üëó|üëô|üëò|üë†|üë°|üë¢|üëû|üëü|üëí|üé©|üëë|‚õë|üéí|üëù|üëõ|üëú|üíº|üëì|üï∂|üåÇ|‚òÇ|üòÄ|üòÉ|üòÑ|üòÅ|üòÜ|üòÖ|üòÇ|ü§£|‚ò∫|üòä|üòá|üôÇ|üôÉ|üòâ|üòå|üòç|üòò|üòó|üòô|üòö|üòã|üòú|üòù|üòõ|ü§ë|ü§ó|ü§ì|üòé|ü§°|ü§†|üòè|üòí|üòû|üòî|üòü|üòï|üôÅ|‚òπ|üò£|üòñ|üò´|üò©|üò§|üò†|üò°|üò∂|üòê|üòë|üòØ|üò¶|üòß|üòÆ|üò≤|üòµ|üò≥|üò±|üò®|üò∞|üò¢|üò•|ü§§|üò≠|üòì|üò™|üò¥|üôÑ|ü§î|ü§•|üò¨|ü§ê|ü§¢|ü§ß|üò∑|ü§í|ü§ï|üòà|üëø|üëπ|üë∫|üí©|üëª|üíÄ|‚ò†|üëΩ|üëæ|ü§ñ|üéÉ|üò∫|üò∏|üòπ|üòª|üòº|üòΩ|üôÄ|üòø|üòæ|üëê|üôå|üëè|üôè|ü§ù|üëç|üëé|üëä|‚úä|ü§õ|ü§ú|ü§û|‚úå|ü§ò|üëå|üëà|üëâ|üëÜ|üëá|‚òù|‚úã|üñê|üññ|üëã|ü§ô|üí™|üñï|‚úç|ü§≥|üíÖ|üññ|üíÑ|üíã|üëÑ|üëÖ|üëÇ|üëÉ|üë§|üë£|üëÅ|üëÄ|üó£|üë•|üë∂|üë¶|üëß|üë®|üë©|üë±‚Äç‚ôÄÔ∏è|üë±|üë¥|üëµ|üë≤|üë≥‚Äç‚ôÄÔ∏è|üë≥|üëÆ‚Äç‚ôÄÔ∏è|üëÆ|üë∑‚Äç‚ôÄÔ∏è|üë∑|üíÇ‚Äç‚ôÄÔ∏è|üíÇ|üïµ‚Äç‚ôÄÔ∏è|üïµ|üë©‚Äç‚öïÔ∏è|üë®‚Äç‚öïÔ∏è|üë©‚ÄçüåæÔ∏è|üë®‚ÄçüåæÔ∏è|üë©‚Äçüç≥Ô∏è|üë®‚Äçüç≥Ô∏è|üë©‚ÄçüéìÔ∏è|üë®‚ÄçüéìÔ∏è|üë©‚Äçüé§Ô∏è|üë®‚Äçüé§Ô∏è|üë©‚Äçüè´Ô∏è|üë®‚Äçüè´Ô∏è|üë©‚Äçüè≠Ô∏è|üë®‚Äçüè≠Ô∏è|üë©‚ÄçüíªÔ∏è|üë®‚ÄçüíªÔ∏è|üë©‚ÄçüíºÔ∏è|üë®‚ÄçüíºÔ∏è|üë©‚ÄçüîßÔ∏è|üë®‚ÄçüîßÔ∏è|üë©‚Äçüî¨Ô∏è|üë®‚Äçüî¨Ô∏è|üë©‚Äçüé®Ô∏è|üë®‚Äçüé®Ô∏è|üë©‚ÄçüöíÔ∏è|üë®‚ÄçüöíÔ∏è|üë©‚Äç‚úàÔ∏è|üë®‚Äç‚úàÔ∏è|üë©‚ÄçüöÄÔ∏è|üë®‚ÄçüöÄÔ∏è|üë©‚Äç‚öñÔ∏è|üë®‚Äç‚öñÔ∏è|üéÖ|üë∏|ü§¥|üë∞|ü§µ|üëº|ü§∞|üôá‚Äç‚ôÄÔ∏è|üôá|üíÅ|üíÅ‚Äç‚ôÇÔ∏è|üôÖ|üôÖ‚Äç‚ôÇÔ∏è|üôÜ|üôÜ‚Äç‚ôÇÔ∏è|üôã|üôã‚Äç‚ôÇÔ∏è|ü§¶‚Äç‚ôÄÔ∏è|ü§¶‚Äç‚ôÇÔ∏è|ü§∑‚Äç‚ôÄÔ∏è|ü§∑‚Äç‚ôÇÔ∏è|üôé|üôé‚Äç‚ôÇÔ∏è|üôç|üôç‚Äç‚ôÇÔ∏è|üíá|üíá‚Äç‚ôÇÔ∏è|üíÜ|üíÜ‚Äç‚ôÇÔ∏è|üï¥|üíÉ|üï∫|üëØ|üëØ‚Äç‚ôÇÔ∏è|üö∂‚Äç‚ôÄÔ∏è|üö∂|üèÉ‚Äç‚ôÄÔ∏è|üèÉ|üë´|üë≠|üë¨|üíë|üíè|üë™|üëö|üëï|üëñ|üëî|üëó|üëô|üëò|üë†|üë°|üë¢|üëû|üëü|üëí|üé©|üéì|üëë|‚õë|üéí|üëù|üëõ|üëú|üíº|üëì|üï∂|üåÇ|‚òÇ|—Å –æ –≤ –∞ –Ω –µ —Å –ø –∏ —Ç|—Å–æ–≤–∞–Ω–∏–∫–æ–≥–¥–∞–Ω–µ—Å–ø–∏—Ç|—Å–æ–≤–∞ –Ω–µ —Å–ø–∏—Ç –Ω–∏–∫–æ–≥–¥–∞|–∫—Ä–∞—Å–Ω–∞—è —Å–æ–≤–∞|–º–æ–º–æ|momo|#|–∂–æ–ø–∞|–ø—Ä–æ–µ–±—É|–∞–Ω–∞–ª—å–Ω–æ|–Ω–µ —Å–ø–∏—Ç|–Ω–∏–∫–æ–≥–¥–∞|—Å–æ–≤–∞|–Ω–∞—Ä–∫–æ—Ç–æ—Ä–≥–æ–≤–µ—Ü|–Ω–∞—Ä–∫–æ—Ç–∞|–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏|–ø–æ–¥–∫–ª–∞–¥–∫–∞|–ø–æ–¥–∫–ª–∞–¥–∫–∏|–∫–æ–∫–æ–∏–Ω|–∫–æ–∫–∞–∏–Ω|–ø–æ—Ä–Ω–æ|—Ö–µ–Ω—Ç–∞–π|—Å–µ–∫—Å|–ø–∏–¥—Ä|—Ç—Ä–∞—Ö|–Ω–∞—Å–∏–ª–∏–µ|–∑–æ–æ—Ñ–∏–ª|–±–¥—Å–º|—Å–∏—Ä–∏—è|hentai|hentay|—Å–∏–Ω–∏–π –∫–∏—Ç|—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ|—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã|—Å–ª–∏–≤|—Ü–ø|cp|–º–∞–ª–µ–Ω—å–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|—Å—É—á–∫–∏|—Ç—Ä–∞—Ö|–µ–±–ª—è|–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ|–±–ª—è—Ç—å|—Ö—É–π|–ø–æ—à–µ–ª –Ω–∞—Ö|—Ç–≤–∞—Ä—å|–º—Ä–∞–∑—å|—Å—É—á–∫–∞|–≥–∞–Ω–¥–æ–Ω|—É–µ–±–æ–∫|—à–ª—é—Ö|–ø–∞—Å–∫—É–¥–∞|–æ—Ä–≥–∞–∑–º|–¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã|—Ü–µ–ª–∫–∏|—Ä–∞—Å—Å–æ–≤–æ–µ|–º–µ–ª–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|–Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ|–µ–±–ª—è|—Ö–µ–Ω—Ç–∞–π|sex|bdsm|ebl|trax|syka|shlux|–∏–Ω—Ü–µ—Å—Ç|iznas|–º–∞—Ç—å|–¥–æ–ª–±–∞–µ–±|–¥–æ–ª–±–∞—ë–±|—Ö—É–µ—Å–æ—Å|—Å—É—á–∫–∞|—Å—É–∫–∞|—Ç–≤–∞—Ä—å|–ø–µ–∑–¥—é–∫|—Ö—É–π|—à–ª—é—Ö|–±–æ–≥|—Å–∞—Ç–∞–Ω–∞|–º—Ä–∞–∑—å)/
    var sss = zapret.test(zaprets1) 
if(zapret.test(zaprets1) == true){
    var check = true;
    return message.reply(`–ü—Ä–æ—Å—Ç–∏, –Ω–æ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã –∏ —Ç.–¥. –≤ —Ä–µ–ø–æ—Ä—Ç–∞—Ö...
    	–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã –º—ã —Ç–µ–±—è –∑–∞–±–∞–Ω–∏–ª–∏, —Ç–æ –Ω–µ —Å—Ç–æ–∏—Ç—å –±–æ–ª—å—à–µ –ø–∏—Å–∞—Ç—å —Ç–∞–∫–∏–µ —Å–ª–æ–≤–∞.`);
}  
	vk.api.messages.send({ user_id: 376231311, forward_messages: message.id, message: `Player id: ${message.user.uid}` }).then(() => {
		return bot(`–≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏—è.`);
	}).catch((err) => {
		return bot(`—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... 

			–ù–∞–ø–∏—à–∏ [id376231311|–ù–∏–∫–∏—Ç–µ] –æ–± —ç—Ç–æ–π –æ—à–∏–±–∫–µ, –æ–Ω –µ—ë –∏—Å–ø—Ä–∞–≤–∏—Ç :3`);
	});
});

cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å|sell)\s(.*)\s?(.*)?$/i, async (message, bot) => {
	let options = {
		count: null
	}

	message.args[2] = message.args[1].split(' ')[1];

	if(!message.args[2]) options.count = 1;
	if(message.args[2])
	{
		message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
		message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
		message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');

		message.args[2] = Math.floor(Number(message.args[2]));
		if(message.args[2] <= 0) return;

		if(!message.args[2]) options.count = 1;
		else if(message.args[2]) options.count = message.args[2];
	}

	if(/–º–∞—à–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.car) return bot(`—É –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã`);
		let a = Math.floor(cars[message.user.transport.car - 1].cost * 0.85);

		message.user.balance += Math.floor(cars[message.user.transport.car - 1].cost * 0.85);
		message.user.transport.car = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –º–∞—à–∏–Ω—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—è—Ö—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.yacht) return bot(`—É –≤–∞—Å –Ω–µ—Ç —è—Ö—Ç—ã`);
		let a = Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);

		message.user.balance += Math.floor(yachts[message.user.transport.yacht - 1].cost * 0.85);
		message.user.transport.yacht = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é —è—Ö—Ç—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Å–∞–º–æ–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.airplane) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª—ë—Ç–∞`);
		let a = Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);

		message.user.balance += Math.floor(airplanes[message.user.transport.airplane - 1].cost * 0.85);
		message.user.transport.airplane = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Å–∞–º–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–≤(–∏|–µ|—è)—Ä—Ç(–∞|–æ)–ª(–µ|—ë|–π–æ)—Ç/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.transport.helicopter) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å–∞–º–æ–ª—ë—Ç–∞`);
		let a = Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);

		message.user.balance += Math.floor(helicopters[message.user.transport.helicopter - 1].cost * 0.85);
		message.user.transport.helicopter = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –≤–µ—Ä—Ç–æ–ª—ë—Ç –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–¥–æ–º/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.realty.home) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–æ–º–∞`);
		let a = Math.floor(homes[message.user.realty.home - 1].cost * 0.85);

		message.user.balance += Math.floor(homes[message.user.realty.home - 1].cost * 0.85);
		message.user.realty.home = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –¥–æ–º –∑–∞ ${utils.sp(a)}$`);
	}

	if(/–∫–≤–∞—Ä—Ç–∏—Ä/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.realty.apartment) return bot(`—É –≤–∞—Å –Ω–µ—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã`);
		let a = Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);

		message.user.balance += Math.floor(apartments[message.user.realty.apartment - 1].cost * 0.85);
		message.user.realty.apartment = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ—é –∫–≤–∞—Ä—Ç–∏—Ä—É –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ç–µ–ª–µ—Ñ–æ–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(!message.user.misc.phone) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞`);
		let a = Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);

		message.user.balance += Math.floor(phones[message.user.misc.phone - 1].cost * 0.85);
		message.user.misc.phone = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ñ–µ—Ä–º/i.test(message.args[1].toLowerCase()))
	{
		if(message.user.misc.farm == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ñ–µ—Ä–º—ã`);
		if(options.count > message.user.misc.farm_count) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
		if(options.count <= 0) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å—Ç–æ–ª—å–∫–æ —Ñ–µ—Ä–º`);
		let a = Math.floor(farms[message.user.misc.farm - 1].cost * options.count * 0.85);

		message.user.balance += a;
		message.user.misc.farm_count -= options.count;
		if(message.user.misc.farm_count == 0) message.user.misc.farm = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–∏ —Ñ–µ—Ä–º—ã (${options.value} —à—Ç.) –∑–∞ ${utils.sp(a)}$`);
	}

	if(/—Ä–µ–π—Ç–∏–Ω–≥/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.rating) return bot(`—É –≤–∞—Å –Ω–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞`);
		let a = (650000000 * options.count);

		message.user.balance += Math.floor(a);
		message.user.rating -= options.count;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${utils.sp(options.count)} ${utils.decl(options.count, ['—Ä–µ–π—Ç–∏–Ω–≥', '—Ä–µ–π—Ç–∏–Ω–≥–∞', '—Ä–µ–π—Ç–∏–Ω–≥–æ–≤'])} –∑–∞ ${utils.sp(Math.floor(a))}`);
	}

	if(/–±–∏–∑–Ω–µ—Å/i.test(message.args[1].toLowerCase()))
	{
		if(message.user.business.length == 0) return bot(`—É –≤–∞—Å –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–∞`);
		if(options.count < 1 || options.count > 2) return bot(`–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ü—Ä–æ–¥–∞—Ç—å –±–∏–∑–Ω–µ—Å [1 –∏–ª–∏ 2]`);
		if(message.user.business.length < options.count) return bot(`—É –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞`);
		options.count--;
		let a = Math.floor(businesses[message.user.business[options.count].id - 1][message.user.business[options.count].upgrade - 1].cost * 0.85);

		message.user.balance += Math.floor(a);
		message.user.business.splice(options.count, 1);

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∑–∞ ${ utils.sp(a) }$`);
	}

	if(/–±–∏—Ç–∫–æ–∏–Ω/i.test(message.args[1].toLowerCase()))
	{
		if(options.count > message.user.btc) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤`);
		let a = Math.floor(btc * options.count);

		message.user.balance += Math.floor(a);
		message.user.btc -= options.count;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${options.count}‚Çø –∑–∞ ${utils.sp(a)}$`);
	}
});

cmd.hear(/^(?:–∫—É—Ä—Å)$/i, async (message, bot) => {
	return bot(`–∫—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:
üí∏–ë–∏—Ç–∫–æ–∏–Ω: ${utils.sp(btc)}$`);
});

cmd.hear(/^(?:–±–∏—Ç–∫–æ–∏–Ω|btc|–±–∏—Ç)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * btc ) > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
–ö—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞: ${btc}$`);
	else if(( message.args[1] * btc ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * btc );
		message.user.btc += message.args[1];

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ ${utils.sp(message.args[1])}‚Çø –∑–∞ ${utils.sp(message.args[1] * btc)}$`);
	}
});	

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥|rating)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(( message.args[1] * 1000000000 ) > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(( message.args[1] * 1000000000 ) <= message.user.balance)
	{
		message.user.balance -= ( message.args[1] * 1000000000 );
		message.user.rating += message.args[1];

		return bot(`–≤—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ ${utils.sp(message.args[1])}üëë –∑–∞ ${utils.sp(message.args[1] * 1000000000)}$`);
	}
});

cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|–ø–µ—Ä–µ–¥–∞–π|–ø–µ—Ä–∏–¥–∞—Ç—å|–ø–∏—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => { 
message.args[2] = message.args[2].replace(/(\.|\,)/ig, ''); 
message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000'); 
message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000'); 
message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance); 

if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`); 
if(message.user.timers.translation) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∏–≥—Ä–æ–∫—É –≤ –±–ª–∏–∂–∞–π—à–∏–µ 10 –º–∏–Ω—É—Ç`);
if(!Number(message.args[2])) return;
if(message.args[2] <= 0) return;

setTimeout(() => { 
message.user.timers.translation = false; 
}, 600000); 

message.user.timers.translation = true; 
 
message.args[2] = Math.floor(Number(message.args[2])); 

if(message.args[2] <= 0) return; 

if(message.args[2] > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ 
üí∞ –ë–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`); 
else if(message.args[2] <= message.user.balance && message.args[2] < 1000000001)
{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 



message.user.balance -= message.args[2]; 
user.balance += message.args[2]; 

await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
}

else if(message.args[2] <= message.user.balance && message.args[2] >= 1000000001)
{ 
 message.args[2] = 1000000000
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 

if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`); 

message.user.balance -= message.args[2]; 
user.balance += message.args[2]; 

await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$! 
üîï –í–≤–µ–¥–∏—Ç–µ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—ã–∫–ª", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è` }); 
}
});

cmd.hear(/^(?:—Ä–µ–π—Ç–∏–Ω–≥|rating)$/i, async (message, bot) => {
	return bot(`–≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥: ${utils.sp(message.user.rating)}üëë`);
});

cmd.hear(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.mention = true;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!`);
	}

	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.mention = false;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
	}
});

cmd.hear(/^(?:–Ω–∏–∫|name)\s(.*)$/i, async (message, bot) => {
	if(message.args[1].length >= 16) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤`);

	message.user.tag = message.args[1];
	return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å "${message.user.tag}"`);
});

cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω|shop)$/i, async (message, bot) => {
	return bot(`—Ä–∞–∑–¥–µ–ª—ã –º–∞–≥–∞–∑–∏–Ω–∞:
üöô –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:
‚†Ä‚†Äüöó –ú–∞—à–∏–Ω—ã
‚†Ä‚†Äüõ• –Ø—Ö—Ç—ã
‚†Ä‚†Äüõ© –°–∞–º–æ–ª–µ—Ç—ã
‚†Ä‚†ÄüöÅ –í–µ—Ä—Ç–æ–ª–µ—Ç—ã

üèò –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å:
‚†Ä‚†Äüè† –î–æ–º–∞
‚†Ä‚†Äüåá –ö–≤–∞—Ä—Ç–∏—Ä—ã

üìå –û—Å—Ç–∞–ª—å–Ω–æ–µ:
‚†Ä‚†Äüì± –¢–µ–ª–µ—Ñ–æ–Ω—ã
‚†Ä‚†Ä‚≠ê –§–µ—Ä–º—ã
‚†Ä‚†Äüëë –†–µ–π—Ç–∏–Ω–≥ [–∫–æ–ª-–≤–æ] - $1 –º–ª—Ä–¥
‚†Ä‚†Äüíº –ë–∏–∑–Ω–µ—Å—ã
‚†Ä‚†Äüåê –ë–∏—Ç–∫–æ–∏–Ω [–∫–æ–ª-–≤–æ]

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è] [–Ω–æ–º–µ—Ä]".
‚†Ä ‚†Ä –ù–∞–ø—Ä–∏–º–µ—Ä: "${utils.pick(['–¢–µ–ª–µ—Ñ–æ–Ω 7', '–ú–∞—à–∏–Ω–∞ 1', '–§–µ—Ä–º–∞ 2', '–ë–∏—Ç–∫–æ–∏–Ω 100', '–†–µ–π—Ç–∏–Ω–≥ 10'])}"`);
});


cmd.hear(/^(?:—Ç–æ–ø)\s(–±–∞–ª–∞–Ω—Å)$/i, async (message, bot) => { 
message.user.referalss === users.filter(x=> x.referal === message.user.uid).length  
let top = []; 

users.map(x=> { if(x.RIGHT < 3){
top.push({ balance: x.balance, tag: x.tag, id: x.id, mention: x.mention });}
}); 

top.sort((a, b) => { 
return b.balance - a.balance; 
}); 

let text = ``; 
const find = () => {
let pos = 1000; 

for (let i = 0; i < top.length; i++) 
{ 
if(top[i].id === message.senderId) return pos = i; 
} 

return pos; 
} 

for (let i = 0; i < 10; i++) 
{ 
if(!top[i]) return; 
const user = top[i]; 

text += `${i === 9 ? `üîü` : `${i + 1}‚É£`} @id${user.id} (${user.tag}) ‚Äî ${utils.rn(user.balance)}\n`;} 

return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:\n${text}‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî 
${utils.gi(find() + 1)} ${message.user.tag} ‚Äî ${utils.rn(message.user.balance)}`); 
});

cmd.hear(/^(?:–í–∏–ø|vip)\s(?:–±–æ–Ω—É—Å|bonus)$/i, async (message, bot) => { 
if(message.user.RIGHT < 2) return bot(`–£ –≤–∞—Å –Ω–µ—Ç VIP'a!`); 
if(message.user.timers.vipbonus) return bot(`–≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤–∏–ø –±–æ–Ω—É—Å —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç`); 
let prize = utils.pick([1]); 

setTimeout(() => { 
message.user.timers.vipbonus = false; 
}, 600000); 

message.user.timers.vipbonus = true; 

if(prize === 1) 
{ 
message.user.btc += 450; 
message.user.balance += 50000000; 
return bot(`–≤—ã –ø–æ–ª—É—á–∏–ª–∏ 50.000.000$ –∏ 450 –±–∏—Ç–∫–æ–∏–Ω–æ–≤!`); 
} 
});
 

cmd.hear(/^(?:–±–∞–Ω–∫)\s(?:—Å–Ω—è—Ç—å)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.bank);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	if(message.args[1] <= 0) return;

	if(message.args[1] > message.user.bank) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	else if(message.args[1] <= message.user.bank)
	{
		message.user.balance += message.args[1];
		message.user.bank -= message.args[1];

		return bot(`–≤—ã —Å–Ω—è–ª–∏ ${utils.sp(message.args[1])}$
üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
});

cmd.hear(/^(?:–±–∞–Ω–∫|bank)\s(.*)$/i, async (message, bot) => {
	message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
	message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
	message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
	message.args[1] = message.args[1].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

	if(!Number(message.args[1])) return;
	message.args[1] = Math.floor(Number(message.args[1]));

	
	if(message.args[1] <= 0) return;
	
	if(message.args[1] <= 49) return bot(`–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–∫–ª–∞–¥–∞ 50$`);
	
	if(message.args[1] > 1000000000000){
		message.user.balance = message.user.bank + message.user.balance
		message.user.balance = message.user.balance - 1000000000000
	    message.user.bank = 1000000000000
	return bot(`üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
	üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
    
	if(message.user.bank >= 1000000000000) return bot(`–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–∞ —Å—á–µ—Ç–µ! + 1 —Ç—Ä–ª–Ω`);
	if(message.args[1] > message.user.balance) return bot(`—É –≤–∞—Å –Ω–µ—Ç –¥–∞–Ω–Ω–æ–π —Å—É–º–º—ã`);
	if(message.args[1] + message.user.bank >= 1000000000000){
		message.user.balance = message.user.bank + message.user.balance
		message.user.balance = message.user.balance - 1000000000000
	    message.user.bank = 1000000000000
	return bot(`üí≥ –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á—ë—Ç–µ: ${utils.sp(message.user.bank)}$
	üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
	}
		
	else if(message.args[1] <= message.user.balance)
	{
		message.user.balance -= message.args[1];
		message.user.bank += message.args[1];

		return bot(`–≤—ã –ø–æ–ª–æ–∂–∏–ª–∏ –Ω–∞ —Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç ${utils.sp(message.args[1])}$`);
	}
});

cmd.hear(/^(?:—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)\s(–≤—ã–∫–ª|–≤–∫–ª)$/i, async (message, bot) => {
	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.notifications = false;
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã! üîï`);
	}

	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		return bot(`—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! üîî`);
	}
});

cmd.hear(/^(?:–±–∞–ª–∞–Ω—Å|balance)$/i, async (message, bot) => {
	let text = `–Ω–∞ —Ä—É–∫–∞—Ö: ${utils.sp(message.user.balance)}$`;

	if(message.user.bank) text += `\nüí≥ –í –±–∞–Ω–∫–µ: ${utils.sp(message.user.bank)}$`;
	if(message.user.btc) text += `\nüåê –ë–∏—Ç–∫–æ–∏–Ω–æ–≤: ${utils.sp(message.user.btc)}‡∏ø`;

	return bot(text);
});

cmd.hear(/^(?:–±–∞–Ω–∫|bank)$/i, async (message, bot) => {
	return bot(`–Ω–∞ –≤–∞—à–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á—ë—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è ${utils.sp(message.user.bank)}$`);
});

cmd.hear(/^(?:–¥–æ–Ω–∞—Ç)$/i, async (message, bot) => {
	return bot(`—Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç?
	–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ –ø–æ –¥–µ—à—ë–≤–∫–µ!
	
	1 –º–∏–ª–ª–∏–∞—Ä–¥ -  (9 —Ä—É–±–ª–µ–π)

	3 –º–∏–ª–ª–∏–∞—Ä–¥–∞ -  (14 —Ä—É–±–ª–µ–π)

	5 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (25 —Ä—É–±–ª–µ–π)

	30 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (69 —Ä—É–±–ª–µ–π)

	100 –º–∏–ª–ª–∏–∞—Ä–¥–æ–≤ -  (149 —Ä—É–±–ª–µ–π)`);
});

cmd.hear(/^(?:–∞–¥–º–∏–Ω|admin)\s(–∏–Ω—Ñ–æ|info)$/i, async (message, bot) => {
	return bot(`
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã!
Admin

1. üíµ –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞]
2. –±–∞–Ω [id] [–¢–µ–∫—Å—Ç] - –∑–∞–±–∞–Ω–∏—Ç—å
3. –†–∞–∑–±–∞–Ω [id] [–¢–µ–∫—Å—Ç] - —Ä–∞–∑–±–∞–Ω–∏—Ç—å 
4. üíµ –í—ã–¥–∞—Ç—å_–±–∏—Ç–∫–æ–∏–Ω [—Å—É–º–º–∞]
5. üíµ –í—ã–¥–∞—Ç—å_—Ä–µ–π—Ç–∏–Ω–≥ [—Å—É–º–º–∞]
6. üíµ –í—ã–¥–∞—Ç—å_–±–∞–Ω–∫ [—Å—É–º–º–∞]
`);
});


cmd.hear(/^(?:–±–∞–Ω)\s([0-9]+)\s/i, async (message, bot) => { 
if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`); 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 

user.ban = true; 

await bot(`–≤—ã –∑–∞–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "${user.tag}"`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤—ã–¥–∞–ª –≤–∞–º –±–∞–Ω!` }); 
} 
});

cmd.hear(/^(?:—Ä–∞–∑–±–∞–Ω)\s([0-9]+)\s/i, async (message, bot) => { 
if(message.user.RIGHT < 3 || message.user.RIGHT === 2) return bot(`—É –≤–∞—Å –Ω–µ—Ç Admin'a`); 

{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 

user.ban = false; 

await bot(`–≤—ã —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –∏–≥—Ä–æ–∫–∞ "${user.tag}"`); 
if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï] 
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${message.user.tag} –≤–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª!` }); 
} 
});


cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)$/i, async (message, bot) => {
	return bot(`–≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏: ${users.filter(x=> x.referal === message.user.uid).length}
	–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–∞–º –∑–∞—Å—á–∏—Ç–∞–ª–∏ –¥—Ä—É–≥–∞ –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "–†–µ—Ñ ${message.user.uid}"
	
	–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 100.000.000$ (100 –º–∏–ª–ª–∏–æ–Ω–æ–≤)
	–ï—Å–ª–∏ –¥—Ä—É–≥ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É, —Ç–æ –æ–Ω –ø–æ–ª—É—á–∏—Ç 50.000.000$ (50 –º–∏–ª–ª–∏–æ–Ω–æ–≤)`);
});

cmd.hear(/^(?:—Ä–µ—Ñ|—Ä–µ—Ñ–µ—Ä–∞–ª)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.referal !== null) return bot(`–≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É!`);
	let user = users.find(x=> x.uid === Number(message.args[1]));

	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);
	if(user.id === message.senderId) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	user.balance += 100000000;
	message.user.balance += 50000000;

	message.user.referal = Number(message.args[1]);

	vk.api.messages.send({ user_id: user.id, message: `üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∞ –≤ –±–æ—Ç!
	üí∏ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 100.000.000$ –Ω–∞ –±–∞–ª–∞–Ω—Å.` });
	return bot(`–≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É.
	üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50.000.000$`);
});

cmd.hear(/^(?:–≤–∏–ø|vip)\s(–∏–Ω—Ñ–æ|info)$/i, async (message, bot) => {
	return bot(`
–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã!
‚ñ¨VIP‚ñ¨
üíµ –í–∏–ø –±–æ–Ω—É—Å 
üìá –ù–∞–π—Ç–∏ [id] 
üóÇ –ø–æ–∏—Å–∫ [—Å—Å—ã–ª–∫–∞] 
üí£ –º–µ–≥–∞—Å–µ–π—Ñ


`);
});	
cmd.hear(/^(?:–ì–ª|Gl)\s(–∏–Ω—Ñ–æ|info)$/i, async (message, bot) => {
	return bot(`
 –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–Ω—Ñ–æ
1)–∑–∞–±—Ä–∞—Ç—å (–∏–¥) (–±–∞–ª–∞–Ω—Å,–±–∏—Ç–∫–æ–∏–Ω,—Ä–µ–π—Ç–∏–Ω–≥,–±–∞–Ω–∫) (—Å—É–º–º–∞) 
2)–úC–æ–∑–¥–∞—Ç—å (—Å—É–º–º–∞) (–Ω–∞–∑–≤–∞–Ω–∏–µ) (–∞–∫—Ç–∏–≤–∞—Ü–∏–π) 
3)C–æ–∑–¥–∞—Ç—å (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π) (—Å—É–º–º–∞) 
4)–ø—Ä–± (–∏–¥) (–±–∞–ª–∞–Ω—Å,–±–∏—Ç–∫–æ–∏–Ω,—Ä–µ–π—Ç–∏–Ω–≥,–±–∞–Ω–∫) (—Å—É–º–º–∞) 
5) üíµ –í—ã–¥–∞—Ç—å [—Å—É–º–º–∞] 
6) –±–∞–Ω [id] [–¢–µ–∫—Å—Ç] - –∑–∞–±–∞–Ω–∏—Ç—å 
7) –†–∞–∑–±–∞–Ω [id] [–¢–µ–∫—Å—Ç] - —Ä–∞–∑–±–∞–Ω–∏—Ç—å 
8) üíµ –í—ã–¥–∞—Ç—å_—Ä–µ–π—Ç–∏–Ω–≥ [—Å—É–º–º–∞] 
9) üíµ –í—ã–¥–∞—Ç—å_–±–∏—Ç–∫–æ–∏–Ω [—Å—É–º–º–∞] 
10)üíµ –í–∏–ø –±–æ–Ω—É—Å 
11)üìá –ù–∞–π—Ç–∏ [id] 
12)üóÇ –ø–æ–∏—Å–∫ [—Å—Å—ã–ª–∫–∞] 
13)üí£ –º–µ–≥–∞—Å–µ–π—Ñ
14)–æ–±–Ω—É–ª–∏—Ç—å (–∏–¥)
15)üíµ –í—ã–¥–∞—Ç—å_–±–∞–Ω–∫ [—Å—É–º–º–∞]


`);
});	

cmd.hear(/^(?:–±—Ä–∞–∫)\s([0-9]+)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ –≤ –±—Ä–∞–∫–µ —Å –∏–≥—Ä–æ–∫–æ–º ${users[message.user.marriage.partner].tag}`);
	if(Number(message.args[1]) === message.user.uid) return bot(`–≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è/–≤—ã–π—Ç–∏ –∑–∞–º—É–∂ –∑–∞ —Å–µ–±—è`);

	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	if(user.marriage.partner) return bot(`—ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±—Ä–∞–∫–µ`);

	if(user.marriage.requests.find(x=> x == message.args[1])) return bot(`–≤—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –∏–≥—Ä–æ–∫—É`);

	if(message.user.marriage.requests.find(x=> x == message.args[1]))
	{
		message.user.marriage.requests = [];
		message.user.marriage.partner = user.uid;

		user.marriage.requests = [];
		user.marriage.partner = message.user.uid;

		return bot(`–≤—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –±—Ä–∞–∫ —Å –∏–≥—Ä–æ–∫–æ–º "${user.tag}"`);
	}

	user.marriage.requests.push(message.user.uid);
	return bot(`–≤—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É "${user.tag}"`);
});

cmd.hear(/^(?:–±—Ä–∞–∫–∏)$/i, async (message, bot) => {
	if(message.user.marriage.partner) return bot(`–≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ`);
	return bot(`–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:
		${message.user.marriage.requests.map(x=> `–æ—Ç –∏–≥—Ä–æ–∫–∞ "${users[x].tag}" (ID: ${x})`).join('\n')}`);
});

cmd.hear(/^(?:—Ä–∞–∑–≤–æ–¥)$/i, async (message, bot) => {
	if(!message.user.marriage.partner) return bot(`—Ç—ã –∏ —Ç–∞–∫ —Å–≤–æ–±–æ–¥–µ–Ω!`);

	let user = users.find(x=> x.uid === message.user.marriage.partner);

	message.user.marriage.partner = 0;
	user.marriage.partner = 0;

	return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å —Å–≤–æ–±–æ–¥–Ω—ã–π —á–µ–ª–æ–≤–µ–∫! –£–¥–∞—á–∏ ;)`);
});

cmd.hear(/^(?:–¥–∞—Ç–∞|data)\s([0-9]+)$/i, async (message, bot) => {
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

	return bot(`–≤–∞—à–∞ –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ë–æ—Ç–µ - @id${user.id} (${user.tag}): ${SetDate(user.regDate)}`);
});

cmd.hear(/^(?:—Ç–æ–ø|top)$/i, async (message, bot) => {
	let top = [];

	users.map(x=> { if(x.RIGHT < 3){
		top.push({ balance: x.balance, rating: x.rating, tag: x.tag, id: x.id, mention: x.mention });}
	});

	top.sort((a, b) => {
		return b.rating - a.rating;
	});

	let text = ``;
	const find = () => {
		let pos = 1000;

		for (let i = 0; i < top.length; i++)
		{
			if(top[i].id === message.senderId) return pos = i;
		}

		return pos;
	}

	for (let i = 0; i < 10; i++)
	{
		if(!top[i]) return;
		const user = top[i];

		text += `${i === 9 ? `&#128287;` : `${i + 1}&#8419;`} @id${user.id} (${user.tag}) ‚Äî ${utils.sp(user.rating)}üëë | ${utils.rn(user.balance)}$
		`;
	}
	return bot(`—Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤:
		${text}
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
${utils.gi(find() + 1)} ${message.user.tag} ‚Äî ${utils.sp(message.user.rating)}üëë | ${utils.rn(message.user.balance)}$`);
});

cmd.hear(/^(?:–ø—Ä–∞–≤–∞|prava)\s([0-9]+)\s([0-9]+)/i, async (message, bot) => { 
if(message.senderId !== 376231311 && message.senderId !== 517521841) return;
{ 
let user = users.find(x=> x.uid === Number(message.args[1])); 
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 

user.RIGHT = message.args[2];
await bot(`–≤—ã —Å–º–µ–Ω–∏–ª–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é –∏–≥—Ä–æ–∫—É @id${user.id} (${user.tag})`);
} 
});

cmd.hear(/^(?:—Å–æ—Å—Ç–∞–≤|–∫–æ–º–∞–Ω–¥–∞|team)$/i, async (message, bot) => {
	message.user.foolder += 1;
let text = ``;
users.map(e => {if(e.RIGHT == 5) text += `üî∂ [ID: ${e.uid}] @id${e.id} (${e.tag}) [–°–æ–∑–¥–∞—Ç–µ–ª—å]\n`})
users.map(e => {if(e.RIGHT == 4) text += `üî∂ [ID: ${e.uid}] @id${e.id} (${e.tag}) [–ì–ª-–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä]\n`})
users.map(e => {if(e.RIGHT == 3) text += `üî∏ [ID: ${e.uid}] @id${e.id} (${e.tag}) [–ê–¥–º–∏–Ω]\n`})
users.map(e => {if(e.RIGHT == 2) text += `üî∏ [ID: ${e.uid}] @id${e.id} (${e.tag}) [VIP]\n`})

return bot(`‚ú≥ –°–æ—Å—Ç–∞–≤:
${text}`)
});

cmd.hear(/^(?:–ø—Ä–∏–±–∞–≤–∏—Ç—å|–ø—Ä–±|–ø—Ä–∏–±)\s([0-9]+)\s(.*)\s(.*)$/i, async (message, bot) =>{
if(message.user.RIGHT < 4) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤`);
message.args[3] = message.args[3].replace(/(\.|\,)/ig, '');
message.args[3] = message.args[3].replace(/(–∫|k)/ig, '000');
message.args[3] = message.args[3].replace(/(–º|m)/ig, '000000');
message.args[3] = Math.floor(Number(message.args[3]));
if(message.args[3] <= 0) return;

let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);
if(/(–±–∞–ª–∞–Ω—Å|–±–∞–ª|bal|balance)/i.test(message.args[2])) {
user.balance += message.args[3];
return bot(`–í—ã –¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É "@id${user.id} (${user.tag})" ${utils.sp(message.args[3])}$ –Ω–∞ –±–∞–ª–∞–Ω—Å`);
}
if(/(–±–∏—Ç–∫–æ–∏–Ω|–±–∏—Ç|btc|bitcoin)/i.test(message.args[2])) {
user.btc += message.args[3];
return bot(`–í—ã –¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É "@id${user.id} (${user.tag})" ${utils.sp(message.args[3])} –±–∏—Ç–∫–æ–∏–Ω–æ–≤`)
}
if(/(—Ä–µ–π—Ç–∏–Ω–≥|—Ä–µ–π—Ç|rating)/i.test(message.args[2])) {
user.rating += message.args[3];
return bot(`–í—ã –¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É "@id${user.id} (${user.tag})" ${utils.sp(message.args[3])} —Ä–µ–π—Ç–∏–Ω–≥–∞`)
}
if(/(–±–∞–Ω–∫|bank)/i.test(message.args[2])) {
user.bank += message.args[3];
return bot(`–í—ã –¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É "@id${user.id} (${user.tag})" ${utils.sp(message.args[3])} –≤ –±–∞–Ω–∫`)
}
});

cmd.hear(/^(?:–∑–∞–±—Ä–∞—Ç—å)\s([0-9]+)\s([^]+)\s(.*)$/i, async (message, bot) =>{
	if(message.user.RIGHT < 4) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤`);
	let user = users.find(x=> x.uid === Number(message.args[1]));
	if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);
	let type = null;
	let text = ``;
	let str = `–±–∞–ª–∞–Ω—Å–∞`;
	if(/(–±–∞–ª–∞–Ω—Å|–±–∞–ª|bal|balance)/i.test(message.args[2])) {
		type = user.balance;
		text = `–£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥`;
		str = `–±–∞–ª–∞–Ω—Å–∞`
	}
	if(/(–±–∏—Ç–∫–æ–∏–Ω|–±–∏—Ç|btc|bitcoin)/i.test(message.args[2])) {
		type = user.btc;
		text = `–£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –±–∏—Ç–∫–æ–∏–Ω–æ–≤`;
		str = `–±–∏—Ç–∫–æ–∏–Ω–∞`
	}
	if(/(—Ä–µ–π—Ç–∏–Ω–≥|—Ä–µ–π—Ç|rating)/i.test(message.args[2])) {
		type = user.rating;
		text = `–£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞`;
		str = `—Ä–µ–π—Ç–∏–Ω–≥–∞`
	}
	if(/(–±–∞–Ω–∫|bank)/i.test(message.args[2])) {
		type = user.bank;
		text = `–£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –≤ –±–∞–Ω–∫–µ`;
		str = `–±–∞–Ω–∫–µ`
		}
		message.args[3] = message.args[3].replace(/(\.|\,)/ig, '');
		message.args[3] = message.args[3].replace(/(–∫|k)/ig, '000');
		message.args[3] = message.args[3].replace(/(–º|m)/ig, '000000');
		message.args[3] = message.args[3].replace(/(–≤—Å–µ|–≤—Å—ë)/ig, type); 
		message.args[3] = Math.floor(Number(message.args[3]));
		if(message.args[3] <= 0) return;
		if(type < message.args[3]) return bot(`${text}`);
		
	if(type == user.balance) user.balance -= message.args[3];
	if(type == user.btc) user.btc -= message.args[3];
	if(type == user.rating) user.rating -= message.args[3];
	if(type == user.bank) user.bank -= message.args[3];
	return bot(`–í—ã –∑–∞–±—Ä–∞–ª–∏  —É –∏–≥—Ä–æ–∫–∞ "@id${user.id} (${user.tag})" ${utils.sp(message.args[3])}$ —Å ${str}`);
});
	
cmd.hear(/^(?:—Å–æ–∑–¥–∞—Ç—å)\s?([0-9]+)?\s?([^\s	].*)?\s?([^\s	].*)?/i, async (message, bot) => {
	if(message.user.RIGHT < 4) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤`);
	message.user.foolder += 1;
		if(!message.args[1]) return message.reply(`–ü—Ä–∏–º–µ—Ä - C–æ–∑–¥–∞—Ç—å (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π) (—Å—É–º–º–∞)`);
		if(!message.args[2]) return message.reply(`–ü—Ä–∏–º–µ—Ä - C–æ–∑–¥–∞—Ç—å (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π) (—Å—É–º–º–∞)`);
		 
		let balance = parserInt(message.args[2]); 
		let activ = Number(message.args[1]);

		var result       = '';
		        var words        = '0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM';
		        var max_position = words.length - 1;
		            for( i = 0; i < 8; ++i ) {
		                position = Math.floor ( Math.random() * max_position );
		                result = result + words.substring(position, position + 1);
		    }
		if(!promo[result]){
		            	promo[result] = {
		            		balance: Number(balance),
		            		activ: activ,
		            		users: {}
		            	}
		}else{
			return message.reply(`[Error] –ü–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–¥ –µ—â–µ —Ä–∞–∑.`);
		}
		 

		return message.reply(`
			üìù - –ø—Ä–æ–º–æ–∫–æ–¥ ${result}
			‚úâ - –ê–∫—Ç–∏–≤–∞—Ü–∏–π: ${activ}
			üí∏ - –°—É–º–º–∞: ${spaces(balance)}$  
			`);

});




cmd.hear(/^(?:–ø—Ä–æ–º–æ–∫–æ–¥)\s([^]+)$/i, async (message, bot) => {
	message.user.foolder += 1;

	if(!message.args[1]) return message.reply(`–ü—Ä–∏–º–µ—Ä - –ø—Ä–æ–º–æ–∫–æ–¥ (–∫–æ–¥)`);
	let promos = message.args[1];
	if(!promo[message.args[1]]) return message.reply(`–ù–∞–≤–µ—Ä–Ω–æ–µ, –ø—Ä–æ–º–æ–∫–æ–¥ –º–Ω–æ–≥–æ —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏ –æ–Ω —Ç–µ–ø–µ—Ä—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!`);
	
	if(!promo[message.args[1]].users[message.senderId]){

		if(promo[promos].balance){ 
			let activ = promo[promos].activ - 1;
			if(!promo[promos].users[message.senderId]){
				promo[promos].users[message.senderId] = {
					activ: true
				}
			}
			message.user.balance += Number(promo[promos].balance);
			let coi = Number(promo[promos].balance);
			promo[promos].activ -= 1;
			if(promo[promos].activ == 0){
				delete promo[promos];
			}
			return message.reply(`‚ñ´ –¢—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª(–∞) –ø—Ä–æ–º–æ–∫–æ–¥.\nüí≤ –í—ã –Ω–∞—à–ª–∏: ${spaces(coi)}$\n‚úâ –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: ${promo[promos].activ} \n\n‚ùá –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∏—à—å 1 —Ä–∞–∑ `, {attachment: promos});
		}
	}else{
		return message.reply(`–ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∏—à—å 1 —Ä–∞–∑`, {attachment: promos});
	}
});	
cmd.hear(/^(?:–ú—Å–æ–∑–¥–∞—Ç—å)\s([^]+)\s([^]+)\s([0-9]+)/i, async (message, bot) => { 
if(message.user.RIGHT < 4) return bot(`–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤`); 
message.args[1] = message.args[1].replace(/(\.|\,)/ig, ''); 
message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000'); 
message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000'); 
if(!message.args[1]) return message.reply(`–ü—Ä–∏–º–µ—Ä - –úC–æ–∑–¥–∞—Ç—å (—Å—É–º–º–∞) (–Ω–∞–∑–≤–∞–Ω–∏–µ) (–∞–∫—Ç–∏–≤–∞—Ü–∏–π)`); 
if(!message.args[2]) return message.reply(`–ü—Ä–∏–º–µ—Ä - –úC–æ–∑–¥–∞—Ç—å (—Å—É–º–º–∞) (–Ω–∞–∑–≤–∞–Ω–∏–µ) (–∞–∫—Ç–∏–≤–∞—Ü–∏–π)`); 
if(message.args[3] <= 0) return message.reply(`–ê–∫—Ç–∏–≤–∞—Ü–∏–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1`); 
 
let balance = Math.floor(Number(message.args[1])); 
let result = message.args[2]; 
 
if(!promo[message.args[1]]){ 
promo[result] = { 
balance: Number(balance), 
activ: message.args[3], 
users: {} 
} 
}else{ 
return message.reply(`[Error] –ü–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–¥ –µ—â–µ —Ä–∞–∑.`); 
} 

return message.reply(` 
üìù - –ø—Ä–æ–º–æ–∫–æ–¥ ${result} 
‚úâ - –ê–∫—Ç–∏–≤–∞—Ü–∏–π: ${message.args[3]} 
üí∏ - –°—É–º–º–∞: ${spaces(balance)}$ 
`); 
});